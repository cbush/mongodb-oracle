{
  "https://www.mongodb.com/docs/mongodb-analyzer/current/install/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Install the MongoDB Analyzer # Overview Learn how to install the MongoDB Analyzer in your .NET application. # Installation To install the MongoDB Analyzer, run the following command from the root directory of your .NET project: `| Install-Package MongoDB.Analyzer -Version 1.2.0 |\n| ----------------------------------------------- | ` To view the NuGet page for the MongoDB Analyzer, see[MongoDB.Analyzer](https://www.nuget.org/packages/MongoDB.Analyzer) on NuGet Gallery. To learn more about installing NuGet packages from the command line, see[NuGet Powershell Reference](https://docs.microsoft.com/en-us/nuget/reference/powershell-reference)from Microsoft. To learn more about installing NuGet packages from Visual Studio, see[Install and manage packages in Visual Studio using the NuGet Package Manager](https://docs.microsoft.com/en-us/nuget/consume-packages/install-use-packages-visual-studio)from Microsoft. ← [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/ \"Previous Section\")[Analyze Your Code](https://mongodb.com/docs/mongodb-analyzer/current/analyze-code/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/analyze-code/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Analyze Your Code On this page * [Overview](#overview)\n* [Use the MongoDB Analyzer From the Command Line](#use-the-mongodb-analyzer-from-the-command-line) ## Overview Learn how to use the MongoDB Analyzer to analyze your MongoDB .NET driver code. The MongoDB Analyzer can analyze expressions created with the following frameworks: * [Builders Class](https://mongodb.com/docs/mongodb-analyzer/current/code-type/builders/#std-label-mongodb-analyzer-analyze-builders)\n* [Language Integrated Query (LINQ)](https://mongodb.com/docs/mongodb-analyzer/current/code-type/linq/#std-label-mongodb-analyzer-analyze-linq) ## Use the MongoDB Analyzer From the Command Line To run the MongoDB Analyzer from the command line and save your results to a[SARIF](https://github.com//microsoft/sarif-tutorials/blob/main/docs/1-Introduction.md)format file, perform the following actions: * Install the MongoDB Analyzer as described in the [Install](https://mongodb.com/docs/mongodb-analyzer/current/install/#std-label-mongodb-analyzer-install) guide.\n* Execute the following command: `| dotnet build -property:ErrorLog=<Path to save your MongoDB Analyzer report> |\n| --------------------------------------------------------------------------- | ` To learn more about `dotnet build`, see[.NET Fundamentals](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build)from Microsoft. To learn more about the `ErrorLog` setting, see[Error and Warning Options](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/errors-warnings#errorlog)from Microsoft. ← [Install the MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/install/ \"Previous Section\")[Analyze Builders Expressions](https://mongodb.com/docs/mongodb-analyzer/current/code-type/builders/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/issues-and-help/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Issues & Help The MongoDB developer community is highly engaged and encompasses users with a range of Visual Studio Code experience. Often, the quickest way to get support for general questions is through the [MongoDB Community Forums.](https://www.mongodb.com/community/forums/tags/c/data/developer-tools/49/vscode) Refer to our [support channels](https://www.mongodb.com/docs/manual/support/) documentation for more information. ## Bugs / Feature Requests If you think you've found a bug or want to request a new MongoDB Analyzer feature, please open a case in our issue management tool, JIRA: * [Create an account and login.](https://jira.mongodb.org)\n* Navigate to [the VS project.](https://jira.mongodb.org/browse/VS)\n* Click **Create**. Please provide as much information as possible about the issue and the steps to reproduce it. Bug reports in JIRA for the Visual Studio project are **public**. If you've identified a security vulnerability in the analyzer or any other MongoDB project, please report it according to the instructions found in the[Create a Vulnerability Report](https://www.mongodb.com/docs/manual/tutorial/create-a-vulnerability-report/) page. ## Pull Requests We're happy to accept contributions to help improve the analyzer. We will review user contributions to ensure they meet the standards of the codebase. Please include documentation and tests in your pull request. To get started, check out the source and work on a branch: `| git clone https://github.com/mongodb/mongo-csharp-analyzer.git |\n| -------------------------------------------------------------- |\n| cd mongo-csharp-analyzer                                       |\n| git checkout -b myNewFeature                                   | ` ← [What's New](https://mongodb.com/docs/mongodb-analyzer/current/whats-new/ \"Previous Section\")",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/whats-new/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # What's New On this page * [What's New in 1.2](#what-s-new-in-1.2)\n* [What's New in 1.1](#what-s-new-in-1.1)\n* [What's New in 1.0](#what-s-new-in-1.0) Learn what's new in: * [Version 1.2](#std-label-mongodb-analyzer-whats-new-1.2)\n* [Version 1.1](#std-label-mongodb-analyzer-whats-new-1.1)\n* [Version 1.0](#std-label-mongodb-analyzer-whats-new-1.0) ## What's New in 1.2 New features of the 1.2 MongoDB Analyzer release include: * Limited support for builders for Atlas Search.\n* Default LINQ provider version set to `V3` in driver versions 2.19.0 and higher.\n* The `using MongoDB.Driver.Linq;` statement is no longer required to analyze LINQ expressions on macOS. ## What's New in 1.1 New features of the 1.1 MongoDB Analyzer release include: * `EnableVariableTracking` config option to track and compose variables holding builders definitions\n* Improvements to Fluent API support\n* Support for LINQ Query syntax\n* Support for IndexKeys builders\n* Support for Projection builders ## What's New in 1.0 The initial release. ← [Frequently Asked Questions](https://mongodb.com/docs/mongodb-analyzer/current/faq/ \"Previous Section\")[Issues & Help](https://mongodb.com/docs/mongodb-analyzer/current/issues-and-help/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/known-issues/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Known Issues We are consistently working to improve the MongoDB Analyzer, but we have identified certain issues with its current functionality. If you identify an issue that is not on this page, see the[Issues & Help](https://mongodb.com/docs/mongodb-analyzer/current/issues-and-help/#std-label-mongodb-analyzer-issues-and-help) page for instructions on how to get help or report the issue. ## Error List Window on macOS Visual Studio for macOS does not have the Error List window feature. If you are using the MongoDB Analyzer in Visual Studio for macOS, you will not be able to see output from the MongoDB Analyzer, such as MongoDB Query API translations, in one location. ← [Configure the MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/configuration/ \"Previous Section\")[Frequently Asked Questions](https://mongodb.com/docs/mongodb-analyzer/current/faq/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # MongoDB Analyzer ## Overview The [MongoDB Analyzer](https://github.com/mongodb/mongo-csharp-analyzer) is a tool that helps you understand the following about your MongoDB .NET driver code: * How your code translates into the MongoDB Query API\n* If your code includes unsupported LINQ or builder expressions The MongoDB Analyzer can analyze the following groups of .NET driver expressions: * [Builders](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/builders/)\n* [LINQ](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/linq/) Read the following sections of this guide to learn how to install the MongoDB Analyzer, how to use its features, and how to configure it: * [Install the extension](https://mongodb.com/docs/mongodb-analyzer/current/install/#std-label-mongodb-analyzer-install)\n* [Analyze your code](https://mongodb.com/docs/mongodb-analyzer/current/analyze-code/#std-label-mongodb-analyzer-analyze-code)\n* [Configure the extension](https://mongodb.com/docs/mongodb-analyzer/current/configuration/#std-label-mongodb-analyzer-configuration) To view known issues with the MongoDB Analyzer's current functionality, see the [Known Issues](https://mongodb.com/docs/mongodb-analyzer/current/known-issues/#std-label-mongodb-analyzer-known-issues) page. To view answers to frequently asked questions, see the [FAQ](https://mongodb.com/docs/mongodb-analyzer/current/faq/#std-label-mongodb-analyzer-faq) page. To view the differences between versions of the extension, see the [What's New](https://mongodb.com/docs/mongodb-analyzer/current/whats-new/#std-label-mongodb-analyzer-changelog) page. For further support, see the [Issues and Help](https://mongodb.com/docs/mongodb-analyzer/current/issues-and-help/#std-label-mongodb-analyzer-issues-and-help) page. ## Note ### Roslyn Analyzer The MongoDB Analyzer is a Roslyn Analyzer. To learn more about Roslyn Analyzers, see[Overview of Source Code Analysis](https://docs.microsoft.com/en-us/visualstudio/code-quality/roslyn-analyzers-overview?view=vs-2022)from Microsoft. [Install the MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/install/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/faq/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Frequently Asked Questions On this page * [Does the MongoDB Analyzer support JetBrains Rider?](#does-the-mongodb-analyzer-support-jetbrains-rider-)\n* [Is the MongoDB Analyzer a Roslyn Analyzer?](#is-the-mongodb-analyzer-a-roslyn-analyzer-)\n* [Does the MongoDB Analyzer Use Custom Serialization Settings?](#does-the-mongodb-analyzer-use-custom-serialization-settings-)\n* [Does the MongoDB Analyzer use custom LINQ settings?](#does-the-mongodb-analyzer-use-custom-linq-settings-)\n* [What information does the MongoDB Analyzer collect through telemetry?](#what-information-does-the-mongodb-analyzer-collect-through-telemetry-)\n* [Your Code](#your-code)\n* [Your Environment](#your-environment)\n* [Your MongoDB Analyzer Configuration](#your-mongodb-analyzer-configuration) ## Does the MongoDB Analyzer support JetBrains Rider? No, the MongoDB Analyzer does not officially support JetBrains Rider. We have internally tested the MongoDB Analyzer on JetBrains Rider and have seen some success though. We welcome you to test the MongoDB Analyzer on your JetBrains Rider deployment, and if you encounter any problems feel free to file an[issue on JIRA](https://jira.mongodb.org/browse/VS)or submit a pull request on the[MongoDB Analyzer Github repository.](https://github.com/mongodb/mongo-csharp-analyzer) ## Is the MongoDB Analyzer a Roslyn Analyzer? Yes, the MongoDB Analyzer is a Roslyn Analyzer. To learn more about Roslyn Analyzers, see[Overview of Source Code Analysis](https://docs.microsoft.com/en-us/visualstudio/code-quality/roslyn-analyzers-overview?view=vs-2022)from Microsoft. ## Does the MongoDB Analyzer Use Custom Serialization Settings? No, the MongoDB Analyzer does not use the custom serialization settings you specify for your MongoDB .NET driver. To learn more about custom serialization settings, see[Data Formats](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/data-formats/)in the .NET driver documentation. ## Does the MongoDB Analyzer use custom LINQ settings? No, the MongoDB Analyzer does not use custom LINQ settings. To learn more about custom LINQ settings, see[How to add custom methods for LINQ queries](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/how-to-add-custom-methods-for-linq-queries)from Microsoft. ## What information does the MongoDB Analyzer collect through telemetry? When you have telemetry enabled the MongoDB Analyzer collects and sends anonymized information to MongoDB Inc. The following subsections list all information the MongoDB Analyzer collects. To learn how to disable telemetry, see the[Configuration](https://mongodb.com/docs/mongodb-analyzer/current/configuration/#std-label-mongodb-analyzer-configuration-telemetry)guide. ### Your Code The following is the information the MongoDB Analyzer collects about your code: * The number of user-defined data types in your[mapping](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/class-mapping/)\n* The number of unsupported LINQ and builder expressions the MongoDB Analyzer found in your code\n* The number of LINQ and builder expressions the MongoDB Analyzer found in your code\n* The number of MQL expressions the MongoDB Analyzer found in your code\n* How long it took for the MongoDB Analyzer to analyze your code\n* The number of exceptions the MongoDB Analyzer encountered analyzing your code\n* The length of the syntax tree the MongoDB Analyzer processed ### Your Environment The following is the information the MongoDB Analyzer collects about your environment:\n\n ### Your MongoDB Analyzer Configuration The following is the information the MongoDB Analyzer collects about your MongoDB Analyzer configuration: * If you have logs enabled for the MongoDB Analyzer\n* The LINQ provider version your MongoDB Analyzer uses ← [Known Issues](https://mongodb.com/docs/mongodb-analyzer/current/known-issues/ \"Previous Section\")[What's New](https://mongodb.com/docs/mongodb-analyzer/current/whats-new/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/configuration/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Configure the MongoDB Analyzer On this page * [Overview](#overview)\n* [Configuration](#configuration)\n* [Options](#options)\n* [Telemetry](#telemetry) ## Overview Learn how to configure the MongoDB Analyzer in your .NET project and what configuration options are available. ## Configuration To configure the MongoDB Analyzer, perform the following actions: 1. Install the MongoDB Analyzer as described in[the installation guide.](https://mongodb.com/docs/mongodb-analyzer/current/install/#std-label-mongodb-analyzer-install)\n2. Create a file specifying your configuration for the MongoDB Analyzer named`mongodb.analyzer.json`.  \n## Important  \n### Naming  \nYou must name your configuration file `mongodb.analyzer.json`.\n3. Add your configuration to your `mongodb.analyzer.json` file.  \nThe following sample configuration makes the MongoDB Analyzer use the[LINQ3](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/linq/)provider.  \n`| { \"DefaultLinqVersion\": \"V3\" } |  \n| ------------------------------ |  \n`\n4. Add the following to the `.csproj` file for your .NET application within the `Project` tag:  \n```  \n<ItemGroup>  \n  <AdditionalFiles Include=\"<path to your mongodb.analyzer.json file>\" />  \n</ItemGroup>  \n``` ## Note ### Configuration is Optional If you do not specify a configuration file, the MongoDB Analyzer uses the default value for all[configuration options.](#std-label-mongodb-analyzer-configuration-options) To learn more about .NET project files, see[Understanding the Project File](https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/web-deployment-in-the-enterprise/understanding-the-project-file)from Microsoft. To learn more about the `AdditionalFiles` tag, see[Using Additional Files](https://github.com//dotnet/roslyn/blob/main/docs/analyzers/Using%20Additional%20Files.md)in the Roslyn documentation. ## Options The following is a description of all configuration options supported by the MongoDB Analyzer:\n\n To learn more about the configuration options the MongoDB Analyzer supports, see the [MongoDB Analyzer source code.](https://github.com//master/src/MongoDB.Analyzer/Core/Settings/SettingsHelper.cs) ### Telemetry When the MongoDB Analyzer analyzes your source code, the tool by default collects and sends anonymized information to MongoDB Inc. to improve products. To disable this feature, specify the following option in your configuration file: ``` \"SendTelemetry\": false \n``` To view a complete list of all information collected by the MongoDB Analyzer when you have enabled telemetry, see the [FAQ](https://mongodb.com/docs/mongodb-analyzer/current/faq/#std-label-mongodb-analyzer-all-telemetry-collected)page. To learn more about how MongoDB Inc. uses collected data, see the[Privacy Policy.](https://www.mongodb.com/legal/privacy-policy) ← [Analyze LINQ Expressions](https://mongodb.com/docs/mongodb-analyzer/current/code-type/linq/ \"Previous Section\")[Known Issues](https://mongodb.com/docs/mongodb-analyzer/current/known-issues/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/code-type/builders/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Analyze Builders Expressions On this page * [Overview](#overview)\n* [Translate into the MongoDB Query API](#translate-into-the-mongodb-query-api)\n* [Analyze Builders in Visual Studio](#analyze-builders-in-visual-studio)\n* [Simple Builder Expressions](#simple-builder-expressions)\n* [Track Builder Variables](#track-builder-variables)\n* [Fluent API](#fluent-api) ## Overview A **builder** is a class provided by the .NET driver to help you construct common operations like queries and updates. To learn more about builders, see[Operations with Builders](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/builders/) in the .NET driver documentation. ## Translate into the MongoDB Query API Use the MongoDB Analyzer to translate your builder expressions into the MongoDB Query API. Click the following tabs to see an example of a builder expression and its corresponding MongoDB Query API translation: ## Note ### Variable Names The MongoDB Query API translations generated by the MongoDB Analyzer contain variable names from your .NET driver code. The .NET driver replaces these variable names with their corresponding values when your application communicates with MongoDB. ## Analyze Builders in Visual Studio To analyze your builder expressions in Visual Studio, perform the following actions: 1. Install the MongoDB Analyzer as described in the [Install](https://mongodb.com/docs/mongodb-analyzer/current/install/#std-label-mongodb-analyzer-install)guide.\n2. Write a builder expression with the .NET driver\n3. Move your mouse over the ... annotation beneath the first method of your builder expression to display an information message that contains the MongoDB Query API translation. ### Simple Builder Expressions Click on the following corresponding tab to see a builder expression with or without an information message displayed: ### Track Builder Variables The MongoDB Analyzer supports builder variable tracking and composition. You can combine multiple builder expressions with [logical operators](https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators)and view the MongoDB Query API translation in the information message. Click on the following corresponding tab to see a composed builder variable with or without an information message displayed: ### Fluent API The MongoDB Analyzer supports the Fluent API using builder classes in the .NET driver. You can create a sequence of chained builder methods and view the MongoDB Query API translation in the information message. Click on the following corresponding tab to see an operation using chained builder methods with or without an information message displayed: ## Tip ### Error List Panel If you are using Visual Studio for Windows, you can view the output from the MongoDB Analyzer in the Error List window. To learn more, see[Error List Window](https://docs.microsoft.com/en-us/visualstudio/ide/reference/error-list-window?view=vs-2022)from Microsoft. ← [Analyze Your Code](https://mongodb.com/docs/mongodb-analyzer/current/analyze-code/ \"Previous Section\")[Analyze LINQ Expressions](https://mongodb.com/docs/mongodb-analyzer/current/code-type/linq/ \"Next Section\") →",
  "https://www.mongodb.com/docs/mongodb-analyzer/current/code-type/linq/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/) # Analyze LINQ Expressions On this page * [Overview](#overview)\n* [Translate into the MongoDB Query API](#translate-into-the-mongodb-query-api)\n* [Analyze LINQ in Visual Studio](#analyze-linq-in-visual-studio)\n* [Simple LINQ Expressions](#simple-linq-expressions)\n* [Unsupported LINQ Expressions](#unsupported-linq-expressions)\n* [Analyze LINQ3](#analyze-linq3) ## Overview **LINQ** is a query syntax included in the C# language. The .NET driver can translate a subset of LINQ expressions into MongoDB aggregation pipelines. To learn more about LINQ, see the following resources: * [LINQ](https://www.mongodb.com/docs/drivers/csharp/current/fundamentals/linq/) in the .NET driver documentation\n* [LINQ](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/)in the Microsoft C# guide To learn more about aggregation pipelines, see[Aggregation](https://www.mongodb.com/docs/manual/aggregation/) in the MongoDB manual. ## Note ### Runtime Differences Although the MongoDB Query API translations generated by the MongoDB Analyzer have the same[query shape](https://www.mongodb.com/docs/manual/reference/glossary/#std-term-query-shape)as your runtime .NET driver queries, there may be slight differences due to the following factors: * Your Serialization Settings\n* Your LINQ Settings The difference between the translations the MongoDB Analyzer generates and your queries at runtime should not impact your ability to analyze and debug your code. To learn more about serialization and LINQ settings, see the[FAQ](https://mongodb.com/docs/mongodb-analyzer/current/faq/#std-label-mongodb-analyzer-faq-custom-serialization)page. Use the MongoDB Analyzer to learn the following about your LINQ expressions: * How your LINQ expressions translate into the MongoDB Query API\n* If any of your LINQ expressions are not supported ## Translate into the MongoDB Query API Click the following tabs to see an example of a LINQ expression and its corresponding MongoDB Query API translation: ## Note ### Variable Names The MongoDB Query API translations generated by the MongoDB Analyzer contain variable names from your .NET driver code. The .NET driver replaces these variable names with their corresponding values when your application communicates with MongoDB. ## Analyze LINQ in Visual Studio To analyze your LINQ expressions in Visual Studio, perform the following actions: 1. Install the MongoDB Analyzer as described in the [Install](https://mongodb.com/docs/mongodb-analyzer/current/install/#std-label-mongodb-analyzer-install)guide.\n2. Write a LINQ expression with the .NET driver.\n3. Move your mouse over the ... annotation beneath the first method of your LINQ expression to display an information message that contains the MongoDB Query API translation. ### Simple LINQ Expressions The MongoDB Analyzer analyzes LINQ expressions in the following syntax types: * Method syntax\n* Query syntax Click on the following corresponding tab to see a LINQ expression written in method syntax with or without an information message displayed: Click on the following corresponding tab to see a LINQ expression written in query syntax with or without an information message displayed: ### Unsupported LINQ Expressions If your LINQ expression is not supported, the MongoDB Analyzer outputs a`NotSupportedLinqExpression` warning. Click the following tabs to see a code snippet containing an unsupported LINQ expression and the corresponding warning message displayed by the MongoDB Analyzer: ## Tip ### Error List Panel If you are using Visual Studio for Windows, you can view the output from the MongoDB Analyzer in the Error List window. To learn more, see[Error List Window](https://docs.microsoft.com/en-us/visualstudio/ide/reference/error-list-window?view=vs-2022)from Microsoft.\n\n ### Analyze LINQ3 To analyze a LINQ3 expression, you must configure the MongoDB Analyzer to use the LINQ3 provider. To learn how to configure your LINQ provider, see the[configuration](https://mongodb.com/docs/mongodb-analyzer/current/configuration/#std-label-mongodb-analyzer-configuration) guide. ## Important ### Expressions Supported Only by LINQ3 If your .NET driver version supports LINQ3 but you configure your MongoDB Analyzer to use the default LINQ provider (LINQ2), the MongoDB Analyzer informs you if your LINQ expression is supported by LINQ3 but not LINQ2. Click the tabs to see a LINQ expression supported by LINQ3 but not LINQ2 and the corresponding warning output by the MongoDB Analyzer: To view examples of expressions the .NET driver only supports with the LINQ3 provider, see the[MongoDB Analyzer Github repository.](https://github.com/mongodb/mongo-csharp-analyzer/blob/main/tests/MongoDB.Analyzer.Tests.Common.TestCases/Linq/NotSupportedLinq2.cs) ← [Analyze Builders Expressions](https://mongodb.com/docs/mongodb-analyzer/current/code-type/builders/ \"Previous Section\")[Configure the MongoDB Analyzer](https://mongodb.com/docs/mongodb-analyzer/current/configuration/ \"Next Section\") →"
}