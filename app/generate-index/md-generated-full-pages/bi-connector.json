{
  "https://www.mongodb.com/docs/bi-connector/master/atlas-bi-connector/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Enable BI Connector in Atlas You can host the MongoDB Connector for Business Intelligence in MongoDB Atlas. To learn how to enable and connect to an Atlas-hosted BI Connector, see[Connect via BI Connector for Atlas.](https://docs.atlas.mongodb.com/bi-connection/#std-label-bi-connection) ## Note To install the MongoDB Connector for Business Intelligence locally instead, see the[Installation Guides.](https://mongodb.com/docs/bi-connector/master/installation/#std-label-installation-guides) You can also deploy the MongoDB Connector for Business Intelligence to[MongoDB Cloud Manager](https://www.mongodb.com/docs/cloud-manager/tutorial/deploy-bi-connector/) or[MongoDB Ops Manager.](https://www.mongodb.com/docs/ops-manager/current/tutorial/deploy-bi-connector/)",
  "https://www.mongodb.com/docs/bi-connector/master/": " # What is the MongoDB Connector for BI Traditional business intelligence tools are designed to work with tabular, row-and-column data. The MongoDB Connector for BI allows you query MongoDB data with SQL using tools such as Tableau, Power BI, and Excel. [Enable BI Connector in Atlas](https://www.mongodb.com/docs/bi-connector/current/atlas-bi-connector/)[Install Self-Managed BI Connector](https://www.mongodb.com/docs/bi-connector/current/installation/) ![MongoDB Connector for BI homepage hero image](https://mongodb.com/docs/bi-connector/master/images/hero.png)",
  "https://www.mongodb.com/docs/bi-connector/master/local-quickstart/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Quick Start Guide for Windows On this page * [Prerequisites](#prerequisites)\n* [Getting Started](#getting-started) _Estimated Time to Complete: \\~15 minutes_ This guide provides step-by-step instructions to quickly set up the required components for the BI Connector on your local system using aODBC driver. This guide is recommended for users who would like to experiment with the BI Connector or create a local environment for development or testing on Microsoft Windows. In this tutorial you will: * Start a local MongoDB [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/)process\n* Start a local BI Connector [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/)process\n* Install the ODBC driver and create a[data source name](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) (DSN)\n* Connect with a BI tool of your choice ## Prerequisites * MongoDB installed on your local system. Download the latest production release of MongoDB from the [MongoDB Download Center](https://www.mongodb.com/download-center/community) and install it. For detailed instructions, see [Install MongoDB.](https://www.mongodb.com/docs/manual/installation/)\n* MongoDB Connector for BI installed on your local system. Download the latest production release of BI Connector from the [MongoDB Download Center](https://www.mongodb.com/download-center/bi-connector) and install it. For detailed installation instructions, see [Install BI Connector On Premises.](https://mongodb.com/docs/bi-connector/master/installation/)\n* The [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) installed on your local system.\n* [Visual C++ Redistributable for Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145)\n* A BI tool of your choice, such as [Power BI](https://mongodb.com/docs/bi-connector/master/connect/powerbi/) or [Qlik Sense.](https://mongodb.com/docs/bi-connector/master/connect/qlik/) ## Getting Started 1 ### Start a `mongod` Process If [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/) is not already running on your local system, start it from the command line in the MongoDB program directory. You can create the default data directory at `C:\\data\\db` or specify a different directory with the `--dbpath` option. `| mkdir C:\\data\\db |\n| ---------------- | ` ``` \"C:\\Program Files\\MongoDB\\Server\\3.6\\bin\\mongod.exe\" \n``` 2 ### Import a Sample Dataset Make sure your MongoDB instance has at least one collection with some data for testing purposes. A sample dataset with United States ZIP code information (3.2 MB) is available at[media.mongodb.org/zips.json](http://media.mongodb.org/zips.json). ## Note To save the ZIP code dataset directly to disk, right click on the link and select `\"Save Link As...\"` This tutorial assumes that the saved file is in the directory`C:\\data`. Import the dataset into MongoDB. The following command imports the `zips.json` file into a collection named `zips` in a database named `test`: ``` \"C:\\Program Files\\MongoDB\\Server\\3.6\\bin\\mongoimport.exe\" --db test --collection zips --file \"C:\\data\\zips.json\" \n``` See the MongoDB manual for help with [mongoimport](https://www.mongodb.com/docs/manual/reference/program/mongoimport/), the [mongo shell program](https://www.mongodb.com/docs/manual/reference/program/mongo/), and [CRUD operations.](https://www.mongodb.com/docs/manual/crud/) 3 ### Start a `mongosqld` Process\n\n ``` \"C:\\Program Files\\MongoDB\\Connector for BI\\2.3\\bin\\mongosqld.exe\" \n``` With no command line options, `mongosqld` generates a schema from all the user-accessible collections in your MongoDB instance. For more information about specifying database namespaces for BI Connectorto work with, see the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) reference page. If `mongosqld` starts correctly, the last line of on-screen output declares the namespaces it has found for its schema. For example, the following output indicates that `mongosqld` started correctly and sampled the `zips` namespace. ``` [schemaDiscovery] mapped schema for 1 namespaces: \"test\" (1): [\"zips\"] \n``` 4 ### Create a Data Source Name (DSN) Create a System DSN by following instructions in the [tutorial](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/#std-label-create-system-dsn-bi-connector). For the purposes of this local test installation you can leave theUser, Password and Authenticationfields blank, because [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) is running without the[\\--auth](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--auth) option. ![Windows ODBC DSN](https://mongodb.com/docs/bi-connector/master/images/bi-connector/windows-odbc-dsn2.png) When you press the Test button you should see theConnection Successful result. 5 ### Start an SQL Client or BI Tool To learn how to connect from your BI Tool, see[several applications.](https://mongodb.com/docs/bi-connector/master/client-applications/)",
  "https://www.mongodb.com/docs/bi-connector/master/reference/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Reference ← [MySQL JDBC Driver](https://mongodb.com/docs/bi-connector/master/reference/jdbc-driver/ \"Previous Section\")[Configure TLS for BI Connector](https://mongodb.com/docs/bi-connector/master/tutorial/ssl-setup/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/installation/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Install BI Connector On Premises On this page * [Installation Guides](#installation-guides)\n* [Update BI Connector](#update-bi-connector) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. The MongoDB Connector for BI can be installed on premises or hosted in MongoDB Atlas. Follow the guide for your platform below to install the BI Connector, or see[Enable BI Connector in Atlas.](https://mongodb.com/docs/bi-connector/master/atlas-bi-connector/) ## Installation Guides [Install BI Connector on Windows](https://mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-windows/) Instructions for installing the BI Connector on Windows systems. [Install BI Connector on macOS](https://mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-macos/) Instructions for installing the BI Connector on macOS systems. [Install BI Connector on Red Hat Enterprise-based Linux](https://mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-rhel/) Instructions for installing the BI Connector on RHEL-based systems. [Install BI Connector on Debian-based Linux](https://mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-debian/) Instructions for installing the BI Connector on debian-based systems. ## Update BI Connector To update your BI Connector, use the installation guides above to install the latest version of BI Connector for your platform, replacing your existing installation.",
  "https://www.mongodb.com/docs/bi-connector/master/schema-configuration/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Map Relational Schemas to MongoDB Business intelligence tools connect to a data source and, given a fixed tabular schema, allow users to visually explore their data. MongoDB uses a [flexible schema](https://www.mongodb.com/docs/manual/data-modeling/), so some business intelligence tools cannot use MongoDB as a native data source. To use MongoDB with a relational business intelligence tool such as[Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau/), you must define a relational mapping for your MongoDB data. MongoDB Connector for BI provides several methods for creating and managing a relational schema. For complete documentation on BI Connector's schema management options, see the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) reference documentation. ## [Standalone Schema Mode (Cached Sampling)](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-bi-cached-sampling) The default sampling mode which [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) uses to analyze your collections and derive a static schema. In this mode,[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) derives the schema on startup and holds the schema in memory. ## [Auto Schema Mode (Persist a Schema in MongoDB)](https://mongodb.com/docs/bi-connector/master/schema/persist-schema/#std-label-bi-persistent-schema) [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) samples your MongoDB collections and creates a schema at the time of startup and writes it to a MongoDB collection. Available via the [\\--schemaSource](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaSource) option. ## [Use MongoDB Views](https://mongodb.com/docs/bi-connector/master/schema/use-views/#std-label-schema-with-views) [MongoDB views](https://www.mongodb.com/docs/manual/core/views/) allow you to control the display of information from a collection by restricting access to certain fields, renaming fields, sorting data, and other techniques. BI Connector can read data from a view just as it does from a standard collection. ## [Load a Schema from a DRDL File](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) You can generate a text schema for [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to use with the [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) program. You can edit a text schema manually to suit your particular data needs. ## [Resample Schema Data with \"FLUSH SAMPLE\"](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/#std-label-resample-schema-data) If the data in your MongoDB instance changes shape significantly with new fields or collections, you may wish to regenerate the schema BI Connector uses. You can regenerate the schema either by restarting [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) or by issuing the \"FLUSH SAMPLE\" command from within the MySQL shell. ## [Geospatial Data](https://mongodb.com/docs/bi-connector/master/schema/geospatial-data/#std-label-geospatial-data)\n\n ## [Sampling Type Conflicts](https://mongodb.com/docs/bi-connector/master/schema/type-conflicts/#std-label-type-conflict-resolution) Relational databases do not allow dynamically typed columns so when the BI Connector samples data from MongoDB to generate a schema, type conversion conflicts may occur. See this page for more information on how the BI Connector resolves these conflicts and displays data when conflicts are present. ← [Configure Kerberos for BI Connector](https://mongodb.com/docs/bi-connector/master/tutorial/kerberos/ \"Previous Section\")[Standalone Schema Mode (Cached Sampling)](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/components/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # MongoDB Connector for BI Components On this page * [Choosing a Driver](#choosing-a-driver) _Changed in version 2.0_: Version 2.0 of the MongoDB Connector for BI introduces a new architecture that replaces the previous PostgreSQL foreign data wrapper with the new[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld). As a result, the MongoDB Connector for BI no longer requires `mongobiuser` and`mongobischema`. If you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0 by following the steps in [Install BI Connector On Premises.](https://mongodb.com/docs/bi-connector/master/installation/) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. The following tools are available for use with the MongoDB Connector for BI: * [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) generates database schema information for use with the MongoDB Connector for BI.\n* [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) proxies incoming queries between SQL clients and a MongoDB server.\n* [mongotranslate](https://mongodb.com/docs/bi-connector/master/reference/mongotranslate/#mongodb-binary-bin.mongotranslate) translates a given SQL query into a MongoDB [aggregation pipeline.](https://www.mongodb.com/docs/manual/aggregation/)\n* The [MongoDB BI Connector ODBC Driver](https://mongodb.com/docs/bi-connector/master/reference/odbc-driver/#std-label-odbc-driver) provides connectivity between SQL clients and the MongoDB Connector for BI.\n* The [MySQL JDBC Driver](https://mongodb.com/docs/bi-connector/master/reference/jdbc-driver/#std-label-jdbc-driver) provides an alternative connection method for some SQL clients and the MongoDB Connector for BI.\n* The [C Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/#std-label-install-auth-c-plugin) and[JDBC Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-jdbc/#std-label-install-auth-jdbc-plugin)facilitate secure transmission of authentication credentials between[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) and a MySQL client. ## Choosing a Driver Depending on your BI tool of choice, you connect to theBI Connector with the [MongoDB BI Connector ODBC Driver](https://mongodb.com/docs/bi-connector/master/reference/odbc-driver/#std-label-odbc-driver) or with the [MySQL JDBC Driver](https://mongodb.com/docs/bi-connector/master/reference/jdbc-driver/#std-label-jdbc-driver). The following table lists some common BI tools and their compatible drivers:\n\n ← [Schema Management Changes in 2.11](https://mongodb.com/docs/bi-connector/master/schema/schema-management-changes/ \"Previous Section\")[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/what-is-the-bi-connector/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # What is the MongoDB Connector for BI? On this page * [System Components](#system-components)\n* [BI Connector Configurations](#bi-short-configurations)\n* [Hosted Database and BI Connector](#hosted-database-and-bi-short)\n* [Hosted Database and Self-Managed BI Connector](#hosted-database-and-self-managed-bi-short)\n* [Self-Managed Database and BI Connector](#self-managed-database-and-bi-short)\n* [Local Database and BI Connector](#local-database-and-bi-short) Traditional business intelligence tools work with flat, tabular data. These tools aren't sophisticated enough to understand three-dimensional data stored in MongoDB databases. The MongoDB Connector for Business Intelligence (BI) allows you to create queries with SQL to visualize, graph, and report on your three-dimensional MongoDB data using relational business intelligence tools such as [Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau/)and [Power BI.](https://mongodb.com/docs/bi-connector/master/connect/powerbi/) ## Note As an alternative to using third-party data visualization tools and the BI Connector, you can use [MongoDB Charts](https://www.mongodb.com/docs/charts/) to create data visualizations directly from your MongoDB collections. The MongoDB Connector for BI acts as a layer that translates queries and data between a[mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or [mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) instance and your reporting tool. The BI Connectorstores no data, and purely serves to bridge your MongoDB cluster with business intelligence tools. ## System Components The BI Connector deployment includes the following components: BI tool Visualization and reporting tool, such as Tableau and PowerBI. JDBC or ODBC driver Provides a standard method to connect to the BI Connector and MongoDB databases from a BI tool. Depending on what your BI tool supports, you can use JDBC or ODBC drivers to connect to the BI Connector. BI Connector Provides a relational schema and translates SQLqueries between your BI tool and MongoDB. MongoDB database MongoDB database deployment, either a self-managed MongoDB server or hosted MongoDB Atlas cluster. ![Diagram showing that other BI tools communicate with the DSN, which communicates with MongoDB's BI Connector, which in turn communicates with the MongoDB database.](https://mongodb.com/docs/bi-connector/master/images/bi-connector/components-all.jpg) Your **BI tool** and **driver** typically run on your local machine. Your **BI Connector instance** and your **database** can run on your local machine, in a data center, or hosted in the cloud. ## BI Connector Configurations The following table outlines the supported configurations for theBI Connector and MongoDB database deployments: | BI Connector configuration  | Atlas Database (hosted)         | MongoDB Database (self-managed) |\n| --------------------------- | ------------------------------- | ------------------------------- |\n| Atlas BI Connector (hosted) | _Clusters M10 and greater only_ |                                 |\n| BI Connector (self-managed) |                                 |                                 | The following sections describe these configurations: ### Hosted Database and BI Connector In this configuration, your database and BI Connectorapplications both run on MongoDB Atlas, MongoDB's fully-managed database-as-a-service. Databases hosted on MongoDB Atlas natively support the BI Connector. ## Note You must have an M10 or higher MongoDB Atlas cluster to enable the built-in BI Connector.\n\n ![Hosted DB and BI Connector](https://mongodb.com/docs/bi-connector/master/images/bi-connector/components-cloud.jpg) ### Hosted Database and Self-Managed BI Connector In this configuration, your MongoDB database runs on any tier of Atlas cluster and you install and manage the BI Connectorlocally or on your network. [Install](https://mongodb.com/docs/bi-connector/master/installation/#std-label-installation-guides) and [launch](https://mongodb.com/docs/bi-connector/master/launch/#std-label-launch) theBI Connector, specifying a remote database address, then configure yourJDBC or ODBC driver to connect to the BI Connector. ![Hosted DB and Self-Managed BI Connector](https://mongodb.com/docs/bi-connector/master/images/bi-connector/components-onprem-bi-atlas.jpg) ### Self-Managed Database and BI Connector In this configuration, you install and manage both the MongoDB database and BI Connector applications, either locally or on your network. [Install](https://mongodb.com/docs/bi-connector/master/installation/#std-label-installation-guides) and [launch](https://mongodb.com/docs/bi-connector/master/launch/#std-label-launch) theBI Connector, then configure your JDBC or ODBC driver to connect to the BI Connector server address. ![Self-Managed DB and BI Connector](https://mongodb.com/docs/bi-connector/master/images/bi-connector/components-onprem.jpg) ### Local Database and BI Connector For testing and all-in-one-box local experimentation, you can run MongoDB and the BI Connector on your desktop. This configuration might be helpful for proofs of concept or as a way to explore the possibilities of data visualization with the BI Connector. Learn more about setting up a local BI Connector test installation in the [Quick Start Guide.](https://mongodb.com/docs/bi-connector/master/local-quickstart/)",
  "https://www.mongodb.com/docs/bi-connector/master/faq/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # FAQ: The MongoDB Connector for BI On this page * [Is there a cloud-hosted version of the BI Connector?](#is-there-a-cloud-hosted-version-of-the-bi-short-)\n* [How do I authenticate with the BI Connector?](#how-do-i-authenticate-with-the-bi-short-)\n* [When upgrading MongoDB, what considerations should be taken for the BI Connector?](#when-upgrading-mongodb--what-considerations-should-be-taken-for-the-bi-short-)\n* [Does the BI Connector store any data?](#does-the-bi-short-store-any-data-)\n* [How are queries processed?](#how-are-queries-processed-)\n* [How do I skip data incompatible with my DRDL type definition?](#how-do-i-skip-data-incompatible-with-my-drdl-type-definition-)\n* [Can I use MongoDB views with BI Connector?](#can-i-use-mongodb-views-with-bi-short-)\n* [Is there any syntax validation tool for DRDL?](#is-there-any-syntax-validation-tool-for-drdl-)\n* [How does the BI Connector process dates?](#how-does-the-bi-short-process-dates-)\n* [How do I use TLS/SSL with the BI Connector?](#how-do-i-use-tls-ssl-with-the-bi-short-)\n* [Can I use the SQL EXPLAIN function?](#can-i-use-the-sql-explain-function-) ## Is there a cloud-hosted version of the BI Connector? You can host the MongoDB Connector for Business Intelligence in MongoDB Atlas. To learn how to enable and connect to an Atlas-hosted BI Connector, see[Connect via BI Connector for Atlas.](https://docs.atlas.mongodb.com/bi-connection/#std-label-bi-connection) ## How do I authenticate with the BI Connector? _Changed in version 2.0_: Prior to version 2.0, the BI Connector stored its own separate set of credentials. If you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0 by following the steps in [Install BI Connector On Premises.](https://mongodb.com/docs/bi-connector/master/installation/) When connecting to a MongoDB deployment using[authentication](https://www.mongodb.com/docs/manual/tutorial/enable-authentication/), you can authenticate as the users and roles configured in that deployment. See [Authentication](https://mongodb.com/docs/bi-connector/master/authentication/#std-label-client-authentication) for details on how to specify your authentication source and mechanism. ## When upgrading MongoDB, what considerations should be taken for the BI Connector? Before upgrading your MongoDB deployment, set the[\\--mongo-versionCompatibility](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-versionCompatibility)option to the currently installed major[release series](https://www.mongodb.com/docs/manual/reference/versioning/#std-label-release-version-numbers) of MongoDB, for example`3.4`. Once the upgrade is complete, restart [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)without the[\\--mongo-versionCompatibility](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-versionCompatibility)option or set it to the newly updated major release series. ## Note\n\n MongoDB 3.4 introduces the [decimal BSON type](https://www.mongodb.com/docs/manual/release-notes/3.4/#std-label-3.4-decimal). When you upgrade from MongoDB 3.2 to MongoDB 3.4 and your schema file contains `float64` values (which map to the `double` type in MongoDB), you must update your DRDL file after you begin using the new `decimal` type. ## Does the BI Connector store any data? The BI Connector instance only transforms SQL queries into MongoDB queries. It does not store any data itself. When starting [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld), you provide it a[DRDL](https://mongodb.com/docs/bi-connector/master/schema-configuration/) file describing the schema of your data. ## How are queries processed? The BI Connector constructs [aggregation](https://www.mongodb.com/docs/manual/aggregation/)expressions. [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) always enables the[aggregate](https://www.mongodb.com/docs/manual/reference/command/aggregate/) `allowDiskUse`option. The BI Connector cannot map some supported SQL constructs into an aggregation equivalent. In this case, the BI Connector will execute those constructs in memory. ## How do I skip data incompatible with my DRDL type definition? ### Using MongoDB Views MongoDB 3.4 introduces [Read-Only Views](https://www.mongodb.com/docs/manual/core/views/) that you can use to filter incompatible data. For example, you can create a view in the `test` database that contains only documents containing a number in the `grade` field of a `grades`collection: `| db.runCommand( { create: \"numericGrades\", viewOn: \"grades\", pipeline: [ { \"$match\": { \"grade\": { \"$type\": \"number\" } } } ] } ) |\n| ------------------------------------------------------------------------------------------------------------------------------ | ` You can then use [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) to generate a schema from this view as you would a collection: ```shell mongodrdl -d test -c numericGrades \n``` ### Using a DRDL Filter If documents in a collection contain different data types for a field, you may filter for a specific data type. To accomplish this, you can include a [$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match) stage at the beginning of the pipeline in your [DRDL](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) table definition. For example, to match only documents containing a number in the `grade` field, use the following pipeline stage: ```javascript \"$match\": { \"grade\": { \"$type\": \"number\" } } \n``` If you are [unwinding](https://www.mongodb.com/docs/manual/reference/operator/aggregation/unwind/#mongodb-pipeline-pipe.-unwind) an array field that contains different data types, then to filter the array for a specific data type, put the [$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/#mongodb-pipeline-pipe.-match) stage after the [$unwind.](https://www.mongodb.com/docs/manual/reference/operator/aggregation/unwind/#mongodb-pipeline-pipe.-unwind) ## Tip ### See also:  [Heterogeneous data types](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl-heterogeneous) ## Can I use MongoDB views with BI Connector?\n\n ## Is there any syntax validation tool for DRDL? [DRDL](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) files use the [YAML](http://yaml.org/) syntax. Any YAML validator such as <https://yaml-online-parser.appspot.com/> can help you check your DRDL files. ## How does the BI Connector process dates? The BI Connector will correctly process [BSON date](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-date) data by mapping it to the [SQL](https://www.mongodb.com/docs/manual/reference/glossary/#std-term-SQL) `datetime` type. For example: ```javascript db.data.save({ date: new Date() }) \n``` If you store date data as a string, the BI Connector treats it as a string rather than as a date. For example, BI Connector treats the following as a string: ```javascript db.data.save({ date: '32-FEB-2015' }) \n``` ## How do I use TLS/SSL with the BI Connector? The connection between [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) and your MongoDB deployment has TLS/SSL configured separately from the connection between your SQL client and [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) ### Connecting `mongosqld` to MongoDB If the MongoDB instance you are connecting to uses[TLS/SSL](https://www.mongodb.com/docs/manual/core/security-transport-encryption/), provide the [\\--mongo-ssl](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-ssl)option to [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) For example: ```shell mongosqld --schema=schema.drdl --mongo-ssl \n``` To specify a TLS/SSL CA root certificate, use the[\\--mongo-sslCAFile](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-sslCAFile)option. To specify a client certificate, use the[\\--mongo-sslPEMKeyFile](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-sslPEMKeyFile)option. For example: ```shell mongosqld --schema=schema.drdl \\           --mongo-ssl \\           --mongo-sslCAFile=/certs/ca.pem \\           --mongo-sslPEMKeyFile=/certs/mongodb_client.pem \n``` ### Connecting a client to `mongosqld` To specify a TLS/SSL CA root certificate, use the[\\--sslCAFile](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sslCAFile)option. To specify a client certificate, use the[\\--sslPEMKeyFile](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sslPEMKeyFile)option. For example: ```shell mongosqld --schema=schema.drdl \\           --sslCAFile=/certs/ca.pem \\           --sslPEMKeyFile=/certs/mongosql_server.pem \n``` ## Can I use the SQL `EXPLAIN` function?\n\n ← [Supported SQL Functions and Operators](https://mongodb.com/docs/bi-connector/master/supported-operations/ \"Previous Section\")[Release Notes for MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/release-notes/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/client-applications/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect BI Tools After you install and configure the BI Connector, you can use ODBC andJDBC drivers to connect from many BI Tools and clients. The sections below provide basic instructions for connecting to BI Connector using each tool. * [Tableau Desktop](https://mongodb.com/docs/bi-connector/master/connect/tableau/)\n* [Microsoft Power BI Desktop](https://mongodb.com/docs/bi-connector/master/connect/powerbi/)\n* [Microsoft Excel](https://mongodb.com/docs/bi-connector/master/connect/excel/)\n* [MySQL Client](https://mongodb.com/docs/bi-connector/master/connect/mysql/) ← [Launch BI Connector](https://mongodb.com/docs/bi-connector/master/launch/ \"Previous Section\")[Connect from Tableau Desktop](https://mongodb.com/docs/bi-connector/master/connect/tableau/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/launch/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Launch BI Connector On this page * [Overview](#overview)\n* [Prerequisites](#prerequisites)\n* [Launching mongosqld](#launching-mongosqld)\n* [Next Steps](#next-steps) ## Overview [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) is the BI Connector program which connects your MongoDB instance to your BI tool. [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)requires a data schema which maps to your MongoDB collections and databases. You have several options for creating a schema and launching [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld). This guide will help you choose the best option for your needs. By default, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) generates a [data schema](https://mongodb.com/docs/bi-connector/master/schema-configuration/) and holds it in memory. Alternatively, if you prefer to create a schema file and edit it manually, use the[mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) program to create a `.drdl` schema file and use the [\\--schema](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schema) option when starting [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld). For more information on schema generation and data sampling, see [Map Relational Schemas to MongoDB.](https://mongodb.com/docs/bi-connector/master/schema-configuration/) ## Prerequisites * [Install](https://mongodb.com/docs/bi-connector/master/installation/) BI Connector ## Launching `mongosqld` There are three options for launching and running[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld). You can: * Run `mongosqld` as a [hosted service with MongoDB Atlas](#std-label-deploy-bic-atlas)\n* Start `mongosqld` [from the command line](#std-label-start-msqld-cli)\n* Install `mongosqld` as a [system service](#std-label-msqld-as-a-system-service) ### Run BI Connector as a Hosted Service with MongoDB Atlas You can host the MongoDB Connector for Business Intelligence in MongoDB Atlas. To learn how to enable and connect to an Atlas-hosted BI Connector, see[Connect via BI Connector for Atlas.](https://docs.atlas.mongodb.com/bi-connection/#std-label-bi-connection) ### Start `mongosqld` From the Command Line You can use command line options to specify collections and databases to sample, user credentials, and other configuration options. For a complete list of command line options, see[Command Line Options.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-mongosqld-command-line-options) To start [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) from the command line, run the`mongosqld` executable in the BI Connector program directory with any necessary command line options. ## Note\n\n ### `mongosqld` with a Configuration File You can use a [configuration file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) to hold all your`mongosqld` configuration options. Start `mongosqld` with the[\\--config](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--config) option to specify a configuration file. ### Install `mongosqld` as a System Service BI Connector requires a configuration file with the`mongosqld.systemLog.path` setting specified when running as a system service. Using your preferred text editor, create a`mongosqld.conf` file. To review the configuration file options, see [Configuration File](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format). For example: ## Next Steps Once BI Connector is up and running, you are ready to begin using it with your preferred BI tool. See [Connect BI Tools](https://mongodb.com/docs/bi-connector/master/client-applications/) for a selected list of connection tutorials.",
  "https://www.mongodb.com/docs/bi-connector/master/authentication/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Authentication On this page * [MongoDB Authentication](#mongodb-authentication)\n* [BI Connector Authentication](#bi-short-authentication)\n* [Client Authentication](#client-authentication) The MongoDB Connector for BI supports the following authentication mechanisms for authenticating with MongoDB and for authenticating connecting users: * `SCRAM-SHA-1`\n* `SCRAM-SHA-256`\n* `PLAIN` (LDAP)\n* `GSSAPI` (Kerberos) The BI Connector ([mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)) uses admin credentials to authenticate with MongoDB and [sample data](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-bi-cached-sampling) to generate the BI Connector's schema. When a client connects to theBI Connector, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) passes connecting client credentials to MongoDB for authentication and will display and restrict data according to the connecting user's permissions. The following sections will guide you through configuring the BI Connectorto authenticate with your MongoDB deployment, configuring authentication of users connecting to the BI Connector, and how usernames should be formatted from your BI tool using authentcation options. ## MongoDB Authentication If authentication is enabled on your MongoDB deployment, you must configure the BI Connector to use the required authentication mechanism and provide admin user credentials. The admin user credentials must be[authorized](https://www.mongodb.com/docs/manual/core/authorization/) to view the superset of data you wish to query using the BI Connector. ## BI Connector Authentication ## Client Authentication If your [BI tool](https://mongodb.com/docs/bi-connector/master/client-applications/) is using the[MongoDB BI Connector ODBC Driver](https://mongodb.com/docs/bi-connector/master/reference/odbc-driver/), the driver will handle authentication and you do not need to install an authentication plugin. If you are not using the MongoDB BI Connector ODBC Driver and need to authenticate using your BI tool, install either the C or JDBC authentication plugin depending on which is compatible with your BI Tool: [C Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/) Instructions for installing the C Authentication Plugin, which facilitates authentication between the BI Connector and SQL clients such as [Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau/) and the[MySQL shell.](https://mongodb.com/docs/bi-connector/master/connect/mysql/) [JDBC Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-jdbc/) Instructions for installing the JDBC Authentication Plugin. For more information on connecting BI Tools to the BI Connector, see[Connect BI Tools.](https://mongodb.com/docs/bi-connector/master/client-applications/) ## Important The use of TLS/SSL is recommended in addition to using an authentication plugin as: * The `SCRAM-SHA-1` and `SCRAM-SHA-256` mechanisms hash the passwords in the client plugin. However, all other data is in cleartext.\n* The `PLAIN` mechanism sends the password in cleartext. The MongoDB Connector for BI requires authentication when running with[\\--auth](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--auth). When the MongoDB Connector for BI receives a connection with authentication credentials from a client, it passes those credentials through to the underlying MongoDB instance. ### Authentication Options You can specify the following authentication options after your username as URI-style query parameters:\n\n ### Example The following example shows how to format a username to authenticate with the BI Connector using Challenge and Response (username and password), LDAP, or Kerberos: ← [MySQL Shell Options](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c-mysql-options/ \"Previous Section\")[C Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-debian/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Install BI Connector on Debian-based Linux On this page * [Prerequisites](#prerequisites)\n* [MongoDB User Permissions](#mongodb-user-permissions)\n* [Install the BI Connector](#install-the-bi-short) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. To set up MongoDB Connector for BI with a business intelligence tool such as Tableau, follow the steps on this page. ## Prerequisites * OpenSSL installed on your host. To verify OpenSSL is installed on your system, run the following command: `| dpkg -l \\| grep -i openssl |\n| -------------------------- | ` If OpenSSL is not installed, use your package manager to install it. ## MongoDB User Permissions If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/), your BI Connector instance must also use authentication. The user that connects to MongoDB via the[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) program must have permission to read from all the namespaces you wish to sample data from. For more details about MongoDB user permissions in BI Connector, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) ## Install the BI Connector 1 ### Download the MongoDB Connector for BI. Download the BI Connector from the [MongoDB Download Center.](https://www.mongodb.com/download-center/bi-connector) 2 ### Install the MongoDB Connector for BI. 1. Extract the `.tar` archive you downloaded.  \n```shell  \ntar -xvzf mongodb-bi-linux-{arch}-{platform}-{version}.tgz  \n```\n2. Install the programs within the `bin/` directory into a directory listed in your system `PATH`.  \n```shell  \nsudo install -m755 bin/mongo* /usr/local/bin/  \n```  \nIf a prior version exists, overwrite the binaries. _New in version 2.9_. To help you get started, a sample [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) [configuration file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) named`example-mongosqld-config.yml` is included with the installation package. To learn how to start BI Connectorwith a configuration file, refer to the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)documentation section on the [Configuration File.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) ### Launch the BI Connector You are now ready to launch the BI Connector. The following guide contains detailed information on BI Connector configuration, schema generation, and launch options: * [Launch BI Connector](https://mongodb.com/docs/bi-connector/master/launch/)",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-macos/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Install BI Connector on macOS On this page * [Prerequisites](#prerequisites)\n* [MongoDB User Permissions](#mongodb-user-permissions)\n* [Install the BI Connector](#install-the-bi-short) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. To set up MongoDB Connector for BI with a business intelligence tool such as Tableau, follow the steps on this page. ## Prerequisites * OpenSSL installed on your host. To install OpenSSL via Homebrew, run the following command: `| /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" |\n| -------------------------------------------------------------------------------------------------- |\n| brew update                                                                                        |\n| brew install openssl                                                                               | ` ## MongoDB User Permissions If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/), your BI Connector instance must also use authentication. The user that connects to MongoDB via the[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) program must have permission to read from all the namespaces you wish to sample data from. For more details about MongoDB user permissions in BI Connector, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) ## Install the BI Connector 1 ### Download the MongoDB Connector for BI. Download the BI Connector from the [MongoDB Download Center.](https://www.mongodb.com/download-center/bi-connector) 2 ### Install the MongoDB Connector for BI. 1. Extract the downloaded `.zip` archive. Replace {SOURCE-PATH} with the path to the directory where you downloaded the `.zip`archive. Replace {DESTINATION-PATH} with the path to the directory where you want to extract the archive.  \n```shell  \nunzip {SOURCE-PATH}/mongodb-bi-osx-x86_64-{version}.zip -d {DESTINATION-PATH}  \n```\n2. Change to the `mongodb-bi-osx-x86_64-{version}` directory. Replace {DESTINATION-PATH} with the path to the directory where you extracted the archive in the previous step.  \n```shell  \ncd {DESTINATION-PATH}/mongodb-bi-osx-x86_64-{version}/  \n```\n3. Install the programs within the `bin/` directory into a directory listed in your system `PATH`. If a prior version exists, overwrite the binaries.  \n```shell  \nsudo install -m755 bin/mongo* /usr/local/bin/  \n``` _New in version 2.9_.\n\n ### Launch the BI Connector You are now ready to launch the BI Connector. The following guide contains detailed information on BI Connector configuration, schema generation, and launch options: * [Launch BI Connector](https://mongodb.com/docs/bi-connector/master/launch/)",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-windows/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Install BI Connector on Windows On this page * [Prerequisites](#prerequisites)\n* [MongoDB User Permissions](#mongodb-user-permissions)\n* [Install the BI Connector](#install-the-bi-short) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. To set up MongoDB Connector for BI with a business intelligence tool such as Tableau, follow the steps on this page. ## Prerequisites * [Visual C++ Redistributable for Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145)installed on your host. ## MongoDB User Permissions If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/), your BI Connector instance must also use authentication. The user that connects to MongoDB via the[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) program must have permission to read from all the namespaces you wish to sample data from. For more details about MongoDB user permissions in BI Connector, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) ## Install the BI Connector 1 ### Download the MongoDB Connector for BI. Download the BI Connector from the [MongoDB Download Center.](https://www.mongodb.com/download-center/bi-connector) 2 ### Install the MongoDB Connector for BI. 1. Run the downloaded `.msi` file.\n2. Follow the wizard instructions to install the files. The binaries install into a `bin` directory inside the installation directory.  \nIf a prior version exists, you might need to configure your system services to launch the new installation. You can delete the old binaries. _New in version 2.9_. To help you get started, a sample [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) [configuration file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) named`example-mongosqld-config.yml` is included with the installation package. To learn how to start BI Connectorwith a configuration file, refer to the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)documentation section on the [Configuration File.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) ### Launch the BI Connector You are now ready to launch the BI Connector. The following guide contains detailed information on BI Connector configuration, schema generation, and launch options: * [Launch BI Connector](https://mongodb.com/docs/bi-connector/master/launch/)",
  "https://www.mongodb.com/docs/bi-connector/master/release-notes/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Release Notes for MongoDB Connector for BI On this page * [MongoDB Connector for BI 2.14.5](#bi-2.14.5)\n* [MongoDB Connector for BI 2.14.4](#bi-2.14.4)\n* [MongoDB Connector for BI 2.14.3](#bi-2.14.3)\n* [MongoDB Connector for BI 2.14.2](#bi-2.14.2)\n* [MongoDB Connector for BI 2.14.1](#bi-2.14.1)\n* [MongoDB Connector for BI 2.14.0](#bi-2.14.0)\n* [MongoDB Connector for BI 2.13.4](#bi-2.13.4)\n* [MongoDB Connector for BI 2.13.3](#bi-2.13.3)\n* [MongoDB Connector for BI 2.13.2](#bi-2.13.2)\n* [MongoDB Connector for BI 2.13.1](#bi-2.13.1)\n* [MongoDB Connector for BI 2.13.0](#bi-2.13.0)\n* [MongoDB Connector for BI 2.12.0](#bi-2.12.0)\n* [MongoDB Connector for BI 2.11.1](#bi-2.11.1)\n* [MongoDB Connector for BI 2.11.0](#bi-2.11.0)\n* [MongoDB Connector for BI 2.10.0](#bi-2.10.0)\n* [MongoDB Connector for BI 2.9.0](#bi-2.9.0)\n* [MongoDB Connector for BI 2.8.2](#bi-2.8.2)\n* [MongoDB Connector for BI 2.8.1](#bi-2.8.1)\n* [MongoDB Connector for BI 2.8.0](#bi-2.8.0)\n* [MongoDB Connector for BI 2.7.0](#bi-2.7.0)\n* [MongoDB Connector for BI 2.6.1](#bi-2.6.1)\n* [MongoDB Connector for BI 2.6.0](#bi-2.6.0)\n* [MongoDB Connector for BI 2.5.0](#bi-2.5.0)\n* [MongoDB Connector for BI 2.4.1](#bi-2.4.1)\n* [MongoDB Connector for BI 2.4.0](#bi-2.4.0)\n* [MongoDB Connector for BI 2.3.1](#bi-2.3.1)\n* [MongoDB Connector for BI 2.3.0](#bi-2.3.0)\n* [MongoDB Connector for BI 2.2.1](#bi-2.2.1)\n* [MongoDB Connector for BI 2.2.0](#bi-2.2.0)\n* [MongoDB Connector for BI 2.1.0](#bi-2.1.0)\n* [MongoDB Connector for BI 2.0.0](#bi-2.0.0) ## MongoDB Connector for BI 2.14.5 _Released September 2, 2022_ ### Bug Fixes * Fixes the `amazon2-arm` URL for the release JSON feed. ### Behavioral Changes * Adds support for MongoDB 6.0.\n* Adds MacOS 11.0 ARM support.\n* Adds Debian 11 support.\n* Adds Enterprise RHEL 8 zSeries support.\n* Removes all zSeries/IBM POWER PC platforms support except for RHEL 8 zSeries.\n* Removes RHEL 6.x/7.x on S390x support. ## MongoDB Connector for BI 2.14.4 _Released September 17, 2021_ ### Improvements\n\n ### Bug Fixes * Fixes an issue where empty field paths were not skipped when mapping the subpaths of objects that conflict with scalars.\n* Fixes an issue where tarballs for the RHEL 8.1 (IBM POWER) 2.14.3 release were incorrectly structured. ### Behavioral Changes * Removes support for MongoDB 3.2, 3.4, and 3.6.\n* Removes support for zSeries distributions. ## MongoDB Connector for BI 2.14.3 _Released March 23, 2021_ ### New Features * Enables the use of externally sourced values in .yaml[configuration files.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format)\n* Adds support for the following fields in .yaml configuration files:  \n   * `trim`  \n   * `type`  \n   * `digest`  \n   * `digest_key` ### Bug Fixes * Fixes an issue where documents with `null` values were incorrectly returned from some queries.\n* Fixes an issue where some queries took longer to complete than in previous versions of BI Connector.\n* Fixes an issue where the `listDatabases` command returned an error when read preference was set to an analytics node in some sharded cluster configurations. ### Improvements * Now built with Go 1.5.0.\n* Adds the Amazon Linux 2 ARM 64 distribution to the download center. ## MongoDB Connector for BI 2.14.2 _Released January 27, 2021_ ### New Features * Detached signatures are now available for release archives. ### Bug Fixes * Fixes an issue that resulted in inefficient translations for `in` and `or` expressions. ## MongoDB Connector for BI 2.14.1 _Released January 6, 2021_ ### Improvements * Now built with Go 1.15. ### Bug Fixes * Fixes an issue in which geospatial data did not map correctly.\n* Fixes an issue with regard to DRDL extended character encoding.\n* Fixes an issue in which sharding information failed to load for mixed-case databases.\n* Fixes an issue in which the response to `COM_FIELD_LIST` was malformed. ## MongoDB Connector for BI 2.14.0 _Released July 13, 2020_ ### New Features * [Database schemas](https://mongodb.com/docs/bi-connector/master/schema-configuration/#std-label-schema-configuration-ref) are now case-sensitive.\n* Queries containing UNION can be fully pushed down. ### Bug Fix * Object-array conflict resolution produces NULL data for conflicting object fields nested in array. ## MongoDB Connector for BI 2.13.4 _Released February 12, 2020_ ### Bug Fixes * Fixes bug in mapping that did not deep copy pipelines during table post-processing, leading to invalid SQL schemas. ## MongoDB Connector for BI 2.13.3 _Released January 8, 2020_ ### Bug Fixes * Fixes bug that caused panics on document keys containing characters that need to be escaped, such as `\"` or `\\usb`. ## MongoDB Connector for BI 2.13.2 _Released January 8, 2020_ ### Bug Fixes * Fixes bug that caused index loading to fail with mixed-case databases.\n* Fixes connectivity bug caused by non-nil interface in custom go-driver dialer.\n* Fixes [mongotranslate](https://mongodb.com/docs/bi-connector/master/reference/mongotranslate/#mongodb-binary-bin.mongotranslate) not including pipelines defined on tables in [DRDL file schemas.](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file)\n* Fixes bug that caused natural left joins to fail in some cases. ## MongoDB Connector for BI 2.13.1 _Released November 26, 2019_ * The `max_num_global_tables` [system variable](https://mongodb.com/docs/bi-connector/master/reference/system-variables/#std-label-system-environment-variables) now defaults to `4000`, raised from `1000`. ## MongoDB Connector for BI 2.13.0 _Released November 11, 2019_ ### Bug Fixes Fixes the following bugs: * `unix_timestamp` returning incorrect results because it did not handle Daylight Savings Time when necessary.\n* [DRDL](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) tables incorrectly marshalling to BSON if the aggregation pipeline was empty. ### Improvements\n\n * Updates an error message for [FLUSH SAMPLE](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/#std-label-resample-schema-data)authorization that was unclear.\n* Updates [schema mapping](https://mongodb.com/docs/bi-connector/master/schema-configuration/) to skip empty field names and field names containing `.` characters.\n* Enables [self-join](https://mongodb.com/docs/bi-connector/master/supported-operations/) optimization for sharded collections.\n* Replaces the `max_num_columns_per_table` [system variable](https://mongodb.com/docs/bi-connector/master/reference/system-variables/) with `max_num_fields_per_collection`.\n* Enhances performance while sampling collections with many fields by reducing the amount of memory used.\n* Improves ambiguous column behavior in subqueries, `GROUP BY` and `ORDER BY`clauses.\n* Adds support for Ubuntu 18.04, SLES 15, and RHEL8.\n* Adds non-string support for `regexp`.\n* Improves performance for [schemas](https://mongodb.com/docs/bi-connector/master/schema-configuration/) that contain arrays. ## MongoDB Connector for BI 2.12.0 _Released September 16, 2019_ ### Bug Fixes Fixes the following bugs: * [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) hangs if an election occurred during sampling.\n* Some queries using [$lookup](https://www.mongodb.com/docs/manual/reference/operator/aggregation/lookup/#mongodb-pipeline-pipe.-lookup) fail.\n* Panics occur when connecting with a[DRDL](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) file that excludes a child table's`_id`.\n* Versions 2.10+ install to the wrong directory on Windows.\n* Fixes a bug in the `div` operator’s in-memory evaluation.\n* [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) incorrectly kills long-running queries.\n* Some queries on [ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) fields do not push down.\n* [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) not parsing replica set seedlists passed to the [\\--host](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#std-option-mongodrdl.--host) flag.\n* `timestampadd` fails with out-of-range months.\n* Allows aggregate functions as grouping expressions.\n* `datediff` fails to push down with polymorphic arguments.\n* Displays incorrect foreign key constraints.\n* Incorrect pushdown and [type conversions](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes)for `date` and `datetime` types that are too large or too small.\n* Aliases for tables in `information_schema` are ignored.\n* Some queries with aggregate functions fail to push down.\n* Pipeline parsing error for unwind paths with numeric field names.\n* [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) ignores the `--gssapiHostName` and`--gssapiServiceName` flags.\n* Allows extra arguments to the `current_timestamp` and `trim`functions.\n* `str_to_date` returns a `date` instead of a `datetime` for some non-constant format-string arguments. ### Improvements #### Pushdown This release includes a number of improvements to pushdown. Existing translations were improved and expanded pushdown coverage to more functions and query shapes.\n\n #### Go Driver This release includes a number of improvements made possible by upgrading to the new go driver: * Adds support for SRV URI support to [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) and[mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)\n* Adds MongoDB URI support to [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) via a`--uri` flag.\n* Adds support for zlib and snappy compression for connections to MongoDB.\n* Updates [DRDL](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) file parsing to support the most recent version of the extjson spec. ### Behavioral Changes * Adds new reserved words to the parser: `INSERT`, `INTO`, `KEY`,`FULLTEXT`, and `PRIMARY`.  \nGoing forward, these words must be wrapped in backticks to be used as identifiers in queries.\n* Removes support for altering sampled schema with `ALTER TABLE`statements.\n* Prior to 2.12, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) supported renaming and removing tables and columns via a modified `ALTER TABLE` syntax when in [standalone schema mode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart). Any customer currently using this feature is advised to migrate their schema management needs to [views](https://mongodb.com/docs/bi-connector/master/schema/use-views/#std-label-schema-with-views),[DRDL](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file), or[custom schema mode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart). The variable/config parameter that enabled this feature, `enable_table_alterations`, is still supported but doesn’t do anything in BI Connector 2.12\\. It will be removed in a future release. ## MongoDB Connector for BI 2.11.1 _Released July 8, 2019_ ### Bug Fixes Fixes a bug that caused the MySQL schema to include incorrect foreign key constraints. Fixes a bug that caused incorrect pushdown for some very large or very small `date` and `datetime` values. Fixes a bug that caused aliases to be ignored for tables in the`information_schema` database. ## MongoDB Connector for BI 2.11.0 _Released May 16, 2019_ ### New Features * Adds a number of optimizations that are applied to generated aggregation pipelines before sending them to MongoDB.\n* Adds new subcommands to [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) for storing a`DRDL` file in MongoDB and for manipulating stored schemas.\n* Enables [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to use stored `DRDL` schemas instead of sampling. To learn more, see [Schema Management Changes in 2.11.](https://mongodb.com/docs/bi-connector/master/schema/schema-management-changes/#std-label-2.11-schema-management-changes)\n* Introduces the beta version of [mongotranslate](https://mongodb.com/docs/bi-connector/master/reference/mongotranslate/#mongodb-binary-bin.mongotranslate), a command-line utility that can translate SQL queries to aggregation pipelines without a running BI Connector or MongoDB instance. ### Bug Fixes\n\n ### Chages/Deprecations * Changes some schema-management configuration options.\n* Deprecates schema-modification support via `ALTER TABLE`, as well as the `enable_table_alterations` [system variable](https://mongodb.com/docs/bi-connector/master/reference/system-variables/#std-label-system-environment-variables) and[setParameter](https://www.mongodb.com/docs/manual/reference/configuration-options/#setparameter-option/) ## MongoDB Connector for BI 2.10.0 _Released Mar 15, 2019_ ### Bug Fixes * Fixes a bug where aggregate functions returned `NULL` in dual queries with the `DUAL` keyword omitted.\n* Fixes a bug where some invalid `DUAL` queries did not return an error.\n* Fixes a bug that prevented pushdown of some joins to derived tables selecting from `DUAL`.\n* Fixes some correctness bugs in the in-memory evaluation for[mysql-mode conversions.](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/)\n* Fixes a bug where some trig functions (`ascii`, `acos`, and`asin`) could return incorrect results due to missing[type conversions.](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes)\n* Fixes a bug where some subquery comparisons could return incorrect results due to missing[type conversions.](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes)\n* Fixes a bug where we lost precision while converting a `Uint64` to a`Decimal`.\n* Fixes a correctness bug with the `INSERT` scalar function's pushdown translation.\n* Fixes a bug where unstable sorting caused non-deterministic renaming of colliding collection/field names during schema mapping.\n* Fixes a bug where some valid subquery comparisons returned errors.\n* Fixes a bug where some valid subquery and tuple comparisons returned errors.\n* Fixes a bug where queries using `xor` returned errors on MongoDB 3.2 because the generated pipelines required features added in MongoDB 3.4.\n* Fixes a bug that caused kerberos[authentication](https://mongodb.com/docs/bi-connector/master/authentication/#std-label-client-authentication) to fail with MongoDB 4.0. ### Date and Time Changes This release resolves a number of inconsistencies in the BI Connector's date and timestamp semantics. Resolving these inconsistencies resulted in some changes to user-facing behavior: * Removes inconsistent support for partial dates.  \n   * MySQL can represent partial dates that are[missing month or day components](https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html). It is impossible to represent these incomplete dates with MongoDB dates. Attempting to correctly manipulate and render incomplete dates was causing a number of bugs and inconsistencies with complete dates.  \n   * Starting with version 2.10, the BI Connector does not support operations on or expressions that return incomplete dates. Going forward, we cannot provide guarantees about the behavior of operations that attempt to construct incomplete dates.\n* Updates the `DATE(a)` and `TIMESTAMP(a)` scalar functions to be equivalent to `CAST(a AS DATE)`, and `CAST(a AS DATETIME)`, respectively.  \n   * The behavior of the `DATE` and `TIMESTAMP` scalar functions will depend on the value of the `type_conversion_mode` variable. This will change the default behavior for those scalar functions.  \n   * Queries affected by this change can be rewritten to use a more explicit conversion function (such as `str_to_date`) that does not depend on `type_conversion_mode`. If an affected query cannot be rewritten, a user may set `type_conversion_mode` variable to`mysql`, which instructs the BI Connector to perform all type conversions with MySQL semantics instead of MongoDB semantics.  \n   ## Important  \n   This is discouraged unless absolutely necessary, as it significantly curtails the ability to push down type conversions across the board.  \n   * For more information on type conversions and the`type_conversion_mode` system variable, see[Type Conversion Modes.](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes)\n\n _Released Dec 18, 2018_ ### Features and Performance Improvements * Includes a sample `mongosqld` [configuration file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) in the release archive.\n* Allows setting commonly used system variables in the configuration file.\n* Optimizes conversions of years to days.\n* Optimizes `join` performance.\n* General performance improvements. ### Bug Fixes * Improves the BI Connector's resiliency to queries against fields that may contain unsupported [BSON types.](https://www.mongodb.com/docs/manual/reference/bson-types/) ## MongoDB Connector for BI 2.8.2 _Released Nov 16, 2018_ * Fixes correctness bugs discovered in polymorphic schema mapping, query cancellation, and `IN` queries.\n* Fixes a performance regression in a common query pattern. ## MongoDB Connector for BI 2.8.1 _Released Nov 09, 2018_ * Fixes a bug in the behavior of the `max_execution_time` system variable. ## MongoDB Connector for BI 2.8.0 _Released Nov 06, 2018_ ### Features and Performance Improvements * Improvements to the BI Connector’s [type system](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/) and the way it handles polymorphic data.\n* Users can [alter the type](https://mongodb.com/docs/bi-connector/master/supported-operations/#std-label-admin-statements) of a given column.\n* Users can access “dirty” datasets without query errors.\n* Support for pushdown of the GROUP\\_CONCAT aggregation function.\n* Non-admin users can [set global variables.](https://mongodb.com/docs/bi-connector/master/reference/user-authorization/) ### Bug Fixes * Improvements in parsing `strToDateTime` to `float`.\n* Fixes to how the BI Connector honors [readPreference](https://www.mongodb.com/docs/manual/reference/read-preference/) specifications. ## MongoDB Connector for BI 2.7.0 _Released Oct 02, 2018_ ### Features and Performance Improvements * Collapse associative functions\n* Support the `optimize_view_sampling` global variable\n* Support the `polymorphic_type_conversion_mode` session/global variable\n* Improve filter optimization for MongoDB versions 3.6 and later\n* Expose [type\\_conversion\\_mode](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes)in configuration parameters\n* Cache catalog columns for quicker lookup ### Bug Fixes * Fix incorrect semantics for null safe equality operator ( `<=>` )\n* The `||` operator returns incorrect type (and value) when operating on two strings\n* Add `DRDL` type validation\n* Support `CAST` to unsigned\n* Fix `WHERE` clause removed in certain cross-join queries\n* Fix some incorrect left self-join results when dynamic schemas are used\n* Support turning off view optimization with `$match`\n* [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) on macOS should install in versioned directories\n* Fix [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) installer issue on macOS that caused unicode driver to be reported as ANSI Released version 1.2.0 of the[MongoDB BI Connector ODBC Driver.](https://github.com/mongodb/mongo-odbc-driver/releases/tag/v1.2.0) ## MongoDB Connector for BI 2.6.1 _Released Sep 21, 2018_ * Resolved an issue caused by how scalar functions handle string values. We encourage [Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau/) users running BIC 2.6.0 to upgrade to 2.6.1. ## MongoDB Connector for BI 2.6.0 _Released Sep 04, 2018_\n\n ### EXPLAIN Support Users can use EXPLAIN to return details of aggregation pipeline used to generate query results. ### Common Table Expression Support The BI Connector now supports queries that include Common Table Expressions. ## MongoDB Connector for BI 2.5.0 _Released May 23, 2018_ * Improved memory management for [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)\n* New SSPI support for [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) on Windows.\n* The [\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces)option now supports [exclusion.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-exclusion)\n* `NULL` valued types are now cast to varchar during sampling.\n* Optimized `COUNT(*)` query performance.\n* `SIN`, `COS`, `TAN` are now pushed down. ### New SSPI Support Windows Clients may now use kerberos to authenticate against theBI Connector. ### `NULL` Valued Types Are Now Cast to Varchar During Sampling This resolves the issue where queries would fail due to `NULL` values being ignored during sampling. Now, `NULL` values will be cast as SQL type `VARCHAR`. ### `SIN`, `COS`, `TAN` Are Now Pushed Down BI Connector will now push down `SIN`, `COS`, and `TAN` SQL functions. This will improve performance for queries using these functions. ## MongoDB Connector for BI 2.4.1 _Released Mar 09, 2018_ We've released version 2.4.1 of the MongoDB Connector for BI for production deployment. This release contains minor bug fixes for users of the BI Connector and is a recommended upgrade for all 2.4 users. ## MongoDB Connector for BI 2.4.0 _Released Feb 21, 2018_ * Support for 3.6 Aggregate Expressions.\n* Pushdown for subqueries and non-equijoins.\n* Killing SQL query now also kills MongoDB operation.\n* Permission changes for `DRDL` file users. When[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) runs with authentication enabled, admin credentials must be provided with the[\\--mongo-username](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-username) and[\\--mongo-password](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--mongo-password) options or the [mongodb.net.auth.username](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-setting-mongodb.net.auth.username) and [mongodb.net.auth.password](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-setting-mongodb.net.auth.password)settings in the [configuration file.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) MongoDB Connector for BI version 2.4 improves more expressive queries. New features include: ### Aggregate Expressions BI Connector 2.4 improves support for aggregate expressions including math, date, and string functions. ### Improved Support for Subqueries and Non-equijoins With version 2.4, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) has improved support for subqueries and non-equijoins. ## MongoDB Connector for BI 2.3.1 _Released Nov 10, 2017_ * Fixes minor incompatibility with MongoDB 3.2. ## MongoDB Connector for BI 2.3.0 _Released Nov 08, 2017_\n\n MongoDB Connector for BI version 2.3 improves enterprise deployment support. The new features include: ### Improved Schema Management In BI Connector 2.3, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/) includes the schema mapping functionality previously found in[mongodrdl.](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/) ### Log Rotation With version 2.3, you can rotate the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/) logs. To rotate the logs, [issue a command or restart](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-msqld-log-options) `mongosqld`. ## MongoDB Connector for BI 2.2.1 _Released Aug 29, 2017_ * Fixes lack of support for Read Preference tags which are used when targeting reads to specific members of a replica set. ## MongoDB Connector for BI 2.2.0 _Released Jul 31, 2017_\n\n ### Authentication Plugins MongoDB Connector for BI Version 2.0 introduced passthrough authentication, in which clients authenticate as a user defined in MongoDB, without the need to create a separate user within the connector itself. MongoDB Connector for BI Version 2.2 further increases ease of use with a set of authentication plugins which can authenticate users through the connector without the need for SSL certificates. These plugins perform user authentication via the SASL framework and support the SCRAM-SHA-1 and PLAIN authentication mechanisms. We currently provide authentication plugins in the following languages: * [Java](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-jdbc/) \\- for use with MySQL’s Connector/J driver\n* [C](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/) \\- for use with the MySQL ODBC driver and the MySQL Shell ## MongoDB Connector for BI 2.1.0 * Provides substantial performance improvements for some common `JOIN`scenarios.\n* Pushes `$match` stages earlier in the aggregation pipeline to improve to index utilization.\n* Pushes down more SQL functions and operators to the aggregation pipeline.\n* Supports additional SQL language features, such as `USE` and`SHOW CREATE TABLE` statements, `STRAIGHT_JOIN`, the unary plus (`+`) operator, and the `INTERVAL` keyword in[date arithmetic.](https://mongodb.com/docs/bi-connector/master/supported-operations/#std-label-sql-date-and-time) ## Note [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) no longer offers the `--fork` option. To run [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) in the background, use the `nohup`command: `| nohup mongosqld [options] & |\n| --------------------------- | ` ## MongoDB Connector for BI 2.0.0 _Released Nov 29, 2016_ ### Improved Server-Side Execution The MongoDB Connector for BI delivers significant performance and scalability improvements by moving as much execution as possible to the underlying MongoDB instance. Pushing execution down to the server reduces network latency and reduces bandwidth consumption. This approach also reduces memory and CPU consumption in the MongoDB Connector for BI itself. ### Pass-through Authentication The user authentication process is now passed through the MongoDB Connector for BI to the underlying MongoDB instance. Users now authenticate as a user already created within MongoDB. ### Simplified Architecture The MongoDB Connector for BI package is now trimmed down from four separate components to two: [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) This tool connects to a MongoDB instance and generates a [Document-Relational Definition Language (DRDL)](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl)file, which maps a given collection shape to relational schema. [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) Once installed and run as a daemon,[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) responds to SQL queries, requests for DB information, and schema from the requesting BI tool via the MySQL wire protocol. [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) requires at least one [DRDL](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) file to start. You will need to have defined your schema with [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) before starting [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) ### SQL Compatibility MongoDB Connector for BI Version 2.x is compatible with SQL-99 SELECT statements, and uses the MySQL wire protocol. ## Tip ### See also: \n\n _Released Jan 5, 2017_ * Hides `.pem` key file passwords in logs.\n* [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) ignores binary fields when generating [DRDL](https://mongodb.com/docs/bi-connector/master/schema-configuration/) files.\n* Supports queries that `SELECT` variables prefixed with \"`mongodb`\".\n* Fixes incorrect result set from a `CROSS JOIN`.\n* Supports leading \"`.`\" characters on table names. ### MongoDB Connector for BI 2.0.1 _Released Dec 13, 2016_ * Fixes precedence issue with the `NOT` operator.\n* Fixes error looking up privilege information in databases with capital letters.\n* Supports `LIKE` pattern matching in `SHOW COLUMNS` queries.\n* Improves formatting of aggregation pipeline in logs.\n* Fixes substring function when the combined length of the starting index and substring exceeds the length of the string. ← [FAQ: The MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/faq/ \"Previous Section\")[Known Issues for MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/reference/known-issues/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/kerberos/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Configure Kerberos for BI Connector On this page * [Active Directory Configuration](#active-directory-configuration)\n* [MongoDB Configuration](#mongodb-configuration)\n* [BI Connector Configuration](#bi-connector-configuration)\n* [MongoDB Configuration](#mongodb-configuration-1)\n* [BI Connector Configuration](#bi-connector-configuration-1) _New in version 2.5_. The MongoDB Connector for BI supports Kerberos authentication for connecting BI tools and for the BI Connector's admin user authenticating with MongoDB. The following section guides you through configuring the BI Connector to use Kerberos authentication with two of the most common use cases: * Windows/Linux client machines authenticating to Active Directory\n* macOS client machine authenticating to Linux KDC If you have another use case, please contact [MongoDB Support](https://www.mongodb.com/support/get-started?tck=docs) for assistance.",
  "https://www.mongodb.com/docs/bi-connector/master/supported-operations/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Supported SQL Functions and Operators On this page * [Comparison Functions and Operators](#comparison-functions-and-operators)\n* [Logical Operators](#logical-operators)\n* [JOIN Expressions](#join-expressions)\n* [Control Flow Functions and Operators](#control-flow-functions-and-operators)\n* [String Functions](#string-functions)\n* [Numeric Functions and Operators](#numeric-functions-and-operators)\n* [Date and Time Functions](#date-and-time-functions)\n* [Cast Functions and Operators](#cast-functions-and-operators)\n* [Subquery Constructors](#subquery-constructors)\n* [Information Functions](#information-functions)\n* [GROUP BY (Aggregate) Functions](#group-by--aggregate--functions)\n* [Utility Statements](#utility-statements)\n* [Database Administration Statements](#database-administration-statements) The following tables list the various MySQL functions, constructors, and operators supported in MongoDB Connector for BI 2.2. ## Comparison Functions and Operators\n\n ## Logical Operators | Function/Operator | Description   |\n| ----------------- | ------------- |\n| AND, &&           | Logical AND   |\n| NOT, !            | Negates value |\n| \\||, OR           | Logical OR    |\n| XOR               | Logical XOR   | ## JOIN Expressions | Expression   | Description                                                                           |\n| ------------ | ------------------------------------------------------------------------------------- |\n| JOIN         | Select records that have matching values in multiple tables.                          |\n| INNER JOIN   | Semantically equivalent to JOIN.                                                      |\n| LEFT JOIN    | Return all records from the left table, and the matched records from the right table. |\n| RIGHT JOIN   | Return all records from the right table, and the matched records from the left table. |\n| NATURAL JOIN | Return only records which do not appear in both tables.                               |\n| USING        | Return all records where the given columns appear in both tables.                     | ## Control Flow Functions and Operators | Function/Operator | Description                  |\n| ----------------- | ---------------------------- |\n| CASE              | Case operator                |\n| IF()              | If/else construct            |\n| IFNULL()          | Null if/else construct       |\n| NULLIF()          | Return NULL if expr1 = expr2 | ## String Functions\n\n ## Numeric Functions and Operators\n\n ## Date and Time Functions\n\n ## Cast Functions and Operators | Function  | Description                       |\n| --------- | --------------------------------- |\n| CAST()    | Cast a value as a certain type    |\n| CONVERT() | Convert a value as a certain type | For more information on how the BI Connector performs type conversions, see [Type Conversion Modes.](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes) ## Subquery Constructors | Function | Description                                                |\n| -------- | ---------------------------------------------------------- |\n| ROW()    | Returns one row of values rather than one column of values | ## Information Functions\n\n ## `GROUP BY` (Aggregate) Functions | Function        | Description                                        |\n| --------------- | -------------------------------------------------- |\n| AVG()           | Return the average value of the argument           |\n| COUNT()         | Return a count of the number of rows returned      |\n| COUNT(DISTINCT) | Return the count of a number of different values   |\n| MAX()           | Return the maximum value                           |\n| MIN()           | Return the minimum value                           |\n| STD()           | Return the population standard deviation           |\n| STDDEV()        | Return the population standard deviation           |\n| STDDEV\\_POP()   | Return the population standard deviation           |\n| STDDEV\\_SAMP()  | Return the sample standard deviation               |\n| SUM()           | Return the sum                                     |\n| GROUP\\_CONCAT() | Return a concatenated string, non-NULL values only | ## Utility Statements | Statement          | Description                                                                  |\n| ------------------ | ---------------------------------------------------------------------------- |\n| USE <databaseName> | Choose the database to use as the current database for subsequent statements | ## Database Administration Statements\n\n ← [System Variables](https://mongodb.com/docs/bi-connector/master/reference/system-variables/ \"Previous Section\")[FAQ: The MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/faq/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/ssl-setup/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Configure TLS for BI Connector On this page * [Prerequisites](#prerequisites)\n* [Create and Test Self-Signed Certificates](#create-and-test-self-signed-certificates) For BI Connector to transmit data securely, you should enable Transport Layer Security (TLS) encryption on your MongoDB instance, your[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance, and in your BI tool. A complete description ofTLS configuration is outside the scope of this document, but this tutorial outlines the process for creating your own TLS certificates for testing purposes and starting the MongoDB components with TLSenabled. ## Important Use these procedures for testing purposes only. Your production environment should use TLS certificates that a recognized certificate authority (CA) has issued. ## Prerequisites * A MongoDB user with sufficient permissions to run [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld).\n* A [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) instance which you can start and stop.\n* A [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance which you can start and stop.\n* [OpenSSL](https://www.openssl.org/source/)\n* The [MySQL shell](https://dev.mysql.com/downloads/shell/)  \n## Tip  \n### See also:  \n[User Permissions for Cached Sampling](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) ### Note on Cluster Availability To ensure read availability for your MongoDB [replica sets](https://www.mongodb.com/docs/manual/replication/) and [sharded clusters](https://www.mongodb.com/docs/manual/sharding/) while BI Connector enables TLS, use a[rolling upgrade procedure](https://www.mongodb.com/docs/manual/tutorial/perform-maintence-on-replica-set-members/). While the replica set primary upgrades, applications must wait until after failover and election cycle completes. ## Tip ### See also:  [Replica Set Availability](https://www.mongodb.com/docs/manual/core/replica-set-high-availability/) ## Create and Test Self-Signed Certificates This tutorial contains instructions on creating several files which allow a [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) process to accept OpenSSL encrypted connections from an SQL client, such as the MySQL shell, and make an encrypted connection with a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) instance. We create two[.pem files](https://en.wikipedia.org/wiki//Privacy-enhanced%5FElectronic%5FMail). Each file contains an encryption key and a self-signed TLS certificate.",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Create a System DSN On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) The following steps describe how to create a system Data Source Name (DSN) for the BI Connector's [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)process. A DSN is a saved configuration which describes a database connection to be used by an ODBC driver. Once the DSN is created for the BI Connector, you can configure a wide range of SQL clients and BI tools to use the DSN and import data from MongoDB. ## Prerequisites Before creating a DSN, you should: ## Procedure",
  "https://www.mongodb.com/docs/bi-connector/master/connect/qlik/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Qlik Sense On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) This tutorial demonstrates how to connect to MongoDB Connector for BI using[Qlik Sense](http://www.qlik.com/us/products/qlik-sense). ## Prerequisites * Create a 64-bit [system Data Source Name (DSN).](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) ## Procedure 1 ### Start Qlik Sense Start the Qlik Sense desktop application. 2 ### Create a Connection to a MongoDB Database Using BI Connector 1. Click Create a New App\n2. Give your app a name and open it.\n3. Click Add Data.\n4. Select ODBC from the list of data sources.\n5. In the Create New Connection window, select the ODBC data source you created in Step 1.  \n![Screenshot of Qlik list of data sources](https://mongodb.com/docs/bi-connector/master/images/bi-connector/qlik-create-connection.png)  \n## Note  \nThe username and password values you specified in your DSN override any values you enter in this dialog window, so you can leave those fields blank.\n6. The database and tables listed in your [schema file](https://mongodb.com/docs/bi-connector/master/schema-configuration/) should appear in your app's overview.",
  "https://www.mongodb.com/docs/bi-connector/master/tutorial/install-bi-connector-rhel/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Install BI Connector on Red Hat Enterprise-based Linux On this page * [Prerequisites](#prerequisites)\n* [MongoDB User Permissions](#mongodb-user-permissions)\n* [Install the BI Connector](#install-the-bi-short) ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. To set up MongoDB Connector for BI with a business intelligence tool such as Tableau, follow the steps on this page. ## Prerequisites * OpenSSL installed on your host. To verify OpenSSL is installed on your system, run the following command: `| rpm -qa \\| grep -i openssl |\n| -------------------------- | ` If OpenSSL is not installed, use your package manager to install it. ## MongoDB User Permissions If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/), your BI Connector instance must also use authentication. The user that connects to MongoDB via the[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) program must have permission to read from all the namespaces you wish to sample data from. For more details about MongoDB user permissions in BI Connector, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) ## Install the BI Connector 1 ### Download the MongoDB Connector for BI. Download the BI Connector from the [MongoDB Download Center.](https://www.mongodb.com/download-center/bi-connector) 2 ### Install the MongoDB Connector for BI. 1. Extract the downloaded `.tar` archive:  \n```shell  \ntar -xvzf mongodb-bi-linux-{arch}-{platform}-{version}.tgz  \n```\n2. Install the programs within the `bin/` directory into a directory listed in your system `PATH`:  \n```shell  \nsudo install -m755 bin/mongo* /usr/bin/  \n```  \nIf a prior version exists, overwrite the binaries. _New in version 2.9_. To help you get started, a sample [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) [configuration file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) named`example-mongosqld-config.yml` is included with the installation package. To learn how to start BI Connectorwith a configuration file, refer to the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)documentation section on the [Configuration File.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) ### Launch the BI Connector You are now ready to launch the BI Connector. The following guide contains detailed information on BI Connector configuration, schema generation, and launch options: * [Launch BI Connector](https://mongodb.com/docs/bi-connector/master/launch/)",
  "https://www.mongodb.com/docs/bi-connector/master/connect/microstrategy/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from MicroStrategy Desktop You can use [MicroStrategy Desktop](https://www.microstrategy.com/us/get-started) to analyze a MongoDB database through the [MongoDB Connector for BI](https://www.mongodb.com/download-center/bi-connector?jmp=partners%5Fmicrostrategy). _New in version 2.2_. ## Procedure This tutorial is for version MicroStrategy Desktop version 10.11.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/looker/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Looker On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) You can import data from a MongoDB collection into the Looker BI Platform with the [MongoDB Connector for BI](https://www.mongodb.com/download-center/bi-connector). You do not need an ODBC data connection or a System DSN. ## Prerequisites Connecting the Looker BI Platform to the MongoDB Connector for Business Intelligence for MongoDB Atlas requires the following: * `M10` or larger Atlas cluster with the BI Connector enabled\n* [Looker](https://looker.com/product/business-intelligence) account ## Procedure 1 ### Add whitelist entries to Atlas for Looker. [Add whitelist entries](https://docs.atlas.mongodb.com/security-whitelist/index.html)to your Atlas cluster for all of [Looker's IP addresses](https://docs.looker.com/setup-and-management/enabling-secure-db). 2 ### Connect Looker to your Atlas cluster. 1. Log in to Looker.\n2. Click Admin, then click Connections.\n3. Click New Connection.\n4. Enter the required settings in the Connection Settingsmodal.  \n## Note  \nSelect MongoBI from Dialect. You can find the other required settings in the Atlas Connect modal. See [Connect via BI Connector for Atlas](https://docs.atlas.mongodb.com/bi-connection/)for more information.  \nSee [Connecting Looker to Your Database](https://docs.looker.com/setup-and-management/connecting-to-db)for more information.  \nFor example:  \n![Screenshot of Looker Connection Settings modal](https://mongodb.com/docs/bi-connector/master/images/bi-connector/looker-connection-settings.png)",
  "https://www.mongodb.com/docs/bi-connector/master/connect/tableau-auth/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Tableau Desktop with Authentication On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) ## Prerequisites ## Procedure",
  "https://www.mongodb.com/docs/bi-connector/master/connect/excel/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Microsoft Excel On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) You can import data from a MongoDB collection into a Microsoft Excel spreadsheet with the [MongoDB Connector for BI](https://www.mongodb.com/download-center/bi-connector) and an ODBC data connection. ## Prerequisites ## Procedure Before beginning this tutorial, make sure you have a running[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/mysql/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from the MySQL Client On this page * [Connect from MySQL without Authentication or TLS/SSL](#connect-from-mysql-without-authentication-or-tls-ssl)\n* [Connect from MySQL with Authentication](#connect-from-mysql-with-authentication)\n* [Connect from MySQL with Authentication and TLS/SSL](#connect-from-mysql-with-authentication-and-tls-ssl) You can use the command-line MySQL client to connect to the MongoDB Connector for BI. ## Connect from MySQL without Authentication or TLS/SSL To connect to a [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance listening on the MySQL default port `3307`, run the following command: ## Connect from MySQL with Authentication Install the C Authentication Plugin as described in[C Authentication Plugin.](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/) ## Important The C Authentication plugin was developed against MySQL 5.7.X Community Edition (64-bit), and tested with MySQL 5.7.X Community Edition and the latest version of MongoDB Connector for BI.**The plugin is not compatible with MySQL Server or Connector/ODBC driver version 8 and later.** The following example uses the C authentication plugin to connect to a [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance listening on port`3307` as user `reportsUser`. The MySQL shell prompts for the password after the command has been entered. For additional options, see the[MySQL Commands.](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c-mysql-options/#std-label-mysql-command-options) ## Connect from MySQL with Authentication and TLS/SSL ## Important The [binary distribution of MySQL Community](https://dev.mysql.com/doc/refman/5.7/en/openssl-versus-yassl.html)uses the [yaSSL](https://www.wolfssl.com/products/yassl/) SSL library to encrypt connections. MySQL Enterprise uses [OpenSSL](https://www.openssl.org/) which is compatible with MongoDB Connector for BI. Use MySQL Enterprise to connect to BI Connectorover TLS /SSL. To connect to a [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) instance listening on port `3307`, as user `grace` using authentication mechanism `PLAIN`, and using specific TLS/SSL CA and x.509 certificates, run the following command: If using the `$external` authentication source, wrap your username in single quotes or escape the `$` character with a backslash to prevent your shell from performing interpolation. Authentication requires your client to send your password in plain text. To send the password in plain text, either: * Use the `--enable-cleartext-plugin` option shown in the previous example, or\n* Set the environment variable `LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1`. For additional options, see the[MySQL Commands.](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c-mysql-options/#std-label-mysql-command-options) See the[MySQL documentation](https://dev.mysql.com/doc/refman/5.7/en/cleartext-authentication-plugin.html)for additional details on enabling the MySQL cleartext plugin.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/tableau/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Tableau Desktop Connect without Authentication [Instructions](https://mongodb.com/docs/bi-connector/master/connect/tableau-no-auth/#std-label-connect-with-tableau) for connecting to Tableau Desktop from a local MongoDB instance which does not use authentication. Connect with Authentication [Instructions](https://mongodb.com/docs/bi-connector/master/connect/tableau-auth/#std-label-connect-tableau-auth) for connecting to Tableau Desktop from a MongoDB instance which uses authentication. Connect with Authentication and TLS/SSL [Instructions](https://mongodb.com/docs/bi-connector/master/connect/tableau-auth-ssl/#std-label-tableau-auth-ssl) for connecting to Tableau Desktop from a MongoDB with authentication and TLS/SSL.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/spotfire-cloud/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Spotfire Cloud On this page * [Prerequisites](#prerequisites)\n* [Connect from Spotfire Cloud](#connect-from-spotfire-cloud-1) This tutorial demonstrates how to connect to MongoDB Connector for BI using[Spotfire Cloud](https://spotfire.tibco.com/overview). ## Prerequisites * Create a 64-bit [system Data Source Name (DSN).](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) ## Connect from Spotfire Cloud 1 ### Start the Spotfire Application 2 ### Add Data Connection 1. From the File menu, select the Add Data Tables item.\n2. In the Add Data Tables dialog, click theAdd dropdown menu in the upper right corner. Select Database at the bottom of the menu.  \n![Screenshot of the Spotfire Add Data Tables dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-add-data-tables.png)\n3. In the Open Database dialog, selectOdbc Data Provider, then clickConfigure.  \n![Screenshot of the Spotfire Open Database dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-open-database.png)\n4. In the Configure Data Source Connection dialog, select your DSN from the dropdown menu labelled System or user data source.  \n![Screenshot of the Spotfire Configure Data dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-configure-data-source.png)\n5. Fill in your MongoDB username and password and clickOK.  \n![Screenshot of the Spotfire Configure Data dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-configure-data-source2.png)\n6. The Open Database dialog should now display a connection string for your DSN. Click OK.  \n![Screenshot of the Spotfire Open Database dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-open-database2.png) 3 ### Specify Tables and Columns 1. Select the data you would like to work with from the available fields.  \n![Screenshot of the Spotfire Specify Tables dialog](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-specify-tables.png)\n2. Give this data connection a name in the Data source name text box.  \n## Note  \nThe name you use here is only for the Spotfire application's use. It does not change the name of your ODBC System DSN.\n3. Click OK.\n4. The Add Data Tables dialog should now list your connection as ready for import.  \n![Screenshot of the Data Connection Wizard option](https://mongodb.com/docs/bi-connector/master/images/bi-connector/spotfire-add-data-tables2.png)\n5. Click OK. You are now ready to add visualizations and analyze your data.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/powerbi/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Microsoft Power BI Desktop On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) This tutorial demonstrates how to connect to the MongoDB Connector for BI using[Microsoft Power BI Desktop](https://powerbi.microsoft.com/en-us/desktop/). ## Prerequisites * Create a 64-bit [system Data Source Name (DSN).](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) ## Procedure 1 ### Start Power BI Desktop. 2 ### Select an ODBC Data Source Name From the Home screen: 1. Select the Get Data tab.\n2. Click More...  \n![Screenshot of Power BI list of data sources](https://mongodb.com/docs/bi-connector/master/images/bi-connector/power-bi-data-source-list.png)\n3. Select ODBC from the list of data sources and click Connect.  \n![Screenshot of Power BI list of data sources](https://mongodb.com/docs/bi-connector/master/images/bi-connector/power-bi-data-source-list2.png)\n4. Select your ODBC data source name from the list and clickOK.  \n![Screenshot of Power BI list of data sources](https://mongodb.com/docs/bi-connector/master/images/bi-connector/power-bi-odbc-selection.png) 3 ### Select the Data to Work With The Power BI Navigator shows a list of databases. Select a database and one or more collections to work with. A preview of your data appears to the right. ![Screenshot of Power BI list of data sources](https://mongodb.com/docs/bi-connector/master/images/bi-connector/power-bi-navigator-preview.png) Click Load when your selection is complete. 4 ### Begin Working with Power BI Your selected data is available for use with Power BI's visualization tools.",
  "https://www.mongodb.com/docs/bi-connector/master/connect/tableau-auth-ssl/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Tableau Desktop with Authentication and TLS/SSL On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure)\n* [Download and install the ](#download-and-install-the-mongodb-bi-connector-odbc-driver)[MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/).\n* [Create a system DSN.](#create-a-system-dsn)\n* [Start Tableau.](#start-tableau)\n* [Connect using Tableau.](#connect-using-tableau)\n* [Download and install the ](#download-and-install-the-mongodb-bi-connector-odbc-driver-1)[MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/).\n* [Create a system DSN.](#create-a-system-dsn-1)\n* [Start Tableau.](#start-tableau-1)\n* [Connect using Tableau.](#connect-using-tableau-1) ## Prerequisites ## Procedure The connect Tableau to the MongoDB Connector for BI usingTLS/SSL:",
  "https://www.mongodb.com/docs/bi-connector/master/connect/tableau-no-auth/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Connect from Tableau Desktop without Authentication or TLS/SSL On this page * [Prerequisites](#prerequisites)\n* [Procedure](#procedure) ## Prerequisites ## Procedure",
  "https://www.mongodb.com/docs/bi-connector/master/meta/404/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # File not found The URL you requested does not exist or has been removed. [What is the MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/use-views/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Use MongoDB Views On this page * [Examples](#examples) Another way to control the data visible to BI Connector without using a[.drdl file](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) is to read from a[view](https://www.mongodb.com/docs/manual/core/views/). Views allow you to take a source collection and choose which fields to display, change the names of fields, sort data, and perform any kind of transformation that the[aggregation pipeline](https://www.mongodb.com/docs/manual/aggregation/) can accomplish. ## Example You can use views to redact sensitive information from a collection and direct BI Connector to read from the view, rather than the source collection. Use the [mongo](https://www.mongodb.com/docs/manual/reference/mongo/#mongodb-binary-bin.mongo) shell method[createView](https://www.mongodb.com/docs/manual/reference/method/db.createView/) to define a view on a collection and then use that view as a specified namespace when starting [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld). ## Examples Consider a collection named `salaries` in the `employees` database. By creating a view on the `salaries` collection that excludes all personally identifiable information, BI Connector can safely facilitate data analysis on the view without compromising the private data in the source collection. The following command starts [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) with data from a view named`salaries_redacted` in the `employees` database: `| mongosqld --sampleNamespaces \"employees.salaries_redacted\" |\n| ---------------------------------------------------------- | ` ## Tip ### See also:  [\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces) Another use case for managing your schema with a MongoDB view is if your working data set includes a sparsely populated but important field which may be excluded in the BI Connector sampling process. Consider a collection named `sparseCollection` which contains one field which occurs in every document and another field which occurs only occasionally. A portion of the collection might look like this: ```javascript { \"_id\" : 0, \"mainField\": 247 } { \"_id\" : 1, \"mainField\": 71 } { \"_id\" : 2, \"mainField\": 981 } { \"_id\" : 3, \"mainField\": 712 } { \"_id\" : 4, \"mainField\": 781, \"sparseField\": 1000 } { \"_id\" : 5, \"mainField\": 256 } { \"_id\" : 6, \"mainField\": 910 } \n``` To ensure that `sparseField` is included when BI Connector creates its schema, create a view in which `sparseField` is populated with zeroes in every document in which it does not occur. ```javascript db.runCommand (   {     create: \"denseCollection\",     viewOn: \"sparseCollection\",     pipeline: [       {         $addFields: {            sparseField: { $ifNull: [ \"$sparseField\", 0 ] }         }       }     ]   } ) \n``` To use the view as a data source when starting[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld), specify it with the[\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces) option. ```shell mongosqld --sampleNamespaces \"myDatabase.denseCollection\" \n```\n\n",
  "https://www.mongodb.com/docs/bi-connector/master/schema/persist-schema/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Auto Schema Mode (Persist a Schema in MongoDB) On this page * [Overview](#overview)\n* [Regenerate the Schema](#regenerate-the-schema)\n* [User Permissions for Persisted Schemas](#user-permissions-for-persisted-schemas) ## Overview The [\\--schemaSource](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaSource)option directs [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to use a particular database on the connected MongoDB instance for schema storage. [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) can either create a new database to use for schema storage or use an existing database. If you specify an existing database which has been used previously for schema storage, the [\\--schemaMode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaMode) option determines whether [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) writes new schema data to the specified database or only reads from it. If you specify a database which doesn't currently exist, you must set [\\--schemaMode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaMode) to`auto`. The following example command uses a database named `sampleDb` to store schema information and sets [\\--schemaMode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaMode) to `auto`. `| mongosqld --schemaSource sampleDb --schemaMode auto |\n| --------------------------------------------------- | ` To learn more about sampling modes, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## Regenerate the Schema By default, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) does not automatically resample data after generating the schema. Specify the[\\--schemaRefreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs) option to direct[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to automatically resample the data and regenerate the schema on a fixed schedule. To force a one-time update of the schema, use the[FLUSH SAMPLE](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/#std-label-resample-schema-data) command from your SQL client. ## User Permissions for Persisted Schemas If your MongoDB instance uses authentication, you must specify a MongoDB user with write permission on the specified schema database in addition to the permissions described under[cached sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-bi-cached-sampling)\n\n ```javascript db.getSiblingDB(\"admin\").createUser(   {     user: \"<username>\",     pwd: \"<password>\",     roles: [              { \"role\": \"readAnyDatabase\", \"db\": \"admin\"  },              { \"role\": \"readWrite\", \"db\": \"<dbname>\"  }            ]   } ) \n``` In the following example, a user named `bicUser` with the password`myPass` provides credentials to read from and update a schema database called `schemaDb`. ```shell mongosqld --auth -u bicUser -p myPass --schemaSource schemaDb --schemaMode auto \n``` ← [Standalone Schema Mode (Cached Sampling)](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/ \"Previous Section\")[Use MongoDB Views](https://mongodb.com/docs/bi-connector/master/schema/use-views/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/cached-sampling/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Standalone Schema Mode (Cached Sampling) On this page * [Overview](#overview)\n* [User Permissions for Cached Sampling](#user-permissions-for-cached-sampling) ## Overview _New in version 2.3:_ By default, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) samples each collection on the connected MongoDB instance and generates a relational representation of the schema which it then caches in memory. ## Note If you have [authentication](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--auth) enabled, ensure that your MongoDB user has the correct permissions. See[User Permissions](#std-label-cached-sampling-user-permissions) below. By default, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) does not automatically resample data after generating the schema. Specify the[\\--schemaRefreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs) option to direct[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to automatically resample the data and regenerate the schema on a fixed schedule. If the schema which [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) creates does not meet your BI workload needs, you can manually generate a [schema file](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) file and edit it as necessary. To learn more about sampling modes, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## User Permissions for Cached Sampling If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/) and you wish to use cached sampling, yourBI Connector instance must also use authentication. The admin user that connects to MongoDB via the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) program must have permission to read from all the [namespaces](https://www.mongodb.com/docs/manual/reference/glossary/#std-term-namespace)from which you want to sample data. ### Sample All Namespaces If you wish to sample all namespaces, the admin user requires the following privileges: * [listDatabases](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-listDatabases) on the cluster\n* [listCollections](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-listCollections) on each database\n* [find](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-find) on each database Alternatively, create a user with the built-in [readAnyDatabase](https://www.mongodb.com/docs/manual/core/security-built-in-roles/) role:\n\n ` ## Note Be aware of all privileges included with the[readAnyDatabase](https://www.mongodb.com/docs/manual/reference/built-in-roles/#readAnyDatabase) role before granting it to a user. To sample all namespaces, start [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) without the[\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces) option. ```shell mongosqld --auth --mongo-username <username> --mongo-password <password> \n``` ### Sample Specific Namespaces If you wish to sample specific namespaces, the admin user requires the following privileges: * [listCollections](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-listCollections) for each database where all collections are sampled\n* [find](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-find) on each collection or each database where all collections are sampled Alternatively, create a user with the built-in [readAnyDatabase](https://www.mongodb.com/docs/manual/core/security-built-in-roles/) role. For an example of creating a user with this role, see the[Sample All Namespaces](#std-label-sample-all-example) section. ## Note Be aware of all privileges included with the[readAnyDatabase](https://www.mongodb.com/docs/manual/reference/built-in-roles/#readAnyDatabase) role before granting it to a user. The following example creates a[custom role](https://www.mongodb.com/docs/manual/core/security-user-defined-roles/) in the[mongo shell](https://www.mongodb.com/docs/manual/mongo/) with the minimum required privileges to sample every collection in the `test`database: 1 #### Create a custom role with the required privileges. ```javascript use admin db.createRole(   {     role: \"samplingReader\",     privileges: [       {         resource: {           db: \"test\",           collection: \"\"         },         actions: [ \"find\", \"listCollections\" ]       }     ],     roles: []   } ) \n``` 2 #### Create a new user and assign the newly created role to them ```javascript db.createUser(   {     user: \"<username>\",     pwd: \"<password>\",     roles: [ \"samplingReader\" ]   } ) \n``` ## Note The user in the example above does not have the[listDatabases](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-listDatabases) privilege, so you must specify a database to sample data from with the[\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces)option when running [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) 3 #### Start `mongosqld` with authentication enabled Run [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) with authentication enabled and use the [\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces)option to sample data from all collections in the `test` database: ```shell mongosqld --auth --mongo-username <username> --mongo-password <password> \\   --sampleNamespaces 'test.*' \n``` ## Tip ### See also: \n\n ← [Map Relational Schemas to MongoDB](https://mongodb.com/docs/bi-connector/master/schema-configuration/ \"Previous Section\")[Auto Schema Mode (Persist a Schema in MongoDB)](https://mongodb.com/docs/bi-connector/master/schema/persist-schema/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/resample-schema/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Resample Schema Data with \"FLUSH SAMPLE\" On this page * [Overview](#overview) ## Overview When the [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) process starts it creates a[schema](https://mongodb.com/docs/bi-connector/master/schema-configuration/), either from a[schema file](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-msqld-schema-options) or by sampling data from a MongoDB instance. If the data in your MongoDB instance changes shape significantly with new fields or collections, you may wish to regenerate the schema BI Connector uses. You can regenerate the schema either by restarting [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) or by issuing the `FLUSH SAMPLE` command from within the[MySQL shell.](https://mongodb.com/docs/bi-connector/master/connect/mysql/#std-label-connect-with-mysql) By default, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) does not automatically resample data after generating the schema. Specify the[\\--schemaRefreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs) option to direct[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to automatically resample the data and regenerate the schema on a fixed schedule. ## Note To use the `FLUSH SAMPLE` command, you must have the[insert](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-insert) and [update](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-update) privileges. To learn more, see [User Authorization Model](https://mongodb.com/docs/bi-connector/master/reference/user-authorization/#std-label-user-authorization). You can't use the`FLUSH SAMPLE` command if [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)starts with a [schema file](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file)via the [\\--schema](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schema) option. ## Tip ### See also:  [\\--sampleNamespaces](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleNamespaces) [\\--schemaSource](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaSource) [\\--schemaMode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaMode) ← [Load a Schema from a DRDL File](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/ \"Previous Section\")[Geospatial Data](https://mongodb.com/docs/bi-connector/master/schema/geospatial-data/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/geospatial-data/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Geospatial Data On this page * [Geospatial Data](#geospatial-data-1) ## Geospatial Data If a collection contains a `2d` or `2dsphere` [geospatial index](https://www.mongodb.com/docs/manual/applications/geospatial-indexes/),BI Connector maps the indexed field into an array of numeric longitude-latitude coordinates. ### Example Given the following collection: `| db.points.createIndex( { pos : \"2dsphere\" } )            |\n| -------------------------------------------------------- |\n| db.points.insertOne({                                    |\n| pos : { type: \"Point\", coordinates: [ -73.97, 40.77 ] }, |\n| name: \"Central Park\",                                    |\n| category : \"Parks\"                                       |\n| })                                                       | ` BI Connector generates the following schema: ``` schema: - db: test   tables:   - table: points     collection: points     pipeline: []     columns:     - Name: _id       MongoType: bson.ObjectId       SqlName: _id       SqlType: varchar     - Name: category       MongoType: string       SqlName: category       SqlType: varchar     - Name: name       MongoType: string       SqlName: name       SqlType: varchar     - Name: pos.coordinates       MongoType: geo.2darray       SqlName: pos.coordinates       SqlType: numeric[] \n``` ## Note BI Connector does not recognize geospatial fields when reading from a [view.](https://mongodb.com/docs/bi-connector/master/schema/use-views/#std-label-schema-with-views) ← [Resample Schema Data with \"FLUSH SAMPLE\"](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/ \"Previous Section\")[Sampling Type Conflicts](https://mongodb.com/docs/bi-connector/master/schema/type-conflicts/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Load a Schema from a DRDL File The schema generation tool [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) outputs a schema file in [Document Relational Definition Language](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) (DRDL) format. Examine the generated schema's table structure and field types to verify that the generated schema supports your reporting requirements. You can manually edit the schema definition files to perform the following actions: * Add fields that [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) did not discover within the subset of documents that it sampled\n* Remove fields\n* Remove tables\n* Rename tables, so long as the `collection` field remains the same\n* Rename fields using the `sqlname` option ## Important To apply any changes you make to your DRDL files, you must restart[mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) ## Note BI Connector does not recognize geospatial fields when reading from a [view.](https://mongodb.com/docs/bi-connector/master/schema/use-views/#std-label-schema-with-views) When you're done editing your `.drdl` file, you can either: * Use [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) to [upload](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-commandoption-commandoption.upload) the schema to your MongoDB deployment.\n* Run [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) with the[\\--schema](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schema) option to specify the`.drdl` when launching `mongosqld`. ← [Use MongoDB Views](https://mongodb.com/docs/bi-connector/master/schema/use-views/ \"Previous Section\")[Resample Schema Data with \"FLUSH SAMPLE\"](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/type-conflicts/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Sampling Type Conflicts On this page * [Scalar-Scalar Conflicts](#scalar-scalar-conflicts)\n* [Composite Conflicts](#composite-conflicts) _Changed in version 2.6_. The flexible schema model of MongoDB allows a given field to contain data of multiple types, while relational databases restrict columns to a single data type. The BI Connector samples data from MongoDB to generate a relational schema model, but[type conversion](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/#std-label-type-conversion-modes) conflicts may occur when the BI Connector samples different data types from a field in MongoDB documents. There are two main categories of type conversion conflicts that may occur in the presence of multiple data types: conflicts between scalar types and conflicts involving composite types like documents and arrays. ## Note The BI Connector only uses the sampled subset of your data to detect type conflicts during schema generation. If your data set contains type conflicts on a field and the conflicting types were not both present in the sample, the generated schema will not be prepared to resolve these conflicts and may result in increased query latency. For more information on sampling configuration, such as setting the [\\--samplesize](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--sampleSize) and[\\--schemaRefreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs), see [Schema Options.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-msqld-schema-options) ## Scalar-Scalar Conflicts When a scalar-scalar confict occurs, the BI Connector uses the following lattice to determine the least upper bound of the two different data types: ![Scalar-scalar type lattice](https://mongodb.com/docs/bi-connector/master/images/scalar-lattice.png) ## Example If a given field contains `int`, `double`, and `string` types, the least upper bound is `string`. When a scalar-scalar conflict occurs, the BI Connector inserts a row into the `information_schema.COLUMNS` table and lists the different sampled types in the `COLUMN_COMMENT` column. ## Composite Conflicts Composite conflicts are type conversion conflicts involving a document or an array. The following sections describe how the BI Connector resolves both types of composite conflicts. ### Document Conflicts When a conflict occurs involving a document, the BI Connectordisplays the fields of the document type as separate columns using dot notation. For example, the `conflict` collection contains the following documents: `| { _id: 0, a: \"foo\" } // \"a\" is scalar (string)                       |\n| -------------------------------------------------------------------- |\n| { _id: 1, a: { a: \"bar\", b: \"baz\" } } // \"a\" is composite (document) | ` The BI Connector detects a scalar-composite conflict and generates the following relational schema: **Table:** `conflict` | \\_id | a     | a.a   | a.b   |\n| ---- | ----- | ----- | ----- |\n| 0    | \"foo\" | NULL  | NULL  |\n| 1    | NULL  | \"bar\" | \"baz\" | When a conflict occurs involving a document, the BI Connector inserts a row into the `information_schema.COLUMNS` table and lists the different sampled types in the `COLUMN_COMMENT` column. ### Array Conflicts When a conflict occurs involving an array, the BI Connector creates a new table for the conflict field with a column for the foreign key, array index, and value. The BI Connector unwinds the array into multiple rows in new table and fills in the columns accordingly. For example, the`conflict` collection contains the following documents: ```javascript { _id: 0, a: \"foo\" } // \"a\" is scalar (string)\n\n \n``` The BI Connector renders the above into the following two tables: **Table:** `conflict` | \\_id |\n| ---- |\n| 0    |\n| 1    | **Table:** `conflict_a` | \\_id | a\\_idx | a     |\n| ---- | ------ | ----- |\n| 0    | NULL   | \"foo\" |\n| 1    | 0      | \"bar\" |\n| 1    | 1      | \"baz\" | When a conflict occurs involving an array, the BI Connector: * Inserts a row into the `information_schema.COLUMNS` table and lists any different types sampled in the `COLUMN_COMMENT` column\n* Inserts a row into the `information_schema.TABLES` table containing information on how the array maps to the row in the`information_schema.COLUMNS` table ← [Geospatial Data](https://mongodb.com/docs/bi-connector/master/schema/geospatial-data/ \"Previous Section\")[Schema Management Changes in 2.11](https://mongodb.com/docs/bi-connector/master/schema/schema-management-changes/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/jdbc-driver/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # MySQL JDBC Driver The MongoDB Connector for Business Intelligence uses the [MySQL Connector/J](https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-installing.html)for JDBC connectivity. You must use a MySQL Connector/J version from the 5.1.x series with theBI Connector. The minimum supported version is [5.1.39.](https://mvnrepository.com/artifact/mysql/mysql-connector-java/5.1.39) ## Important You can't use MySQL Connector/J versions 6.x, 8.x, or later with the BI Connector.",
  "https://www.mongodb.com/docs/bi-connector/master/reference/mongotranslate/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # `mongotranslate` On this page * [Description](#description)\n* [Usage](#usage)\n* [Command Line Options](#command-line-options)\n* [Examples](#examples) ## Description `mongotranslate` is a learning tool designed to help users understand how SQL queries can be expressed in the MongoDB [aggregation language](https://www.mongodb.com/docs/manual/aggregation/). The BI Connector's SQL-to-aggregation translation engine provides the translations, which can also be used to troubleshoot specific BI Connector translation issues. `mongotranslate` is a standalone program. It requires a [drdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/) file generated by[mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl), but does not require[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) or [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) to be running at the time of execution. ## Usage `mongotranslate` has the following syntax: `| mongotranslate [--query \\| --queryFile] <query | queryfile> [options] |\n| ---------------------------------------------- | -------------------- | ` ## Command Line Options `--query`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--query \"Permalink to this definition\") Specifies a SQL query to translate into a MongoDB aggregation pipeline. Either `--query` or [\\--queryFile](#std-option-mongotranslate.--queryFile) is required. `--queryFile`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--queryFile \"Permalink to this definition\") Specifies a path to a file containing a SQL query to translate into a MongoDB aggregation pipeline. Either [\\--query](#std-option-mongotranslate.--query) or `--queryFile` is required. `--schema`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--schema \"Permalink to this definition\") _Required._ Specifies a `.drdl` schema file or a directory containing one or more `.drdl` schema files created by the[mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) program to use when translating a SQL query into an aggregation pipeline. `--dbName`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--dbName \"Permalink to this definition\") _Default_: `test` The database name to use for unqualified table names in the SQL query. The following example uses a collection named `fruit` and the`--dbName` option to specify that `fruit` is in the `groceries`database: ``` mongotranslate \"SELECT * FROM fruit WHERE _id > 100;\" \\   --schema schema.drdl --dbName groceries \n``` If you do not use the `--dbName` option to specify a database,`mongotranslate` assumes that `fruit` is in the `test`database. If the schema does not contain a database named `test`, or a table name `fruit` in the `test` database,`mongotranslate` returns an error. The following example uses a fully-qualified table name, so it does not need the `--dbName` option. ``` mongotranslate \"SELECT * FROM groceries.fruit WHERE _id > 100;\" \\   --schema schema.drdl \n``` If you specify a database with each table name in your SQL query, the`--dbName` option is ignored if it is used.\n\n _Optional._ Returns the `explain` output for the query plan instead of the translated aggregation pipeline. Using`--explain` returns similar output to running `EXPLAIN <query>`on a BI tool connected to BI Connector. `--format`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--format \"Permalink to this definition\") _Default_: `multiline` _Optional._ Valid options are `none` and `multiline`. The default `multiline` option displays results in a more easily readable format. | Command Type                                                          | Option              | Description                                                                             |\n| --------------------------------------------------------------------- | ------------------- | --------------------------------------------------------------------------------------- |\n| Without the [\\--explain](#std-option-mongotranslate.--explain) option | \\--format none      | Returns an aggregation pipeline all on one line.                                        |\n| Without the [\\--explain](#std-option-mongotranslate.--explain) option | \\--format multiline | Returns an aggregation pipeline with one pipeline stage per line.                       |\n| With the [\\--explain](#std-option-mongotranslate.--explain) option    | \\--format none      | Returns all fields on one line.                                                         |\n| With the [\\--explain](#std-option-mongotranslate.--explain) option    | \\--format multiline | Returns one field per line, with additional formatting for arrays and object subfields. | `--mongoversion`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongotranslate.--mongoversion \"Permalink to this definition\") _Default_: `latest` _Optional._ Returns an aggregation pipeline compatible with the specified MongoDB version. Acceptable values include: * `3.2`\n* `3.4`\n* `3.6`\n* `4.0`\n* `latest` The default value is `latest`. ## Examples The following example specifies an inline query for translation: ```javascript mongotranslate --query=“select test.name from restaurants where name like 'Brooklyn%'” \\ --schema=schema.drdl \n``` The above command returns the following results: ``` [   {\"$match\": {\"name\": {\"$regex\": \"^Brooklyn.*$\",\"$options\": \"i\"}}},   {\"$project\": {\"test_DOT_restaurants_DOT_name\": \"$name\",\"_id\": {\"$numberInt\":\"0\"}}}, ] \n``` ## Note If you need to quote a string inside the [\\--query](#std-option-mongotranslate.--query) parameter, be sure to use single quotes. If you must use double quotes or backticks in your query, use the[\\--queryFile](#std-option-mongotranslate.--query) option. The following example specifies a query file and returns a one-line result: ```javascript mongotranslate --queryFile=query.txt --schema=schema.drdl --format=none \n``` The following example uses the [\\--explain](#std-option-mongotranslate.--explain) option: ```javascript\n\n --schema=schema.drdl --explain \n``` The above command returns the following results: ``` [       {          \"ID\": 1,          \"StageType\": \"MongoSourceStage\",          \"Columns\": \"[{name: 'count(name)', type: 'int'}]\",          \"Sources\": null,          \"Database\": {},          \"Tables\": {},          \"Aliases\": {},          \"Collections\": {},          \"Pipeline\": {},          \"PipelineExplain\": {},          \"PushdownFailures\": null       } ] \n``` ← [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/ \"Previous Section\")[MongoDB BI Connector ODBC Driver](https://mongodb.com/docs/bi-connector/master/reference/odbc-driver/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/schema/schema-management-changes/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Schema Management Changes in 2.11 On this page * [Standalone Reader Changes](#standalone-reader-changes)\n* [Clustered-Reader Mode to Custom Mode](#clustered-reader-mode-to-custom-mode)\n* [Clustered-Writer Mode to Auto Mode](#clustered-writer-mode-to-auto-mode)\n* [Deprecations](#deprecations) The MongoDB Connector for BI version 2.11 release introduces significant improvements to stored schema management. The new stored-schema format is equivalent to [DRDL](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) files. These improvements are incompatible with BI Connector configurations from versions 2.10 and earlier. If you are running BI Connector 2.10 or earlier, use the following sections to update your configuration to be compatible with version 2.11 or later. If you are already running version 2.11 or later, no further configuration changes are required. To learn more about the different schema management configurations introduced in version 2.11, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## Standalone Reader Changes Use the following table to modify your BI Connector version 2.10 or earlier Standalone Reader configuration to be compatible with version 2.11 and later:\n\n To learn more about sampling modes, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## Clustered-Reader Mode to Custom Mode Use the following table to modify your BI Connector version 2.10 or earlier Clustered-Reader configuration to be compatible with the version 2.11 and later:\n\n To learn more about sampling modes, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## Clustered-Writer Mode to Auto Mode Use the following table to modify your BI Connector version 2.10 or earlier Clustered-Writer configuration to be compatible with version 2.11 and later:\n\n To learn more about sampling modes, see the[Sampling Mode Reference Chart.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-sampling-mode-chart) ## Deprecations The `--sampleRefreshIntervalSecs` flag and its corresponding config file setting `schema.sample.refreshIntervalSecs` were deprecated in favor of[\\--schemaRefreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaRefreshIntervalSecs)and [schema.refreshIntervalSecs](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-setting-schema.refreshIntervalSecs). The old command line option and configuration file setting will continue to work in the 2.11 release, but switching to the new command line option or configuration file setting is recommended. ← [Sampling Type Conflicts](https://mongodb.com/docs/bi-connector/master/schema/type-conflicts/ \"Previous Section\")[MongoDB Connector for BI Components](https://mongodb.com/docs/bi-connector/master/components/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/auth-plugin-jdbc/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # JDBC Authentication Plugin On this page * [Prerequisites](#prerequisites)\n* [Installing the Plugin](#installing-the-plugin) _New in version 2.2_. The MongoDB Connector for BI provides a client-side MySQL authentication plugin for Java that integrates with [MySQL's Connector/J JDBC driver](https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-installing.html). The `mongosql_auth` plugin allows a client to authenticate with aBI Connector and MongoDB deployment running with authentication enabled using one of the following authentication mechanisms: * `SCRAM-SHA-1`\n* `SCRAM-SHA-256`\n* `PLAIN` (LDAP)\n* `GSSAPI` (Kerberos) ## Note * The `SCRAM-SHA-1` and `SCRAM-SHA-256` mechanisms hash the passwords in the client plugin; however, all other data is in cleartext. If possible, use with encrypted connections.\n* The `PLAIN` mechanism sends the password in cleartext. Use encrypted connections with the `PLAIN` mechanism . ## Prerequisites This plugin requires a version of MySQL Connector/J between[5.1.39](https://mvnrepository.com/artifact/mysql/mysql-connector-java/5.1.39)and the latest 5.1.x. It can't use MySQL Server or MySQL Connector/J 8.0 or later. ## Installing the Plugin To download the plugin `.jar` file, choose one of the following options: ### Download from the [GitHub repository](https://github.com//mongodb/mongosql-auth-java/releases/) 1. Select the `.jar` file from the download site.\n2. Save it to a local directory. Refer to the directory as needed. ### Use [Maven](https://maven.apache.org/)\n\n ← [C Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/ \"Previous Section\")[Configure Kerberos for BI Connector](https://mongodb.com/docs/bi-connector/master/tutorial/kerberos/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/known-issues/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Known Issues for MongoDB Connector for BI On this page * [SQL Compatibility Issues](#sql-compatibility-issues) ## SQL Compatibility Issues ### BI Connector Returns Empty Set Where MySQL Returns `NULL` Values Some [SQL aggregate functions](https://dev.mysql.com/doc/refman/5.7/en/group-by-functions.html)(like `SUM`, `MIN`, or `COUNT`) return `NULL` if there are no matching values for that aggregate function. This response is effectively an empty row. Given the exact same SQL query, the BI Connector does not return`NULL` for any aggregate functions; it returns an empty set instead. ## Example You are analyzing the test performance of students for each of the classes offered in the last year by a university. Using Tableau, you run a SQL query to find statistics for each class, including the highest and lowest test scores as well as the sum and count of all the scores in the class. `| SELECT SUM(scores), COUNT(*), COUNT(scores), MAX(scores), MIN(scores) |\n| --------------------------------------------------------------------- |\n| FROM students_2019                                                    |\n| GROUP BY class;                                                       | ` Unfortunately, you accidentally run the query on the data for next year's classes, so there are no test scores for the query to find. If the student data was stored in MySQL, this query would return a single row with `NULL` values for fields that are calculated with the `SUM`, `MAX`, and `MIN` functions and `0` for fields that are calculated with the `COUNT` function. ``` SELECT SUM(scores), COUNT(*), COUNT(scores), MAX(scores), MIN(scores) FROM students_2019 GROUP BY class; +-------------+----------+---------------+-------------+-------------+ | sum(scores) | count(*) | count(scores) | max(scores) | min(scores) | +-------------+----------+---------------+-------------+-------------+ |   NULL      |        0 |             0 |   NULL      |   NULL      | +-------------+----------+---------------+-------------+-------------+ \n``` If the student data was stored in MongoDB and accessed via theBI Connector, this query would return an empty set. ``` SELECT SUM(scores), COUNT(*), COUNT(scores), MAX(scores), MIN(scores) FROM students_2019 GROUP BY class; Empty set (0.00 sec) \n``` ← [Release Notes for MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/release-notes/ \"Previous Section\")",
  "https://www.mongodb.com/docs/bi-connector/master/reference/system-variables/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # System Variables On this page * [Overview](#overview)\n* [Setting System Variables](#setting-system-variables) ## Overview BI Connector provides the following environment variables:\n\n ## Setting System Variables You must have the [atlasAdmin](https://www.mongodb.com/docs/atlas/security-add-mongodb-users/#database-user-privileges) database role to set environment variables on an Atlas-hosted BI Connector. To set them for a self-managedBI Connector, you must have the [inprog](https://www.mongodb.com/docs/manual/reference/privilege-actions/#mongodb-authaction-inprog) privilege on the MongoDB database to which you've connected the BI Connector. Use any SQL client that is connected to BI Connector to set these variables. The following example sets `mongodb_max_varchar_length`to `100`: `| SET GLOBAL mongodb_max_varchar_length = 100 |\n| ------------------------------------------- | ` You must start a new connection to the BI Connector after setting a system variable. The connection you used to set the system variable is not affected. ← [User Authorization Model](https://mongodb.com/docs/bi-connector/master/reference/user-authorization/ \"Previous Section\")[Supported SQL Functions and Operators](https://mongodb.com/docs/bi-connector/master/supported-operations/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/mongodrdl/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # `mongodrdl` On this page * [Description](#description)\n* [Syntax](#syntax)\n* [Default Minimum TLS Version](#default-minimum-tls-version)\n* [Commands](#commands)\n* [Options](#options)\n* [Usage Examples](#usage-examples)\n* [MongoDB Atlas Example](#mongodb-atlas-example) ## Description ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. `mongodrdl` is a relational schema management tool for the MongoDB Connector for BI. The`mongodrdl` binary can: * [Produce a schema](#mongodb-commandoption-commandoption.sample) based on the contents of one or more MongoDB [collections](https://www.mongodb.com/docs/manual/reference/glossary/#std-term-collection) and write them out into `.drdl` files used by [mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)\n* [Upload](#mongodb-commandoption-commandoption.upload) a `.drdl` file's schema to the MongoDB deployment your BI Connector is reading from.\n* [Download](#mongodb-commandoption-commandoption.download) stored schemas from your MongoDB deployment.\n* [Delete](#mongodb-commandoption-commandoption.delete) stored schemas from your MongoDB deployment.\n* [Name](#mongodb-commandoption-commandoption.name-schema) stored schemas in your MongoDB deployment for easier management. You can edit a `.drdl` file manually to customize the BI Connector's schema. To learn more about the `.drdl` format and manually editing`.drdl` files, see [Load a Schema from a DRDL File.](https://mongodb.com/docs/bi-connector/master/schema/load-schema-from-drdl/#std-label-schema-with-drdl-file) To learn more about all BI Connector schema management options, see [Map Relational Schemas to MongoDB.](https://mongodb.com/docs/bi-connector/master/schema-configuration/) ## Important To apply any changes you make to your DRDL files, you must restart[mongosqld.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) ## Syntax `mongodrdl` uses the following syntax: `| mongodrdl [<command>] [<options...>] |\n| ------------------------------------ | ` ## Default Minimum TLS Version _New in version 2.6_. The default minimum TLS version is 1.1 for outgoing connections from [mongodrdl](#mongodb-binary-bin.mongodrdl) to MongoDB. You can adjust this setting with the [\\--minimumTLSVersion](#std-option-mongodrdl.--minimumTLSVersion) option. ## Commands _New in version 2.11_. The behavior of `mongodrdl` is determined by one of the following commands. If no command is specified, `mongodrdl`samples the specified namespace. `sample`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.sample \"Permalink to this definition\") Samples the namespaces specified by the[\\--db](#std-option-mongodrdl.--db), optional[\\--collection](#std-option-mongodrdl.--collection), and other[command line options](#std-label-mongodrdl-command-line-options) to output a [.drdl](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) file. The `sample` command encapsulates all the [mongodrdl](#mongodb-binary-bin.mongodrdl) behavior prior to version 2.11. ```shell\n\n \n``` `list-schema-ids`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.list-schema-ids \"Permalink to this definition\") Lists the string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) of each stored schema and the date it was created. `list-schema-ids` requires the following option: | Name                                                    | Description                                                                |\n| ------------------------------------------------------- | -------------------------------------------------------------------------- |\n| [\\--schemaSource](#std-option-mongodrdl.--schemaSource) | _Required._ Specifies the database where the schema information is stored. | For example, the following command lists the schema ids in the`schemas` database: ```shell mongodrdl list-schema-ids --schemaSource schemas \n``` The output resembles the following: ```shell 5d72ad695c23a9e3e26e3c85 2019-09-06T15:03:05.556Z 5d72adea5c23a9e44882a1ad 2019-09-06T15:05:14.349Z \n``` `list-schema-names`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.list-schema-names \"Permalink to this definition\") Lists the name and string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) for each stored schema that has a name. Stored schemas are unnamed by default. You can refer to a named schema by using the `--name` option with the[download](#mongodb-commandoption-commandoption.download) and[delete](#mongodb-commandoption-commandoption.delete) commands. Use the[name-schema](#mongodb-commandoption-commandoption.name-schema) command to name or rename a schema. `list-schema-names` requires the following option: | Name                                                    | Description                                                                |\n| ------------------------------------------------------- | -------------------------------------------------------------------------- |\n| [\\--schemaSource](#std-option-mongodrdl.--schemaSource) | _Required._ Specifies the database where the schema information is stored. | For example, the following command returns the name and ObjectId for each named schema in the `schemas` database: ```shell mongodrdl list-schema-names --schemaSource schemas \n``` The output resembles the following: ```shell movies 5d72ad695c23a9e3e26e3c85 theaters 5d72adea5c23a9e44882a1ad \n``` `upload`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.upload \"Permalink to this definition\") Uploads the schema from the specified `.drdl` file to the database specified by the [\\--schemaSource](#std-option-mongodrdl.--schemaSource)option. Schemas are uploaded to the `schemas` collection.\n\n | Name                                                    | Description                                                                |\n| ------------------------------------------------------- | -------------------------------------------------------------------------- |\n| [\\--schemaSource](#std-option-mongodrdl.--schemaSource) | _Required._ Specifies the database where the schema information is stored. |\n| \\--drdl                                                 | _Required._ Path to the .drdl file to upload.                              | For example, the following command uploads the schema in the`movies.drdl` file to the `schemas` database: ```shell mongodrdl upload --schemaSource schemas --drdl ./movies.drdl \n``` The string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) of the uploaded schema is returned: ```shell 5d793f3f6a26a3ce66c304ea \n``` To use the newly uploaded schema, restart [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld)with the schema database specified by the[\\--schemaSource](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaSource) option and the [\\--schemaMode](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--schemaMode) set to `custom`: ```shell mongosqld --schemaMode custom --schemaSource <schema-db> \n``` `download`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.download \"Permalink to this definition\") Downloads a schema specified by its name or string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) and prints it to the console. `download` accepts the following options:\n\n For example, the following command prints the `movies` schema to the console: ```shell mongodrdl download --schemaSource schemas --name movies \n``` To store the schema in a `.drdl` file, direct the output to the desired `.drdl` file: ```shell mongodrdl download --schemaSource schemas --name movies > ./movies.drdl \n``` `delete`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.delete \"Permalink to this definition\") Deletes a schema specified by its name or string representation of the[ObjectId.](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) `delete` accepts the following options: | Name                                                    | Description                                                                                                                                                                                        |\n| ------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [\\--schemaSource](#std-option-mongodrdl.--schemaSource) | _Required._ Specifies the database where the schema information is stored.                                                                                                                         |\n| \\--name                                                 | The name of the schema. To learn more about naming schemas, see the [name-schema](#mongodb-commandoption-commandoption.name-schema)command._Required_ if \\--schema is not specified.               |\n| \\--schema                                               | The string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) of the schema._Required_ if \\--name is not specified. | For example, the following command deletes the schema with id`5d7941dc6a26a3d0fc397284` in the `schemas` database: ```shell mongodrdl delete --schemaSource schemas --schema 5d7941dc6a26a3d0fc397284 \n``` `name-schema`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-commandoption-commandoption.name-schema \"Permalink to this definition\") Creates a new name for a schema or updates a schema's existing name.\n\n `name-schema` requires the following options: | Name                                                    | Description                                                                                                                                                            |\n| ------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| [\\--schemaSource](#std-option-mongodrdl.--schemaSource) | _Required._ Specifies the database where the schema information is stored.                                                                                             |\n| \\--name                                                 | _Required._ The new name of the schema.                                                                                                                                |\n| \\--schema                                               | _Required_ The string representation of the[ObjectId](https://www.mongodb.com/docs/manual/reference/bson-types/#std-label-document-bson-type-object-id) of the schema. | For example, the following command names the`5d72adea5c23a9e44882a1ad` schema in the `schemas` database as`movies`: ```shell mongodrdl name-schema --name movies --schemaSource schemas --schema 5d72adea5c23a9e44882a1ad \n``` ## Options ### Core Options `--help`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--help \"Permalink to this definition\") Returns information on the options and use of [mongodrdl.](#std-program-mongodrdl) `--version`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--version \"Permalink to this definition\") Returns the [mongodrdl](#std-program-mongodrdl) release number. `--verbose <level>, -v <level>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--verbose \"Permalink to this definition\")\n\n `--quiet`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--quiet \"Permalink to this definition\") Hides all log output. `--uri <mongodb-uri>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--uri \"Permalink to this definition\") _New in version 2.12_. MongoDB URI connection string. ## Important The following command-line options cannot be used in conjunction with [\\--uri](#std-option-mongodrdl.--uri) option: * [\\--host](#std-option-mongodrdl.--host)\n* [\\--port](#std-option-mongodrdl.--port)\n* [\\--db](#std-option-mongodrdl.--db)\n* [\\--username](#std-option-mongodrdl.--username)\n* [\\--password](#std-option-mongodrdl.--password) (if the URI connection string also includes the password)\n* [\\--authenticationDatabase](#std-option-mongodrdl.--authenticationDatabase)\n* [\\--authenticationMechanism](#std-option-mongodrdl.--authenticationMechanism) Instead, specify these options as part of your [\\--uri](#std-option-mongodrdl.--uri)connection string. `--host <hostname><:port>, -h <hostname><:port>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--host \"Permalink to this definition\") _Default_: localhost:27017 Specifies a resolvable hostname for the [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) to which to connect. By default, the [mongodrdl](#std-program-mongodrdl) attempts to connect to a MongoDB instance running on the localhost on port number `27017`. To connect to a replica set, specify the[replSetName](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-replication.replSetName) and a seed list of set members, as in the following: ``` <replSetName>/<hostname1><:port>,<hostname2><:port>,<...> \n``` You can always connect directly to a single MongoDB instance by specifying the host and port number directly. `--port <port>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--port \"Permalink to this definition\") _Default_: 27017 Specifies the TCP port on which the MongoDB instance listens for client connections. `--db <database>, -d <database>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--db \"Permalink to this definition\") Specifies a database from which to generate a `.drdl` schema file. `--collection <collection>, -c <collection>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--collection \"Permalink to this definition\") Specifies a collection from which to generate a `.drdl` schema file. If you do not specify a collection, this option will use all collections in the specified database or instance. `--customFilterField <name>, -f <name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--customFilterField \"Permalink to this definition\") Specifies the field name to add for a custom MongoDB filter. See[Custom Filters](#std-label-mongodrdl-custom-filters) for more details. `--out <path>, -o <path>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--out \"Permalink to this definition\") _Default_: Standard out.\n\n `--sampleSize <size>, -s <size>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sampleSize \"Permalink to this definition\") _Default_: 1000 Specifies the number of documents to sample when generating the collection's schema. `--uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--uuidSubtype3Encoding \"Permalink to this definition\") Specify the encoding used to generate UUID binary subtype 3\\. Choose one of the following values: * `old`: Old BSON binary subtype representation\n* `csharp`: The C#/.NET legacy UUID representation\n* `java`: The Java legacy UUID representation `--preJoined`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--preJoined \"Permalink to this definition\") Generate unwound tables including parent columns, resulting in a \"pre-joined\" table. `--schemaSource <db-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--schemaSource \"Permalink to this definition\") _New in version 2.11_. Specifies the database where the schema information is stored. This option is not used by the [sample](#mongodb-commandoption-commandoption.sample) command. ### TLS/SSL Options `--ssl`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--ssl \"Permalink to this definition\") _Default_: False Instructs [mongodrdl](#std-program-mongodrdl) to use TLS/SSL when connecting to a MongoDB instance. `--sslCAFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslCAFile \"Permalink to this definition\") Specifies the MongoDB instance's `.pem` file containing the root certificate chain from the Certificate Authority. Specify the file name of the `.pem` file using relative or absolute paths. ## Warning For SSL connections ([\\--ssl](#std-option-mongodrdl.--ssl)) to [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) and[mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos), if the [mongodrdl](#std-program-mongodrdl) runs without the[\\--sslCAFile](#std-option-mongodrdl.--sslCAFile), [mongodrdl](#std-program-mongodrdl) will not attempt to validate the server certificates. This creates a vulnerability to expired [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) and [mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) certificates as well as to foreign processes posing as valid [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or[mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) instances. Ensure that you _always_ specify the CA file to validate the server certificates in cases where intrusion is a possibility. `--sslPEMKeyFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslPEMKeyFile \"Permalink to this definition\")\n\n This option is required when using the [\\--ssl](#std-option-mongodrdl.--ssl) option to connect to a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or [mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) that has[CAFile](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-setting-net.ssl.CAFile) enabled _without_ [allowConnectionsWithoutCertificates.](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.ssl.allowConnectionsWithoutCertificates) `--sslPEMKeyPassword <password>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslPEMKeyPassword \"Permalink to this definition\") Specifies the path to a file containing the certificate and private key for connecting to MongoDB. `--sslCRLFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslCRLFile \"Permalink to this definition\") Specifies the `.pem` file that contains the Certificate Revocation List. Specify the file name of the `.pem` file using relative or absolute paths. `--sslAllowInvalidCertificates`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslAllowInvalidCertificates \"Permalink to this definition\") Permits the MongoDB instance to present an invalid server SSL/TLS certificate. When using the [allowInvalidCertificates](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-setting-net.ssl.allowInvalidCertificates)setting, MongoDB logs the use of the invalid certificate as a warning. `--sslAllowInvalidHostnames`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslAllowInvalidHostnames \"Permalink to this definition\") Disables the validation of the hostnames in TLS/SSL certificates. Allows[mongodrdl](#std-program-mongodrdl) to connect to MongoDB instances if the hostname their certificates do not match the specified hostname. `--sslFIPSMode`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--sslFIPSMode \"Permalink to this definition\") Directs the [mongodrdl](#std-program-mongodrdl) to use the FIPS mode of the installed OpenSSL library. Your system must have a FIPS compliant OpenSSL library to use the [\\--sslFIPSMode](#std-option-mongodrdl.--sslFIPSMode) option. `--minimumTLSVersion <TLS1_0|TLS1_1|TLS1_2>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--minimumTLSVersion \"Permalink to this definition\") _Default_: TLS1\\_1 Specifies the minimum required TLS version for[mongodrdl](#mongodb-binary-bin.mongodrdl) to connect to a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or[mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) instance. The default value `TLS1_1`corresponds to TLS version 1.1. ### Authentication Options `--username <username>, -u <username>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--username \"Permalink to this definition\")\n\n `--password <password>, -p <password>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--password \"Permalink to this definition\") Specifies a password with which to authenticate to a MongoDB database that uses authentication. Use in conjunction with the `--username` and`--authenticationDatabase` options. `--authenticationDatabase <dbname>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--authenticationDatabase \"Permalink to this definition\") Specifies the database in which the user is created. See [Authentication Database.](https://www.mongodb.com/docs/manual/core/security-users/#std-label-user-authentication-database) `--authenticationMechanism <name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--authenticationMechanism \"Permalink to this definition\") _Default_: SCRAM-SHA-1 Specifies the authentication mechanism the [mongodrdl](#std-program-mongodrdl) instance uses to authenticate to the [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or [mongos.](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos)\n\n `--gssapiServiceName <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--gssapiServiceName \"Permalink to this definition\") _Default_: mongodb Service name to use when authenticating using GSSAPI/Kerberos. `--gssapiHostName <hostname>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongodrdl.--gssapiHostName \"Permalink to this definition\") _Default_: remote server's address Hostname to use when authenticating using GSSAPI/Kerberos. ### Custom Filters BI Connector uses a MongoDB [aggregation pipeline](https://www.mongodb.com/docs/manual/aggregation/)to perform queries against a MongoDB database. You can add a special field to your schema to pass a custom MongoDB [$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/)query string to your MongoDB instance. Use the `--customFilterField` option with [mongodrdl](#mongodb-binary-bin.mongodrdl) to name a custom filter field. This field passes a native MongoDB[$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/match/)stage to use as the first stage of the aggregation pipeline, which filters any results returned from MongoDB. The BI Connector applies this stage before any additional stages pushed down from SQL. The query can refer to any field in the collection, even if the fields are not exposed in the relational schema. For an example of custom filter usage, see[Custom Filter Example.](#std-label-mongodrdl-custom-filters-example) ## Usage Examples ### Schema Generation Example Given documents of the following shape in the collection `abc` in the database `test`: ```javascript {     \"_id\": ObjectId(),     \"close\": 7.45,     \"detail\": { \"a\": 2, \"b\": 3 } } \n``` Run [mongodrdl](#mongodb-binary-bin.mongodrdl) to generate a schema based on this collection: ```shell mongodrdl -d test -c abc -o schema.drdl \n``` The generated schema file (`schema.drdl`) looks similar to the following: ``` schema: - db: test   tables:   - table: abc     collection: abc     pipeline: []     columns:     - Name: _id       MongoType: bson.ObjectId       SqlName: _id       SqlType: varchar     - Name: close       MongoType: float64       SqlName: close       SqlType: numeric     - Name: detail.a       MongoType: float64       SqlName: detail.a       SqlType: numeric     - Name: detail.b       MongoType: float64       SqlName: detail.b       SqlType: numeric \n``` ### Custom Filter Example To use this field, specify the `--customFilterField` flag with the name you want this field to have: ```shell mongodrdl [ other options ] --customFilterField _MONGOFILTER -o schema.drdl \n``` Your DRDL file `schema.drdl` will include the following field in every generated table: ``` - Name: _MONGOFILTER   MongoType: mongo.Filter   SqlName: _MONGOFILTER   SqlType: varchar \n``` To add the special MongoDB query stage to your standard SQL, use the following SQL syntax: ``` SELECT <normal>   FROM <tablename>   WHERE <normal conditions> AND       _MONGOFILTER='{ <json string that represents query to use> }' SELECT name,age   FROM users   WHERE active='t' AND       _MONGOFILTER='{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}}' \n```\n\n ```javascript db.users.aggregate([    {$match:{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}},    {$match:{\"active\":true}},    {$project:{\"name\":1, \"age\":1}} ]); \n``` You can use this custom filter in any business intelligence tool by filtering on your special field and providing the value to match as a single quoted string representing valid [JSON](https://www.mongodb.com/docs/manual/reference/glossary/#std-term-JSON). All quotes inside the JSON must be double quotes. ### Authentication Example If your MongoDB server is running with [authentication](https://www.mongodb.com/docs/manual/core/authentication/) enabled, you must specify a username, password, and authentication database as options to your[mongodrdl](#mongodb-binary-bin.mongodrdl) command. To create a [.drdl](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) file from a[mongod](https://www.mongodb.com/docs/manual/reference/mongod/) instance with authentication enabled, use the following command format: ```shell mongodrdl --host myhost.example.net:27017 \\           --username dbUser \\           --password myPassword \\           --db reports \\           --collection FY2017 \\           --authenticationDatabase admin \\           --out schema.drdl \n``` ## MongoDB Atlas Example [MongoDB Atlas](https://docs.atlas.mongodb.com/) is a cloud service for running, monitoring, and maintaining MongoDB deployments, including the provisioning of dedicated servers for MongoDB instances. ## Note MongoDB Atlas now offers a hosted BI Connector and does not require a [.drdl](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) file. For more information on the Atlas-hosted BI Connector, see [Connect via BI Connector for Atlas.](https://docs.atlas.mongodb.com/bi-connection/#std-label-bi-connection) If you are running the BI Connector locally and wish to create a[.drdl](https://mongodb.com/docs/bi-connector/master/reference/drdl/#std-label-drdl) file from an Atlas database, use the following command format: ```shell mongodrdl --host <domain0>.mongodb.net:27017,<domain1>.mongodb.net:27017,... \\           --username <username> \\           --password <password> \\           --ssl \\           --authenticationDatabase admin \\           --db <database> \\           --out schema.drdl \n``` ← [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/ \"Previous Section\")[mongotranslate](https://mongodb.com/docs/bi-connector/master/reference/mongotranslate/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/drdl/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Document Relational Definition Language On this page * [File Format](#file-format)\n* [Field Types](#field-types)\n* [Embedded Documents](#embedded-documents)\n* [Custom Filters](#custom-filters)\n* [Aggregation Pipelines](#aggregation-pipelines) Document Relational Definition Language (`DRDL`) defines a relational view of a MongoDB schema. [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) samples documents from your MongoDB collections and derives a `DRDL` file from those documents.[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) then uses the schema defined in `DRDL` files to allow MySQL clients to query your MongoDB data. ## File Format The `DRDL` file lists your databases, tables, and columns in[YAML](http://yaml.org/) format. `| schema:                               |\n| ------------------------------------- |\n| - db: <database name>                 |\n| tables:                               |\n| - table: <SQL table name>             |\n| collection: <MongoDB collection name> |\n| pipeline:                             |\n| - <optional pipeline elements>        |\n| columns:                              |\n| - Name: <MongoDB field name>          |\n| MongoType: <MongoDB field type>       |\n| SqlName: <mapped SQL column name>     |\n| SqlType: <mapped SQL column type>     | ` ### Example Given documents of the following shape in the collection `abc` in the database `test`: ```javascript {     \"_id\": ObjectId(),     \"close\": 7.45,     \"detail\": { \"a\": 2, \"b\": 3 } } \n``` Run [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) to generate a schema based on this collection: ```shell mongodrdl -d test -c abc -o schema.drdl \n``` The generated schema file (`schema.drdl`) looks similar to the following: ``` schema: - db: test   tables:   - table: abc     collection: abc     pipeline: []     columns:     - Name: _id       MongoType: bson.ObjectId       SqlName: _id       SqlType: varchar     - Name: close       MongoType: float64       SqlName: close       SqlType: numeric     - Name: detail.a       MongoType: float64       SqlName: detail.a       SqlType: numeric     - Name: detail.b       MongoType: float64       SqlName: detail.b       SqlType: numeric \n``` ## Field Types BI Connector maps fields that always contain the same data type into the relational model. Schema generation deals specially with the following cases:\n\n ## Embedded Documents BI Connector maps embedded documents to simple fields that have a `.` separator character, making them appear similar to the way you would reference them using [dot notation](https://www.mongodb.com/docs/manual/core/document/#std-label-document-dot-notation) in a MongoDB query. While [Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau/) properly quotes identifiers, within ad-hoc SQL expressions you must double-quote every identifier that contains `.` characters or mixed-case characters. ### Example Consider the following document: ```javascript {     \"_id\": 1,     \"familyName\": \"Partridge\",     \"hometown\" : \"Hollywood Hills\",     \"address\" : { \"street\": \"123 Main Street\",                   \"city\" : \"Hollywood\",                   \"state\" : \"CA\",                   \"zip\" : \"90210\" },     \"members_since\" : ISODate(\"2002-04-12T00:00:00Z\") } \n``` Running [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) on a collection containing this document results in the following fields in the generated schema: | \\_id           | numeric   |\n| -------------- | --------- |\n| familyName     | varchar   |\n| hometown       | varchar   |\n| address.street | varchar   |\n| address.city   | varchar   |\n| address.state  | varchar   |\n| address.zip    | varchar   |\n| members\\_since | timestamp | ### Arrays BI Connector exposes arrays to business intelligence tools using two collections: one without the array, and the other having one document per array element. ### Example If you run [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) on a collection named `families`which contains the following document: ```javascript {    \"_id\": 1,    \"familyName\": \"Partridge\",    \"hometown\" : \"Hollywood Hills\",    \"familyMembers\" : [      {          \"firstname\" : \"Shirley\",          \"age\" : 42,          \"attributes\" : [              { \"name\" : \"instrument\", \"value\" : \"singer\" },              { \"name\" : \"role\", \"value\" : \"mom\" }          ]      },      {          \"firstname\" : \"Keith\",          \"age\" : 18,          \"attributes\" : [              { \"name\" : \"instrument\", \"value\" : \"guitar\" },              { \"name\" : \"role\", \"value\" : \"son\" }          ]      },      {          \"firstname\" : \"Laurie\",          \"age\" : 16,          \"attributes\" : [              { \"name\" : \"instrument\", \"value\" : \"keyboard\" },              { \"name\" : \"role\", \"value\" : \"sister\" }          ]      }] } \n``` This results in the following three tables: `families`\n\n `families_familyMembers` | \\_id                    | numeric |\n| ----------------------- | ------- |\n| familyMembers.age       | numeric |\n| familyMembers.firstname | varchar |\n| familyMembers\\_idx      | numeric | `families_familyMembers_attributes` | \\_id                           | numeric |\n| ------------------------------ | ------- |\n| familyMembers.attributes.name  | varchar |\n| familyMembers.attributes.value | varchar |\n| familyMembers.attributes\\_idx  | numeric |\n| familyMembers\\_idx             | numeric | You can join these tables together to view the data in a denormalized format. For example, you can list the people named in the above schema together with their family information using the following query: ``` SELECT f.*, m.`familyMembers.firstname` FROM families_familyMembers m JOIN families f ON m._id = f._id; \n``` ### Pre-Joining If you provide the [\\--preJoined](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#std-option-mongodrdl.--preJoined)option to [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl),BI Connector adds the fields in the containing document to each array element's document, thus \"pre-joining\" the table. In the previous example, the tables would contain the following additional columns: `families_familyMembers` | familyName | varchar |\n| ---------- | ------- |\n| hometown   | varchar | `families_familyMembers_attributes` | familyMembers.age       | numeric |\n| ----------------------- | ------- |\n| familyMembers.firstname | varchar |\n| familyMembers\\_idx      | numeric |\n| familyName              | varchar |\n| hometown                | varchar | ## Custom Filters You can add a column of type `mongo.Filter` to a collection in your`DRDL` file. This column type allows you to perform a custom[$match](https://www.mongodb.com/docs/manual/reference/operator/aggregation/$match/) query. For example, given the following schema describing a cloud of points with up to three components: ``` schema: - db: test   tables:   - table: points     collection: points     pipeline: []     columns:     - Name: _id       MongoType: bson.ObjectId       SqlName: _id       SqlType: varchar     - Name: x       MongoType: float64       SqlName: x       SqlType: numeric     - Name: \"y\"       MongoType: float64       SqlName: \"y\"       SqlType: numeric     - Name: z       MongoType: float64       SqlName: z       SqlType: numeric     - Name: filter       MongoType: mongo.Filter       SqlName: filter       SqlType: varchar \n``` You can select only three-dimensional points using the following query: ``` SELECT x, y, z FROM points WHERE filter='{\"z\": {\"$exists\": true}}'; \n``` ## Aggregation Pipelines ### Aggregation Pipelines using Views MongoDB 3.4 introduces [Read-Only Views](https://www.mongodb.com/docs/manual/core/views/) that you can use to filter incompatible data. For example, you can create a view in the `test` database that contains only documents containing a number in the `grade` field of a `grades`collection: ```javascript\n\n \n``` You can then use [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) to generate a schema from this view as you would a collection: ```shell mongodrdl -d test -c numericGrades \n``` ### Aggregation Pipelines in DRDL BI Connector can use [aggregation pipelines](https://www.mongodb.com/docs/manual/core/aggregation-pipeline/#std-label-aggregation-pipeline) as part of the schema to transform documents from the collection into the proper form for the relational tables. For example, consider a simple document in a collection named`simpleFamilies`: ```javascript {    \"_id\": 1,    \"familyName\": \"Partridge\",    \"familyMembers\" : [ \"Shirley\", \"Keith\", \"Laurie\"] } \n``` [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) generates a schema with the tables`simpleFamilies` and `simpleFamilies_familyMembers`. The table `simpleFamilies_familyMembers` enumerates each family member and has the following pipeline: ``` pipeline: - $unwind:     includeArrayIndex: familyMembers_idx     path: $familyMembers \n``` This pipeline uses [$unwind](https://www.mongodb.com/docs/manual/reference/operator/aggregation/unwind/#mongodb-pipeline-pipe.-unwind) to create a new record for each member of `familyMembers`. The schema tracks the array index in the field `familyMembers_idx`. #### Geospatial Data If a collection contains a `2d` or `2dsphere` [geospatial index](https://www.mongodb.com/docs/manual/applications/geospatial-indexes/),BI Connector maps the indexed field into an array of numeric longitude-latitude coordinates. ##### Example Given the following collection: ```javascript db.points.createIndex( { pos : \"2dsphere\" } ) db.points.insertOne({     pos : { type: \"Point\", coordinates: [ -73.97, 40.77 ] },     name: \"Central Park\",     category : \"Parks\" }) \n``` BI Connector generates the following schema: ``` schema: - db: test   tables:   - table: points     collection: points     pipeline: []     columns:     - Name: _id       MongoType: bson.ObjectId       SqlName: _id       SqlType: varchar     - Name: category       MongoType: string       SqlName: category       SqlType: varchar     - Name: name       MongoType: string       SqlName: name       SqlType: varchar     - Name: pos.coordinates       MongoType: geo.2darray       SqlName: pos.coordinates       SqlType: numeric[] \n``` ## Note BI Connector does not recognize geospatial fields when reading from a [view.](https://mongodb.com/docs/bi-connector/master/schema/use-views/#std-label-schema-with-views) ← [Configure TLS for BI Connector](https://mongodb.com/docs/bi-connector/master/tutorial/ssl-setup/ \"Previous Section\")[Log Messages](https://mongodb.com/docs/bi-connector/master/reference/log-messages/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/odbc-driver/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # MongoDB BI Connector ODBC Driver On this page * [Overview](#overview)\n* [Compatibility](#compatibility)\n* [Supported Platforms](#supported-platforms)\n* [Using the MongoDB BI Connector ODBC Driver](#using-the-mongodb-bi-connector-odbc-driver) ## Overview The [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) provides connectivity between a SQL client and the MongoDB Connector for BI. The MongoDB BI Connector ODBC Driver enables users to create a[Data Source Name (DSN)](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) and connect a variety of [BI tools](https://mongodb.com/docs/bi-connector/master/client-applications/) to the BI Connector. It includes the BI Connector [authentication plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/), which implements the client side of MongoDB-supported authentication mechanisms. ## Note The [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) connects the DSN to the BI Connector. ![Diagram showing that the DSN connects to the BI Connector.](https://mongodb.com/docs/bi-connector/master/images/bi-connector/components-all.jpg) ## Compatibility The [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) is compatible with BI Connector version 2.5 and later. The latest production version of BI Connector is available from the [MongoDB Download Center.](https://www.mongodb.com/download-center/bi-connector) ## Supported Platforms The [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) is available for: * Windows (32-bit and 64-bit)  \n## Note  \nBefore installing the [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) for Windows, ensure that the Microsoft [Visual C++ Redistributable for Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145)is installed on your system.\n* macOS  \n## Important  \nThe 1.0.16 edition of ODBC Manager included with the [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/)is not compatible with macOS Catalina. If you are on Catalina, download and install the[latest version (1.0.19) of ODBC manager.](http://www.odbcmanager.net/index.php)\n* Ubuntu 14.04 and 16.04\n* RHEL 7 ## Using the MongoDB BI Connector ODBC Driver Configure your system to use the [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) by setting up a[DSN](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/). A DSN holds configuration information about your BI Connector instance, including server address, port number, and login credentials. See[Create a System DSN](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) for instructions on setting up a DSN on your system.",
  "https://www.mongodb.com/docs/bi-connector/master/reference/log-messages/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Log Messages On this page * [Timestamp](#timestamp)\n* [Severity Levels](#severity-levels)\n* [Components](#components)\n* [Configure Log Verbosity Level](#configure-log-verbosity-level)\n* [Log Filename Format](#log-filename-format) [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) log messages have the form: `| <timestamp> <severity> <component> [<context>] <message> |\n| -------------------------------------------------------- | ` For example: ``` 2017-08-17T13:34:48.910-0700 I NETWORK [initandlisten] waiting for connections at 127.0.0.1:3307 \n``` ## Timestamp Log messages use [iso8601](https://www.ietf.org/rfc/rfc3339.txt)format for the timestamp, with a UTC offset set by the server on which[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) is running. ## Severity Levels The following table lists the severity levels associated with each log message: | Level | Description                             |\n| ----- | --------------------------------------- |\n| F     | Fatal                                   |\n| E     | Error                                   |\n| W     | Warning                                 |\n| I     | Informational, for Verbosity Level of 0 |\n| D     | Debug, for All Verbosity Levels > 0     | The default log verbosity level is `0`, which includes all non-`Debug` messages. Increasing the verbosity level adds additional`Debug` messages to the logs. To set the verbosity level, see[Configure Log Verbosity Levels.](https://www.mongodb.com/docs/manual/reference/log-messages/#std-label-log-messages-configure-verbosity) ## Components Log messages include a component field, providing functional categorization of the messages:\n\n ## Configure Log Verbosity Level To configure the log verbosity level: * Include the `-v` option when starting[mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) from the command line, or\n* Specify `systemLog.verbosity` in a[mongosqld configuration file.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-label-config-format) To specify a verbosity level when starting `mongosqld`, use the`-v` option. Repeating `v` increases the verbosity level. ## Example The following invocation of `mongosqld` sets the log verbosity level to `Developer`. ```shell mongosqld --schema schema.drdl --auth -vv \n``` To learn more about the verbosity levels and how to use them, see[\\--verbose.](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--verbose) ## Log Filename Format _New in version 2.5_. If you direct [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) to rotate log files with the [\\--logRotate](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--logRotate) option, BI Connectoradds a sequence number to ensure the uniqueness of each new log file name. Log files have the following format: ```shell <filename>.<logSeqNumber>.<timeStamp> \n``` For example: ```shell mongosqld.log.000000.2018-04-20T15_10_23.898858222-07_00 \n``` For more information on log file rotation, see the[\\--logRotate](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--logRotate) option. ← [Document Relational Definition Language](https://mongodb.com/docs/bi-connector/master/reference/drdl/ \"Previous Section\")[Type Conversion Modes](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # C Authentication Plugin On this page * [Supported Platforms](#supported-platforms)\n* [Installing the Plugin](#installing-the-plugin)\n* [Using the Plugin for Authentication](#using-the-plugin-for-authentication) The MongoDB authentication plugin is embedded in the [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/). If your BI tool connects using the [MongoDB BI Connector ODBC Driver](https://github.com/mongodb/mongo-bi-connector-odbc-driver/releases/) through a[DSN](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) or the driver directly, you do not need to install the authentication plugin separately. Install the standalone authentication plugin if your BI tool does not use an ODBC driver and accepts authentication plugins, such the [MySQL shell.](https://mongodb.com/docs/bi-connector/master/connect/mysql/) The `mongosql_auth` plugin allows a client to authenticate with aBI Connector and MongoDB deployment running with authentication enabled using one of the following authentication mechanisms: * `SCRAM-SHA-1`\n* `SCRAM-SHA-256`\n* `PLAIN` (LDAP)\n* `GSSAPI` (Kerberos) ## Note * The `SCRAM-SHA-1` and `SCRAM-SHA-256` mechanisms hash the passwords in the client plugin; however, all other data is in cleartext. If possible, use with encrypted connections.\n* The `PLAIN` mechanism sends the password in cleartext. Use encrypted connections with the `PLAIN` mechanism . ## Supported Platforms The plugin is built and tested on the following platforms: * Windows 2008 R2 (32- and 64-bit)\n* macOS 10.12 (64-bit)\n* Ubuntu 14.04 (64-bit)\n* RHEL 7.0 (64-bit) ## Important ### Testing Environment The C Authentication plugin was developed against MySQL 5.7.X Community Edition (64-bit), and tested with MySQL 5.7.X Community Edition and the latest version of MongoDB Connector for BI.**The plugin is not compatible with MySQL Server or Connector/ODBC driver version 8 and later.** ## Installing the Plugin ## Using the Plugin for Authentication Before you use the authentication plugin, you must set up authenticated users for MongoDB. For more information on creating authenticated users, see [Enable Authentication](https://www.mongodb.com/docs/manual/tutorial/enable-authentication/). If you are using the Atlas-hosted BI Connector, see [Configure Database Users.](https://docs.atlas.mongodb.com/security-add-mongodb-users/#std-label-mongodb-users) The procedure for using the C Authentication plugin library varies depending on your SQL client. The C Authentication plugin can be used via one of the following methods: * [DSN (Data Source Name)](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/) using the MySQL Connector/ODBC driver. For more information, see[Create a System DSN.](https://mongodb.com/docs/bi-connector/master/tutorial/create-system-dsn/)\n* The `--default-auth` option for the MySQL Shell. For more information, see [Connect from the MySQL Client.](https://mongodb.com/docs/bi-connector/master/connect/mysql/) This plugin can is compatible with both the 32-bit or 64-bit versions of the MySQL shell and MySQL Connector/ODBC driver. The installation directory differs depending on the version you install. ← [Authentication](https://mongodb.com/docs/bi-connector/master/authentication/ \"Previous Section\")[JDBC Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-jdbc/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/auth-plugin-c-mysql-options/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # MySQL Shell Options The following table lists some `mysql` command-line options available for use with the [C Authentication Plugin](https://mongodb.com/docs/bi-connector/master/reference/auth-plugin-c/), `mongosql_auth`. ## Tip ### See also:  A complete list of command line can be found in the[MySQL client documentation](https://dev.mysql.com/doc/refman/5.7/en/mysql.html).\n\n ← [Connect from the MySQL Client](https://mongodb.com/docs/bi-connector/master/connect/mysql/ \"Previous Section\")[Authentication](https://mongodb.com/docs/bi-connector/master/authentication/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/type-conversion/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # Type Conversion Modes On this page * [Mode Comparison Table](#mode-comparison-table) _New in version 2.6_. The MongoDB Connector for BI attempts to convert SQL queries into MongoDB[aggregation pipelines](https://www.mongodb.com/docs/manual/core/aggregation-pipeline/). When the BI Connector cannot translate a query into an aggregation pipeline, it executes the query in memory resulting in increased latency. Prior to version 2.6, [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#mongodb-binary-bin.mongosqld) could not translate type conversions to aggregation expressions, which prevented the translation of any query relying on type conversions. Starting in version 2.6, the `mongosql` type conversion mode pushes all type conversions down to MongoDB servers running version 4.0 or later for improved expression performance. This mode is enabled by default but you can configure it on a per-session basis by setting the`type_conversion_mode` session variable to one of the following values:\n\n The following example sets the `type_conversion_mode` variable to`mysql`: `| SET SESSION type_conversion_mode = 'mysql'; |\n| ------------------------------------------- | ` ## Important `mongosql` is the recommended type casting mode unless you require close replication of MySQL's behavior. The example above sets the `mysql` type conversion mode because `mongosql` is the default and does not need to be explicitly set. The type conversion mode applies to both: * Explicit type conversions. For example:  \n```  \nCAST(\"123\" AS unsigned)  \n```\n* Implicit type conversions. For example, `\"123\" + 456` ## Mode Comparison Table The following table provides an overview of how MySQL's type conversion behavior differs from the BI Connector's default type conversion behavior (`mongosql` mode):\n\n ## Note `mongosql` is the recommended type casting mode unless close replication of MySQL's behavior is required. ← [Log Messages](https://mongodb.com/docs/bi-connector/master/reference/log-messages/ \"Previous Section\")[User Authorization Model](https://mongodb.com/docs/bi-connector/master/reference/user-authorization/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/user-authorization/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # User Authorization Model _New in version 2.5_. The MongoDB Connector for BI restricts which database administration, data definition, and data manipulation statements authenticated users can run. The following table maps a SQL statement and corresponding MySQL privilege to the required MongoDB [privilege action:](https://www.mongodb.com/docs/manual/reference/privilege-actions/)\n\n ← [Type Conversion Modes](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/ \"Previous Section\")[System Variables](https://mongodb.com/docs/bi-connector/master/reference/system-variables/ \"Next Section\") →",
  "https://www.mongodb.com/docs/bi-connector/master/reference/mongosqld/": " [Docs Home](https://www.mongodb.com/docs/) → [MongoDB Connector for BI](https://mongodb.com/docs/bi-connector/master/) # `mongosqld` On this page * [Description](#description)\n* [Usage](#usage)\n* [Starting mongosqld with a Schema File](#starting-mongosqld-with-a-schema-file)\n* [Starting mongosqld with a Schema Database](#starting-mongosqld-with-a-schema-database)\n* [Starting mongosqld with Specified Namespaces](#starting-mongosqld-with-specified-namespaces)\n* [MongoDB User Permissions](#mongodb-user-permissions)\n* [Default Minimum TLS Version](#default-minimum-tls-version)\n* [Command Line Options](#command-line-options)\n* [Core Options](#core-options)\n* [Schema Options](#schema-options)\n* [Log Options](#log-options)\n* [MongoDB TLS/SSL Options](#mongodb-tls-ssl-options)\n* [Client TLS/SSL Options](#client-tls-ssl-options)\n* [Service Options](#service-options)\n* [Kerberos Options](#kerberos-options)\n* [Socket Options](#socket-options)\n* [Set Parameter Option](#set-parameter-option)\n* [Configuration File](#configuration-file)\n* [Logging Options](#logging-options)\n* [Schema Options](#schema-options-1)\n* [Data Sampling Options](#data-sampling-options)\n* [Runtime Options](#runtime-options)\n* [Network Options](#network-options)\n* [Security Options](#security-options)\n* [MongoDB Host Options](#mongodb-host-options)\n* [Process Management Options](#process-management-options)\n* [Set Parameter Options](#set-parameter-options)\n* [Load External Configuration Values](#load-external-configuration-values)\n* [Example Configuration File](#example-configuration-file)\n* [Usage Examples](#usage-examples)\n* [mongosqld with a Schema File](#mongosqld-with-a-schema-file)\n* [Specify a Collection to Sample](#specify-a-collection-to-sample)\n* [Specify Multiple Collections to Sample](#specify-multiple-collections-to-sample)\n* [Exclude Databases and Collections from Sampling](#exclude-databases-and-collections-from-sampling)\n* [Sample All Documents in a Collection](#sample-all-documents-in-a-collection)\n* [Specify a Database to Persist a Schema](#specify-a-database-to-persist-a-schema)\n* [Specify a Data Resampling Interval](#specify-a-data-resampling-interval)\n* [mongosqld with Authentication Enabled](#mongosqld-with-authentication-enabled)\n* [mongosqld with a Configuration File](#mongosqld-with-a-configuration-file)\n* [Usage with Atlas](#usage-with-atlas)\n* [Sampling Mode Reference Chart](#sampling-mode-reference-chart)\n* [Invalid Configurations](#invalid-configurations) ## Description ## Note The MongoDB Connector for BI and associated utilities are compatible with all [currently supported](https://www.mongodb.com/support-policy) MongoDB server versions. [mongosqld](#mongodb-binary-bin.mongosqld) accepts incoming requests from a SQL client and proxies those requests to a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or[mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) instance. ## Usage _New in version 2.3:_\n\n You can specify which namespace or namespaces to sample data from with the [\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces)option. If you don't specify any namespaces or a schema file, [mongosqld](#mongodb-binary-bin.mongosqld) samples data from all databases in the target MongoDB instance except the `admin` and`local` databases. You can specify a database in which to store schema information with the [\\--schemaSource](#std-option-mongosqld.--schemaSource)option. Otherwise, [mongosqld](#mongodb-binary-bin.mongosqld) holds the schema in memory. ### Starting `mongosqld` with a Schema File Use the [\\--schema](#std-option-mongosqld.--schema) option to specify a schema file when starting [mongosqld.](#mongodb-binary-bin.mongosqld) `| mongosqld --schema /path/to/schema-file.drdl |\n| -------------------------------------------- | ` Use [mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/#mongodb-binary-bin.mongodrdl) to create a schema file from a MongoDB instance. ### Starting `mongosqld` with a Schema Database Use the [\\--schemaSource](#std-option-mongosqld.--schemaSource)option to specify a database to store schema information. ```shell mongosqld --schemaSource sampleDb \n``` ### Starting `mongosqld` with Specified Namespaces Use the [\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces)option to specify databases and collections for[mongosqld](#mongodb-binary-bin.mongosqld) to sample data from to create the schema. ```shell mongosqld --sampleNamespaces contacts.addresses \n``` See additional [usage examples](#std-label-mongosqld-usage-examples) below. ## MongoDB User Permissions If your MongoDB instance uses [authentication](https://www.mongodb.com/docs/manual/core/authentication/), your BI Connector instance must also use authentication. The user that connects to MongoDB via the[mongosqld](#mongodb-binary-bin.mongosqld) program must have permission to read from all the namespaces you wish to sample data from. For more details about MongoDB user permissions in BI Connector, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) For more information on MongoDB users and roles, see[Role-Based Access Control.](https://www.mongodb.com/docs/manual/core/authorization/) See the [example](#std-label-mongosqld-auth-example) below of[mongosqld](#mongodb-binary-bin.mongosqld) with authentication. ## Default Minimum TLS Version _New in version 2.6_. The default minimum TLS version is 1.1 for all client connections. This includes incoming client connections to [mongosqld](#mongodb-binary-bin.mongosqld)and outgoing connections to MongoDB. You can adjust this setting for incoming connections with the[\\--minimumTLSVersion](#std-option-mongosqld.--minimumTLSVersion) option and for outgoing connections with the[\\--mongo-minimumTLSVersion](#std-option-mongosqld.--mongo-minimumTLSVersion) option. ## Command Line Options ### Core Options `--help`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--help \"Permalink to this definition\") Returns information on the options and use of [mongosqld.](#std-program-mongosqld) `--addr`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--addr \"Permalink to this definition\") _Default_: 127.0.0.1:3307 Specifies the host address to listen on.\n\n Returns the [mongosqld](#std-program-mongosqld) release number. `--config <path>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--config \"Permalink to this definition\") Specifies the path to a [configuration file.](#std-label-config-format) `--mongo-uri <uri>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-uri \"Permalink to this definition\") _Default_: mongodb://localhost:27017 Specifies a MongoDB [connection string](https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-mongodb-uri) to connect to. The [\\--mongo-uri](#std-option-mongosqld.--mongo-uri) option supports the following options within the connection string: * [readPreference](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.readPreference)\n* [readPreferenceTags](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.readPreferenceTags)\n* [replicaSet](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.replicaSet)\n* `connect` For more information on these URI options see[Read Preference Options](https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-connections-read-preference) and[Replica Set Option.](https://www.mongodb.com/docs/manual/reference/connection-string/#std-label-replica-set-option) For options set in the Mongo URI not included in the list above, use the equivalent [mongosqld](#std-program-mongosqld) option. For the complete list of [mongosqld](#std-program-mongosqld) options, see [Command Line Options.](#std-label-mongosqld-command-line-options) ## Note Instead of specifying a `username` and `password` in your connection string, run [mongosqld](#std-program-mongosqld) with the [\\--auth](#std-option-mongosqld.--auth) option to direct [mongosqld](#std-program-mongosqld) to pass the authentication credentials provided by the SQL client to the MongoDB server. Similarly, instead of enabling [ssl](https://www.mongodb.com/docs/manual/reference/connection-string/#mongodb-urioption-urioption.ssl) in the connection string, run [mongosqld](#std-program-mongosqld) with [\\--mongo-ssl.](#std-option-mongosqld.--mongo-ssl) To disable automatic replica set server discovery logic and force a connection to the specified server, use the `connect=direct`option. ```shell mongosqld --mongo-uri \"mongodb://<hostname>:<port>/?connect=direct\" \n``` URI options not in the list above _nor_ in the list of supported [mongosqld](#std-program-mongosqld) [options](#std-label-mongosqld-command-line-options) are not supported. `--mongo-versionCompatibility <version-number>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-versionCompatibility \"Permalink to this definition\") Restricts [mongosqld](#std-program-mongosqld) to using features that the specified version of MongoDB supports. Only necessary when used with replica sets in which members use different MongoDB versions or when performing a rolling upgrade of MongoDB. Only supports MongoDB version 3.2 or later.\n\n ```shell mongosqld --mongo-versionCompatibility 3.2 \n``` `--maxVarcharLength <length>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--maxVarcharLength \"Permalink to this definition\") _New in version 2.2_. Specifies the maximum length, in characters, for all varchar fields. If[mongosqld](#std-program-mongosqld) encounters a string that is longer than the maximum length,[mongosqld](#std-program-mongosqld) truncates it to the maximum length and logs a warning. `--mongo-username <username>, -u <username>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-username \"Permalink to this definition\") _New in version 2.3_. Specifies the authentication username to use for schema discovery. Only required if [\\--auth](#std-option-mongosqld.--auth) is enabled. The user specified by`--mongo-username` must be a valid MongoDB user with the`listDatabases` privilege. See [mongosqld User Permissions.](#std-label-user-permissions) `--mongo-password <password>, -p <password>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-password \"Permalink to this definition\") _New in version 2.3_. Specifies the authentication password to use for schema discovery. Only required if [\\--auth](#std-option-mongosqld.--auth) is enabled. Use in conjunction with[\\--mongo-username.](#std-option-mongosqld.--mongo-username) `--mongo-authenticationSource <auth-db-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-authenticationSource \"Permalink to this definition\") _Default_: admin _New in version 2.3_. Specifies the database that holds the credentials for the schema discovery user. Only available if [\\--auth](#std-option-mongosqld.--auth) is enabled. Use in conjunction with credential options [\\--mongo-username](#std-option-mongosqld.--mongo-username) and[\\--mongo-password.](#std-option-mongosqld.--mongo-password) `--mongo-authenticationMechanism <authMechanism>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-authenticationMechanism \"Permalink to this definition\") _Default_: SCRAM-SHA-1 _New in version 2.3_. Specifies the authentication mechanism to use for schema discovery. Only available if [\\--auth](#std-option-mongosqld.--auth) is enabled. Use in conjunction with credential options [\\--mongo-username](#std-option-mongosqld.--mongo-username) and[\\--mongo-password.](#std-option-mongosqld.--mongo-password)\n\n ### Schema Options `--schema <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--schema \"Permalink to this definition\") Specifies the path to a schema file or the schema directory. `--schemaDirectory <directoryname>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--schemaDirectory \"Permalink to this definition\") _Deprecated since version 2.2_. Use [\\--schema](#std-option-mongosqld.--schema) instead. `--sampleNamespaces <db.collection>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sampleNamespaces \"Permalink to this definition\") _New in version 2.5_. `--sampleNamespaces` specifies a database and collection for either inclusion or exclusion from the data sampling process which creates the schema. It is also possible to specify multiple collections from a single databases, or multiple collections from multiple databases. See [examples](#std-label-sampleNamespaces-example) below. If you do not use the `--sampleNamespaces` option or the[\\--schema](#std-option-mongosqld.--schema) option, `mongosqld` samples data from all available MongoDB databases and collections except the`admin` and `local` databases. `--schemaMode <[custom|auto]>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--schemaMode \"Permalink to this definition\") _Default_: `custom` _New in version 2.11_. Configures the [sampling mode](#std-label-sampling-mode-chart) of[mongosqld](#mongodb-binary-bin.mongosqld). Must be used with the[\\--schemaSource](#std-option-mongosqld.--schemaSource) option. The following values determine the sampling behavior: | Value  | \\--schemaMode Behavior                                                                                                                                                                          |\n| ------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| custom | [mongosqld](#mongodb-binary-bin.mongosqld) reads a stored schema from the MongoDB database specified by the[\\--schemaSource](#std-option-mongosqld.--schemaSource) option.                      |\n| auto   | [mongosqld](#mongodb-binary-bin.mongosqld)samples the schema and writes the schema data to the MongoDB database specified by the[\\--schemaSource](#std-option-mongosqld.--schemaSource) option. | For more information on configuring the sample mode, see the[Sampling Mode Reference Chart.](#std-label-sampling-mode-chart) ## Important If `mongosqld` has [authentication](#std-option-mongosqld.--auth)enabled, the authenticated user must have the write privilege on the specified [\\--schemaSource](#std-option-mongosqld.--schemaSource) database. See [Built-In Roles](https://www.mongodb.com/docs/manual/reference/built-in-roles/) for more information about the`readWrite` role.\n\n _New in version 2.11_. Required whenever the [\\--schemaMode](#std-option-mongosqld.--schemaMode)is set. Specifies the database where the schema information is stored. ## Note If you do not specify any of the [\\--schema](#std-option-mongosqld.--schema),[\\--schemaMode](#std-option-mongosqld.--schemaMode), and`--schemaSource` options, [mongosqld](#mongodb-binary-bin.mongosqld) holds its schema in memory. To learn more about sampling modes, see the[Sampling Mode Reference Chart.](#std-label-sampling-mode-chart) `--schemaName <db-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--schemaName \"Permalink to this definition\") _Default_: `defaultSchema` _New in version 2.11_. Optional. The name of the schema to load from or write to the [\\--schemaSource](#std-option-mongosqld.--schemaSource) database. Specifying schema names allows you to store multiple schemas in the [\\--schemaSource](#std-option-mongosqld.--schemaSource) database. The behavior depends on on the value of[\\--schemaMode:](#std-option-mongosqld.--schemaMode) | [\\--schemaMode](#std-option-mongosqld.--schemaMode) Value | \\--schemaName Behavior                                                                                                                                       |\n| --------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| custom                                                    | The name of the schema to load from the database specified by the [\\--schemaSource](#std-option-mongosqld.--schemaSource)option.                             |\n| auto                                                      | The name of the schema to write to the [\\--schemaSource](#std-option-mongosqld.--schemaSource) database after the BI Connectorsamples the schema on startup. | If not specified, defaults to `defaultSchema`. To learn more about sampling modes, see the[Sampling Mode Reference Chart.](#std-label-sampling-mode-chart) `--sampleSize <number>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sampleSize \"Permalink to this definition\") _Default_: 1000 _New in version 2.3_. The number of documents per namespace to sample when gathering schema information. Set [\\--sampleSize](#std-option-mongosqld.--sampleSize) to `0` to include all documents in the specified namespace when building the schema. If you do not specify a namespace, setting [\\--sampleSize](#std-option-mongosqld.--sampleSize) to`0` causes [mongosqld](#mongodb-binary-bin.mongosqld) to consider all documents in all databases (excluding `local`, `admin`, and `system`) when building the schema. See an [example](#std-label-sample-size-0) below.\n\n _Default_: 0 _Changed in version 2.11_: Renamed `--sampleRefreshIntervalSecs` to`--schemaRefreshIntervalSecs` The interval in seconds at which [mongosqld](#mongodb-binary-bin.mongosqld) re-samples data to create its schema. The default value is `0`, which means that after the initial sampling no re-sampling occurs for the duration of the connection. The specified value must be a positive integer. To force a one-time update of the schema, use the[FLUSH SAMPLE](https://mongodb.com/docs/bi-connector/master/schema/resample-schema/#std-label-resample-schema-data) command from your SQL client. `--uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--uuidSubtype3Encoding \"Permalink to this definition\") Specify the encoding used to generate UUID binary subtype 3\\. Choose one of the following values: * `old`: Old BSON binary subtype representation\n* `csharp`: The C#/.NET legacy UUID representation\n* `java`: The Java legacy UUID representation `--prejoin`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--prejoin \"Permalink to this definition\") _New in version 2.6_. Schema option for combining array and non-array data into a single table. MongoDB documents which contain arrays are normally translated into tabular format with separate tables for array data and non-array data. Consider a MongoDB collection named `test`with the following document: ``` { \"_id\" : 1, \"a\" : 3, \"b\" : [ \"orange\", \"apple\", \"pear\" ] } \n``` The above collection translates to the following two tables in tabular format: ``` mysql> select * from test; +------+------+ | _id  | a    | +------+------+ |    1 |    3 | +------+------+ mysql> select * from test_b; +------+--------+-------+ | _id  | b      | b_idx | +------+--------+-------+ |    1 | orange |     0 | |    1 | apple  |     1 | |    1 | pear   |     2 | +------+--------+-------+ \n``` The [\\--prejoin](#std-option-mongosqld.--prejoin) flag causes data from the `a` column to be included in the `test_b` table: ``` mysql> select * from test_b; +------+------+--------+-------+ | _id  | a    | b      | b_idx | +------+------+--------+-------+ |    1 |    3 | orange |     0 | |    1 |    3 | apple  |     1 | |    1 |    3 | pear   |     2 | +------+------+--------+-------+ \n``` ### Log Options `--logAppend`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--logAppend \"Permalink to this definition\") Appends new logging output to an existing log file specified by[\\--logPath.](#std-option-mongosqld.--logPath) Requires [\\--logRotate.](#std-option-mongosqld.--logRotate) `--logPath <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--logPath \"Permalink to this definition\") _Default_: stderr Specifies a path to a log file for storing logging output. `--logRotate reopen | rename`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--logRotate \"Permalink to this definition\") _Default_: rename\n\n When this option is set, the logs rotate when you issue a `FLUSH LOGS` command to the MongoDB Connector for BI or when you restart `mongosqld`. If you set [\\--logRotate](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--logRotate) to `rename`: The existing log file is closed. An [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\\-formatted timestamp is appended to the closed log file. A new log file is created. If you set [\\--logRotate](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/#std-option-mongosqld.--logRotate) to `reopen`: The existing log file is closed and reopened. ## Note On UNIX and macOS platforms, you can issue a `SIGUSR1` signal to restart the `mongosqld` process and rotate the logs. `--usageLogInterval <number>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--usageLogInterval \"Permalink to this definition\") _Default_: 60 _New in version 2.14_. The interval, in seconds, at which usage statistics are written to the log. Set to `0` to disable usage logging. ## Note Usage logging is not enabled for Windows. `--verbose, -v`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--verbose \"Permalink to this definition\") Specifies that [mongosqld](#std-program-mongosqld) should provide more detailed log output. The following table describes the information provided at each log level: | Letter Option | Log Level     | Message Content                                                                                            |\n| ------------- | ------------- | ---------------------------------------------------------------------------------------------------------- |\n| \\--quiet      | None          | Log nothing.                                                                                               |\n| No flag       | Default       | Log messages that notify user of basic [mongosqld](#mongodb-binary-bin.mongosqld)events and state changes. |\n| \\-v           | Administrator | Log messages that provie information to [mongosqld](#mongodb-binary-bin.mongosqld)administrators.          |\n| \\-vv          | Developer     | Log messages useful to MongoDB support and development.                                                    | `--quiet`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--quiet \"Permalink to this definition\") Hides all log output. ### MongoDB TLS/SSL Options `--mongo-ssl`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-ssl \"Permalink to this definition\") _Default_: False Instructs [mongosqld](#std-program-mongosqld) to use TLS/SSL when connecting to a MongoDB instance.\n\n Specifies the `.pem` file containing both the TLS/SSL certificate and key for [mongosqld](#mongodb-binary-bin.mongosqld) to use when connecting to MongoDB. You can specify the file name of the`.pem` file using either using a relative or absolute path. This option is required when using the [\\--mongo-ssl](#std-option-mongosqld.--mongo-ssl) option to connect to a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or [mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos) that has[CAFile](#mongodb-setting-net.ssl.CAFile) enabled _without_ [allowConnectionsWithoutCertificates.](https://www.mongodb.com/docs/manual/reference/configuration-options/#mongodb-setting-net.ssl.allowConnectionsWithoutCertificates) `--mongo-sslPEMKeyPassword <password>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslPEMKeyPassword \"Permalink to this definition\") Specifies the path to a file containing the certificate and private key for connecting to MongoDB. `--mongo-sslAllowInvalidHostnames`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslAllowInvalidHostnames \"Permalink to this definition\") Permits [mongosqld](#mongodb-binary-bin.mongosqld) to connect to a MongoDB server whose hostname differs from the hostname on its TLS/SSL certificate. `--mongo-sslAllowInvalidCertificates`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslAllowInvalidCertificates \"Permalink to this definition\") Permits the MongoDB instance to present an invalid server SSL/TLS certificate. When using the [allowInvalidCertificates](#mongodb-setting-net.ssl.allowInvalidCertificates)setting, MongoDB logs the use of the invalid certificate as a warning. `--mongo-sslCAFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslCAFile \"Permalink to this definition\") Specifies the MongoDB instance's `.pem` file containing the root certificate chain from the Certificate Authority. Specify the file name of the `.pem` file using relative or absolute paths. ## Warning\n\n `--mongo-sslCRLFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslCRLFile \"Permalink to this definition\") Specifies the MongoDB instance's `.pem` file containing the certificate revocation list. `--mongo-sslFIPSMode`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-sslFIPSMode \"Permalink to this definition\") Enables FIPS mode in the installed OpenSSL library. `--mongo-minimumTLSVersion <TLS1_0|TLS1_1|TLS1_2>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-minimumTLSVersion \"Permalink to this definition\") _Default_: TLS1\\_1 Specifies the minimum required TLS version for outgoing connections to a [mongod](https://www.mongodb.com/docs/manual/reference/program/mongod/#mongodb-binary-bin.mongod) or [mongos](https://www.mongodb.com/docs/manual/reference/program/mongos/#mongodb-binary-bin.mongos). instance. The default value `TLS1_1` corresponds to TLS version 1.1. ### Client TLS/SSL Options `--sslMode <mode>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslMode \"Permalink to this definition\") _Default_: disabled _New in version 2.3_. Enable or disable TLS/SSL for connections to [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/). The argument to the `sslMode` option can be one of the following: | Value      | Description                                                                                                    |\n| ---------- | -------------------------------------------------------------------------------------------------------------- |\n| disabled   | [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/) cannot accept connections secured using TLS/SSL.   |\n| allowSSL   | [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/) can accept connections secured using TLS/SSL.      |\n| requireSSL | [mongosqld](https://mongodb.com/docs/bi-connector/master/reference/mongosqld/) can only accept connections secured using TLS/SSL. | `--sslPEMKeyFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslPEMKeyFile \"Permalink to this definition\") Specifies the `.pem` file containing both the TLS/SSL certificate and key for MySQL clients. Specify the file name of the `.pem`file using relative or absolute paths. `--sslPEMKeyPassword <password>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslPEMKeyPassword \"Permalink to this definition\") Specifies the password used to decrypt the private key specified by[\\--sslPEMKeyFile.](#std-option-mongosqld.--sslPEMKeyFile) `--sslAllowInvalidCertificates`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslAllowInvalidCertificates \"Permalink to this definition\") Permits MySQL clients to present invalid client TLS/SSL certificates.\n\n Permits SQL clients to connect to a [mongosqld](#std-program-mongosqld) whose hostname differs from the hostname on its TLS/SSL certificate. `--sslCAFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslCAFile \"Permalink to this definition\") Specifies the [mongosqld](#std-program-mongosqld) `.pem` file containing the root certificate chain from the Certificate Authority. Specify the file name of the `.pem` file using relative or absolute paths. `--sslCRLFile <filename>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--sslCRLFile \"Permalink to this definition\") Specifies the [mongosqld](#std-program-mongosqld) `.pem` file containing the certificate revocation list. `--auth`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--auth \"Permalink to this definition\") Requires authentication for incoming client requests. ## Important _Changed in version 2.4.0_. When authentication is enabled, admin credentials must be provided with the [\\--mongo-username](#std-option-mongosqld.--mongo-username)and [\\--mongo-password](#std-option-mongosqld.--mongo-password)options or the [mongodb.net.auth.username](#mongodb-setting-mongodb.net.auth.username) and[mongodb.net.auth.password](#mongodb-setting-mongodb.net.auth.password) settings in the[configuration file.](#std-label-config-format) `mongosqld` uses the admin credentials to gather metadata on the sampled namespaces and uses the credentials of the connecting client to restrict data to only what the client is authorized to read. For more information on the required permissions for the admin user, see[User Permissions for Cached Sampling.](https://mongodb.com/docs/bi-connector/master/schema/cached-sampling/#std-label-cached-sampling-user-permissions) `--defaultAuthSource <authSource>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--defaultAuthSource \"Permalink to this definition\") _Default_: admin Specifies the default MongoDB authentication source. Set this value to specify a default source that [mongosqld](#std-program-mongosqld)uses when authenticating with a MongoDB database. The authentication mechanisms`GSSAPI` and `PLAIN` use the `$external` source, while`SCRAM-SHA-1` and `SCRAM-SHA-256` use a MongoDB database as its source. If no value is given for this option it defaults to the the MongoDB `admin` database. The `$external` authentication source stores a reference to system users in a MongoDB database called `$external`, but the credentials are stored in an external, non-MongoDB system, such as an LDAP server. Any connection which uses the default value can omit the`source` parameter from its [MySQL](https://mongodb.com/docs/bi-connector/master/connect/mysql/#std-label-connect-mysql-auth)or [Tableau](https://mongodb.com/docs/bi-connector/master/connect/tableau-auth/#std-label-connect-tableau-auth) username. `--defaultAuthMechanism <authMechanism>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--defaultAuthMechanism \"Permalink to this definition\") _Default_: SCRAM-SHA-1\n\n\n\n `--minimumTLSVersion <TLS1_0|TLS1_1|TLS1_2>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--minimumTLSVersion \"Permalink to this definition\") _Default_: TLS1\\_1 Specifies the minimum required TLS version for clients to connect to[mongosqld](#mongodb-binary-bin.mongosqld). The default value `TLS1_1` corresponds to TLS version 1.1. ### Service Options `--serviceName <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--serviceName \"Permalink to this definition\") Name of the system service which runs [mongosqld.](#mongodb-binary-bin.mongosqld) `--serviceDisplayName <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--serviceDisplayName \"Permalink to this definition\") Display name of the system service which runs [mongosqld.](#mongodb-binary-bin.mongosqld) `--serviceDescription <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--serviceDescription \"Permalink to this definition\") Description of the system service which runs [mongosqld.](#mongodb-binary-bin.mongosqld) ### Kerberos Options `--gssapiHostname <hostname>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--gssapiHostname \"Permalink to this definition\") _Default_: First IP address for [net.bindIp.](#mongodb-setting-net.bindIp) _New in version 2.5_. An FQDN for the purpose of configuring Kerberos authentication. The Kerberos hostname overrides the hostname only for the configuration of Kerberos. `--gssapiServiceName <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--gssapiServiceName \"Permalink to this definition\") _Default_: mongosql _New in version 2.5_. Registered name of the service using Kerberos. This option allows you to override the default Kerberos service name component of the Kerberos SPN, on a per-instance basis. If unspecified, the default value is used. `--mongo-gssapiServiceName <service-name>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--mongo-gssapiServiceName \"Permalink to this definition\") _Default_: mongodb _New in version 2.5_. Set the Kerberos SPN when connecting to Kerberized MongoDB instances. This value must match the service name set on MongoDB instances. `--gssapiConstrainedDelegation`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--gssapiConstrainedDelegation \"Permalink to this definition\") _Default_: False _New in version 2.11_. Use proxy credentials for Kerberos authorization, enabling constrained delegation. Requires [mongosqld](#mongodb-binary-bin.mongosqld) service credentials to be present in the client keytab as well as the service keytab. See[Configure Kerberos for BI Connector](https://mongodb.com/docs/bi-connector/master/tutorial/kerberos/#std-label-configure-kerberos) for more information about Kerberos configuration. ### Socket Options `--filePermissions <mode>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--filePermissions \"Permalink to this definition\") _Default_: 448 Specify the permissions for the Unix domain socket file.\n\n Disable listening on Unix domain sockets. `--unixSocketPrefix <path>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--unixSocketPrefix \"Permalink to this definition\") _Default_: /tmp Specifies an alternative directory for the [mongosqld](#std-program-mongosqld) Unix domain socket. [mongosqld](#std-program-mongosqld) will create a socket file called `mysql.sock` underneath this path. If you do not specify [\\--unixSocketPrefix](#std-option-mongosqld.--unixSocketPrefix), the socket will exist at`/tmp/mysql.sock`. ### Set Parameter Option `--setParameter <parameter>`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#std-option-mongosqld.--setParameter \"Permalink to this definition\")\n\n The following example starts [mongosqld](#mongodb-binary-bin.mongosqld) and uses the `--setParameter` option to specify the[type conversion mode:](https://mongodb.com/docs/bi-connector/master/reference/type-conversion/) ```shell mongosqld --setParameter \"type_conversion_mode=mongosql\" \n``` ## Configuration File You may configure [mongosqld](#mongodb-binary-bin.mongosqld) using a [YAML](http://yaml.org/)configuration file. This file may contain the settings listed in the following sections. ## Note You may use expansion directives in your configuration file to load externally sourced configuration values. Expansion directives obscure confidential information like security certificates and passwords. To learn more about using expansion directives, see [Externally Sourced Configuration File Values](https://www.mongodb.com/docs/manual/reference/expansion-directives/)in the MongoDB manual. ### Logging Options ``` systemLog:   logAppend: <boolean>   logRotate: \"rename\"|\"reopen\"   path: <string>   quiet: <boolean>   verbosity: <integer> \n``` | Name                                                                                                                                     | Type    | Corresponds to                                    |\n| ---------------------------------------------------------------------------------------------------------------------------------------- | ------- | ------------------------------------------------- |\n| systemLog.logAppend[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-systemLog.logAppend \"Permalink to this definition\") | boolean | [\\--logAppend](#std-option-mongosqld.--logAppend) |\n| systemLog.logRotate[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-systemLog.logRotate \"Permalink to this definition\") | string  | [\\--logRotate](#std-option-mongosqld.--logRotate) |\n| systemLog.path[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-systemLog.path \"Permalink to this definition\")           | string  | [\\--logPath](#std-option-mongosqld.--logPath)     |\n| systemLog.quiet[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-systemLog.quiet \"Permalink to this definition\")         | boolean | [\\--quiet](#std-option-mongosqld.--quiet)         |\n| systemLog.verbosity[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-systemLog.verbosity \"Permalink to this definition\") | integer | [\\--verbose](#std-option-mongosqld.--verbose)     | ### Schema Options ``` schema:   path: <string>   maxVarcharLength: <integer> \n```\n\n ### Data Sampling Options ``` schema:   sample:     size: <integer>     prejoin: <boolean>     namespaces: <array of strings>     uuidSubtype3Encoding: <[old|csharp|java]>   stored:     mode: <[custom|auto]>     source: <string>     name: <db-name>   refreshIntervalSecs: <integer> \n```\n\n ### Runtime Options ``` runtime:   memory:     maxPerStage: <integer>     maxPerServer: <integer>     maxPerConnection: <integer> \n``` ## Important BI Connector provides the following options for controlling the amount of system memory which the [mongosqld](#mongodb-binary-bin.mongosqld) process may use for sending queries to MongoDB. These limits do not include the memory which BI Connector uses for other purposes, such as data structure overhead, so the total amount of memory BI Connectoruses will be higher than the limits set with these options. `runtime.memory.maxPerStage`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-runtime.memory.maxPerStage \"Permalink to this definition\") _Type_: integer _Default_: unlimited Specifies the maximum amount of memory in bytes that a query execution stage may use. `runtime.memory.maxPerServer`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-runtime.memory.maxPerServer \"Permalink to this definition\") _Type_: integer _Default_: unlimited _New in version 2.5_. Specifies the maximum amount of memory in bytes that a[mongosqld](#mongodb-binary-bin.mongosqld) process may use. `runtime.memory.maxPerConnection`[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-runtime.memory.maxPerConnection \"Permalink to this definition\") _Type_: integer _Default_: unlimited _New in version 2.5_. Specifies the maximum amount of memory in bytes that a[mongosqld](#mongodb-binary-bin.mongosqld) client connection may use. ### Network Options ``` net:   bindIp: <string>   port: <integer>   unixDomainSocket:     enabled: <boolean>     pathPrefix: <string>     filePermissions: <string>   ssl:     mode: <string>     allowInvalidCertificates: <boolean>     PEMKeyFile: <string>     PEMKeyPassword: <string>     CAFile: <string> \n```\n\n ### Security Options ``` security:   enabled: <boolean>   defaultMechanism: <string>   defaultSource: <string>   gssapi:     hostname: <string>     serviceName: <string> \n```\n\n ### MongoDB Host Options ``` mongodb:   versionCompatibility: <string>   net:     uri: <string>     ssl:       enabled: <boolean>       allowInvalidCertificates: <boolean>       allowInvalidHostnames: <boolean>       PEMKeyFile: <string>       PEMKeyPassword: <string>       CAFile: <string>       CRLFile: <string>       FIPSMode: <boolean>     auth:       username: <username>       password: <password>       source: <auth-db-name>       mechanism: <auth-mechanism>       gssapiServiceName: <service> \n```\n\n ### Process Management Options ``` processManagement:   service:     name: <string>     displayName: <string>     description: <string> \n``` | Name                                                                                                                                                                         | Type   | Corresponds to                                                      |\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------ | ------------------------------------------------------------------- |\n| processManagement.service.name[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-processManagement.service.name \"Permalink to this definition\")               | string | [\\--serviceName](#std-option-mongosqld.--serviceName)               |\n| processManagement.service.displayName[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-processManagement.service.displayName \"Permalink to this definition\") | string | [\\--serviceDisplayName](#std-option-mongosqld.--serviceDisplayName) |\n| processManagement.service.description[![](https://mongodb.com/docs/bi-connector/master/assets/link.svg)](#mongodb-setting-processManagement.service.description \"Permalink to this definition\") | string | [\\--serviceDescription](#std-option-mongosqld.--serviceDescription) | ### Set Parameter Options ```shell setParameter:   polymorphic_type_conversion_mode: <string>   type_conversion_mode: <string> \n```\n\n These configuration file options are also available as system variables. For more information, see[System Variables.](https://mongodb.com/docs/bi-connector/master/reference/system-variables/#std-label-system-environment-variables) ### Load External Configuration Values You may use expansion directives in your configuration file to load externally sourced configuration values. Expansion directives obscure confidential information like security certificates and passwords. To learn more about using expansion directives, see [Externally Sourced Configuration File Values](https://www.mongodb.com/docs/manual/reference/expansion-directives/)in the MongoDB manual. ### Example Configuration File ## Note The paths used in this example configuration file are Linux-specific. Check your local system documentation to determine the correct paths for your system. ``` systemLog:   logAppend: false   path: \"/var/log/mongosqld/mongosqld.log\"   verbosity: 2 security:   enabled: true mongodb:   net:     uri: \"mongo.example.com:27017\"     auth:       username: \"root\"       password: \"changeme\" net:   bindIp: 192.0.2.14   port: 3307   ssl:     mode: \"allowSSL\"     PEMKeyFile: \"/vagrant/certificates/mongosqld-server.pem\"     CAFile: \"/vagrant/certificates/ca.crt\" schema:   sample:     namespaces: \"inventory.*\" processManagement:   service:     name: mongosqld     displayName: mongosqld     description: \"BI Connector SQL proxy server\" \n``` ## Usage Examples ### `mongosqld` with a Schema File Use the [\\--schema](#std-option-mongosqld.--schema) option to specify a[schema file](https://mongodb.com/docs/bi-connector/master/schema-configuration/) for [mongosqld](#mongodb-binary-bin.mongosqld)to use. ```shell mongosqld --schema /path/to/schema-file.drdl \n``` ### Specify a Collection to Sample Use the [\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces)option to specify a database and collection for [mongosqld](#mongodb-binary-bin.mongosqld) to sample data from. If you start [mongosqld](#mongodb-binary-bin.mongosqld) without the[\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces)option, it samples data from all available databases except the `admin` and `local` databases. The following example samples data from a collection named`addresses` in a database named `contacts`: ```shell mongosqld --sampleNamespaces contacts.addresses \n``` ### Specify Multiple Collections to Sample To sample data from all the collections in a database, use the[\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces) option with a wildcard (`*`). The following example samples data from all the collections in a database named `inventory`: ```shell mongosqld --sampleNamespaces 'inventory.*' \n``` You can repeat the [\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces) at the command line to sample data from multiple collections within a database, or from multiple collections across several databases. The following example samples data from all the collections in databases named `cars` and `boats`: ```shell mongosqld --sampleNamespaces 'cars.*' \\           --sampleNamespaces 'boats.*' \\ \n``` You can mix and match wildcards and specific collections with multiple[\\--sampleNamespaces](#std-option-mongosqld.--sampleNamespaces) options. The following example samples data from all collections in a database named `orders`, as well as the `FY2015` and`FY2016` collections from the `expenses` database: ```shell mongosqld --sampleNamespaces 'orders.*' \\           --sampleNamespaces expenses.FY2015 \\           --sampleNamespaces expenses.FY2016 \\ \n``` ## Note\n\n ### Exclude Databases and Collections from Sampling To exclude specified namespaces from the data sampling process, precede the namespace with a `~` (tilde) character. The following example includes all databases and collections except the `apples` collection in the `fruit` database: ```shell mongosqld --sampleNamespaces ~fruit.apples \n``` Use the `*` wildcard character to indicate all collections in a database. The following example excludes the entire `vehicles`database from data sampling: ```shell mongosqld --sampleNamespaces '~vehicles.*' \n``` ### Sample All Documents in a Collection If you have a collection in which some documents have different fields from others and you want to ensure that the schema takes them all into consideration, set the [\\--sampleSize](#std-option-mongosqld.--sampleSize) option to `0`. This causes [mongosqld](#mongodb-binary-bin.mongosqld)to examine all documents in the specified [namespace](#std-option-mongosqld.--sampleNamespaces) when it builds its schema. The following example instructs [mongosqld](#mongodb-binary-bin.mongosqld) to build the schema based on all documents in the `inventory.electronics`namespace. ```shell mongosqld --sampleNamespaces inventory.electronics \\           --sampleSize 0 \n``` ### Specify a Database to Persist a Schema Use the [\\--schemaSource](#std-option-mongosqld.--schemaSource) option to specify a database in which to store schema information. Use the[\\--schemaMode](#std-option-mongosqld.--schemaMode) option to specify whether [mongosqld](#mongodb-binary-bin.mongosqld) can write to the schema database or only read from it. The following example command uses a database named `sampleDb` to store schema information and sets [\\--schemaMode](#std-option-mongosqld.--schemaMode) to `auto`. ```shell mongosqld --schemaSource sampleDb --schemaMode auto \n``` ## Important If `mongosqld` has [authentication](#std-option-mongosqld.--auth)enabled, the authenticated user must have the write privilege on the specified [\\--schemaSource](#std-option-mongosqld.--schemaSource) database. See [Built-In Roles](https://www.mongodb.com/docs/manual/reference/built-in-roles/) for more information about the`readWrite` role. ### Specify a Data Resampling Interval Use the [\\--schemaRefreshIntervalSecs](#std-option-mongosqld.--schemaRefreshIntervalSecs) option to specify an interval in seconds for [mongosqld](#mongodb-binary-bin.mongosqld) to resample data and regenerate the schema. The default value for this option is `0`, which means that [mongosqld](#mongodb-binary-bin.mongosqld) never resamples data. If you set a resampling interval with[\\--schemaRefreshIntervalSecs](#std-option-mongosqld.--schemaRefreshIntervalSecs) and you specify a schema database with [\\--schemaSource](#std-option-mongosqld.--schemaSource), you cannot set [\\--schemaMode](#std-option-mongosqld.--schemaMode) to `custom`. The following example does not specify a schema database or a schema file, so it holds its schema in memory. It uses[\\--schemaRefreshIntervalSecs](#std-option-mongosqld.--schemaRefreshIntervalSecs) to specify a data resampling interval of 3600 seconds. ```shell mongosqld --schemaRefreshIntervalSecs 3600 \n``` ### `mongosqld` with Authentication Enabled To connect [mongosqld](#mongodb-binary-bin.mongosqld) to a MongoDB instance running with [authentication](https://www.mongodb.com/docs/manual/core/authentication/) enabled, use the [\\--auth](#std-option-mongosqld.--auth) option and provide MongoDB user credentials.\n\n ```shell mongosqld --auth \\           --mongo-username reportsUser \\           --mongo-password reportsPass \\           --sampleNamespaces reports.inventory \n``` This example does not specify an authenticating database with the[\\--mongo-authenticationSource](#std-option-mongosqld.--mongo-authenticationSource) option, so it defaults to`admin`. It does not specify an authentication mechanism with the[\\--mongo-authenticationMechanism](#std-option-mongosqld.--mongo-authenticationMechanism) option, so it defaults to`SCRAM-SHA-1`. ### `mongosqld` with a Configuration File If you wish to specify a configuration file which saves logs to`/var/log/mongosqld.log` and loads a schema from `/var/schema.drdl`, you may save a file such as the following to `/etc/mongosqld.conf`: ## Warning All paths specified in the configuration file must be absolute, e.g. they must begin with `/`. ``` systemLog:   path: /var/log/mongosqld.log schema:   path: /var/schema.drdl \n``` You may then start [mongosqld](#mongodb-binary-bin.mongosqld) with the[\\--config](#std-option-mongosqld.--config) option: ```shell mongosqld --config /etc/mongosqld.conf \n``` For more information on starting `mongosqld` as a system service, see the [Installation Guide](https://mongodb.com/docs/bi-connector/master/installation/#std-label-installation-guides) for your operating system. ### Usage with Atlas [Atlas](https://docs.atlas.mongodb.com/) is a cloud service for running, monitoring, and maintaining MongoDB deployments, including the provisioning of dedicated servers for the MongoDB instances. Atlas uses TLS/SSL to encrypt connections and enforces authentication by default. ## Note With the MongoDB Atlas free tier, BI Connector cannot run aggregation pipelines using the `allowDiskUse` option. This option allows aggregation stages to write data as temporary files to disk. To review the MongoDB Atlas free tier constraints, see the [MongoDB Atlas manual](https://docs.atlas.mongodb.com/create-new-cluster/#service-m0-free-tier-limitations). [mongosqld](#mongodb-binary-bin.mongosqld) can use any valid TLS certificate issued by a certificate authority, or a self-signed certificate. If you use a self-signed certificate, although the communications channel will be encrypted, there will be no validation of server identity. Although such a situation will prevent eavesdropping on the connection, it leaves you vulnerable to a man-in-the-middle attack. Using a certificate signed by a trusted certificate authority will permit your MySQL client to verify the server's identity. For _testing_ purposes, you can create a `.pem` key file named `test.pem`using the `openssl` tool: ```shell openssl req -nodes -newkey rsa:2048 -keyout test.key -out test.crt -x509 -days 365 -subj \"/C=US/ST=test/L=test/O=test Security/OU=IT Department/CN=test.com\" cat test.crt test.key > test.pem \n``` Start [mongosqld](#mongodb-binary-bin.mongosqld) with the following options: * [\\--mongo-ssl](#std-option-mongosqld.--mongo-ssl)\n* [\\--auth](#std-option-mongosqld.--auth)\n* [\\--sslPEMKeyFile](#std-option-mongosqld.--sslPEMKeyFile)\n* [\\--mongo-uri](#std-option-mongosqld.--mongo-uri)\n* [\\--sslMode](#std-option-mongosqld.--sslMode)\n* [\\--mongo-username](#std-option-mongosqld.--mongo-username)\n* [\\--mongo-password](#std-option-mongosqld.--mongo-password)\n\n ```shell mongosqld --mongo-ssl \\           --auth \\           --sslPEMKeyFile test.pem \\           --mongo-uri <uri> \\           --sslMode allowSSL \\           --mongo-username <username> \\           --mongo-password <password> \n``` Pass your username, password, and authentication database to your SQL client. For example, using `mysql` without verifying your [mongosqld](#mongodb-binary-bin.mongosqld)server certificate: ```shell mysql --host <mongosqld-host> --port <mongosqld-port> -u <username>?source=admin -p --ssl-mode required --enable-cleartext-plugin \n``` Refer to [Connect from the MySQL Client](https://mongodb.com/docs/bi-connector/master/connect/mysql/) for more details on using the`mysql` client with the BI Connector. ## Sampling Mode Reference Chart The chart below describes types of [mongosqld](#mongodb-binary-bin.mongosqld)startup configurations and the [options](#std-label-msqld-core-options) used with each.\n\n ### Invalid Configurations The following [mongosqld](#mongodb-binary-bin.mongosqld) option configurations are invalid and cause an error at startup.\n\n ← [MongoDB Connector for BI Components](https://mongodb.com/docs/bi-connector/master/components/ \"Previous Section\")[mongodrdl](https://mongodb.com/docs/bi-connector/master/reference/mongodrdl/ \"Next Section\") →"
}